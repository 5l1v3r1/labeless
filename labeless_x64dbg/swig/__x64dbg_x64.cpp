/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ACTIVEVIEW swig_types[0]
#define SWIGTYPE_p_ADDRINFOFLAGS swig_types[1]
#define SWIGTYPE_p_ARGTYPE swig_types[2]
#define SWIGTYPE_p_ArgumentInfoArray swig_types[3]
#define SWIGTYPE_p_BASIC_INSTRUCTION_INFO swig_types[4]
#define SWIGTYPE_p_BPDLLTYPE swig_types[5]
#define SWIGTYPE_p_BPEXTYPE swig_types[6]
#define SWIGTYPE_p_BPHWSIZE swig_types[7]
#define SWIGTYPE_p_BPHWTYPE swig_types[8]
#define SWIGTYPE_p_BPMAP swig_types[9]
#define SWIGTYPE_p_BPMEMTYPE swig_types[10]
#define SWIGTYPE_p_BPXTYPE swig_types[11]
#define SWIGTYPE_p_BRIDGEBP swig_types[12]
#define SWIGTYPE_p_BRIDGE_ADDRINFO swig_types[13]
#define SWIGTYPE_p_BookmarkInfoArray swig_types[14]
#define SWIGTYPE_p_BridgeCFGraphList swig_types[15]
#define SWIGTYPE_p_CELLINFO swig_types[16]
#define SWIGTYPE_p_CONSTANTINFO swig_types[17]
#define SWIGTYPE_p_CommentInfoArray swig_types[18]
#define SWIGTYPE_p_DBGCALLSTACK swig_types[19]
#define SWIGTYPE_p_DBGCALLSTACKENTRY swig_types[20]
#define SWIGTYPE_p_DBGFUNCTIONS_ swig_types[21]
#define SWIGTYPE_p_DBGMSG swig_types[22]
#define SWIGTYPE_p_DBGPATCHINFO swig_types[23]
#define SWIGTYPE_p_DBGPROCESSINFO swig_types[24]
#define SWIGTYPE_p_DBGRELOCATIONINFO swig_types[25]
#define SWIGTYPE_p_DBGSEHCHAIN swig_types[26]
#define SWIGTYPE_p_DBGSEHRECORD swig_types[27]
#define SWIGTYPE_p_DBGSTATE swig_types[28]
#define SWIGTYPE_p_DISASM_ARG swig_types[29]
#define SWIGTYPE_p_DISASM_ARGTYPE swig_types[30]
#define SWIGTYPE_p_DISASM_INSTR swig_types[31]
#define SWIGTYPE_p_DISASM_INSTRTYPE swig_types[32]
#define SWIGTYPE_p_ENCODETYPE swig_types[33]
#define SWIGTYPE_p_FILETIME swig_types[34]
#define SWIGTYPE_p_FLAGS swig_types[35]
#define SWIGTYPE_p_FUNCTION swig_types[36]
#define SWIGTYPE_p_FUNCTION_LOOP_INFO swig_types[37]
#define SWIGTYPE_p_FUNCTYPE swig_types[38]
#define SWIGTYPE_p_FunctionInfoArray swig_types[39]
#define SWIGTYPE_p_GUIMSG swig_types[40]
#define SWIGTYPE_p_HANDLEINFO swig_types[41]
#define SWIGTYPE_p_HEAPINFO swig_types[42]
#define SWIGTYPE_p_ICONDATA swig_types[43]
#define SWIGTYPE_p_LASTERROR swig_types[44]
#define SWIGTYPE_p_LASTSTATUS swig_types[45]
#define SWIGTYPE_p_LOOP swig_types[46]
#define SWIGTYPE_p_LOOPTYPE swig_types[47]
#define SWIGTYPE_p_LabelInfoArray swig_types[48]
#define SWIGTYPE_p_ListInfo swig_types[49]
#define SWIGTYPE_p_MEMMAP swig_types[50]
#define SWIGTYPE_p_MEMORY_INFO swig_types[51]
#define SWIGTYPE_p_MEMORY_SIZE swig_types[52]
#define SWIGTYPE_p_MEMPAGE swig_types[53]
#define SWIGTYPE_p_MEMPAGEArray swig_types[54]
#define SWIGTYPE_p_MSG swig_types[55]
#define SWIGTYPE_p_MXCSRFIELDS swig_types[56]
#define SWIGTYPE_p_ModuleInfoArray swig_types[57]
#define SWIGTYPE_p_ModuleSectionInfoArray swig_types[58]
#define SWIGTYPE_p_RECT swig_types[59]
#define SWIGTYPE_p_REGDUMP swig_types[60]
#define SWIGTYPE_p_REGISTERCONTEXT swig_types[61]
#define SWIGTYPE_p_SCRIPTBRANCH swig_types[62]
#define SWIGTYPE_p_SCRIPTBRANCHTYPE swig_types[63]
#define SWIGTYPE_p_SCRIPTLINETYPE swig_types[64]
#define SWIGTYPE_p_SCRIPTTYPEINFO swig_types[65]
#define SWIGTYPE_p_SEGMENTREG swig_types[66]
#define SWIGTYPE_p_SELECTIONDATA swig_types[67]
#define SWIGTYPE_p_STACK_COMMENT swig_types[68]
#define SWIGTYPE_p_STRING_TYPE swig_types[69]
#define SWIGTYPE_p_SYMBOLCBINFO swig_types[70]
#define SWIGTYPE_p_SYMBOLINFO_ swig_types[71]
#define SWIGTYPE_p_SYMBOLMODULEINFO swig_types[72]
#define SWIGTYPE_p_SYMBOLPTR_ swig_types[73]
#define SWIGTYPE_p_SYMBOLTYPE swig_types[74]
#define SWIGTYPE_p_Script__Argument__ArgumentInfo swig_types[75]
#define SWIGTYPE_p_Script__Bookmark__BookmarkInfo swig_types[76]
#define SWIGTYPE_p_Script__Comment__CommentInfo swig_types[77]
#define SWIGTYPE_p_Script__Function__FunctionInfo swig_types[78]
#define SWIGTYPE_p_Script__Label__LabelInfo swig_types[79]
#define SWIGTYPE_p_Script__Module__ModuleInfo swig_types[80]
#define SWIGTYPE_p_Script__Module__ModuleSectionInfo swig_types[81]
#define SWIGTYPE_p_Script__Symbol__SymbolInfo swig_types[82]
#define SWIGTYPE_p_SymbolInfoArray swig_types[83]
#define SWIGTYPE_p_TCPCONNECTIONINFO swig_types[84]
#define SWIGTYPE_p_THREADALLINFO swig_types[85]
#define SWIGTYPE_p_THREADINFO swig_types[86]
#define SWIGTYPE_p_THREADLIST swig_types[87]
#define SWIGTYPE_p_THREADPRIORITY swig_types[88]
#define SWIGTYPE_p_THREADWAITREASON swig_types[89]
#define SWIGTYPE_p_TRACERECORDBYTETYPE swig_types[90]
#define SWIGTYPE_p_TRACERECORDTYPE swig_types[91]
#define SWIGTYPE_p_VALUE_INFO swig_types[92]
#define SWIGTYPE_p_WATCHDOGMODE swig_types[93]
#define SWIGTYPE_p_WATCHINFO swig_types[94]
#define SWIGTYPE_p_WATCHVARTYPE swig_types[95]
#define SWIGTYPE_p_WINDOW_INFO swig_types[96]
#define SWIGTYPE_p_X87CONTROLWORDFIELDS swig_types[97]
#define SWIGTYPE_p_X87FPU swig_types[98]
#define SWIGTYPE_p_X87FPUREGISTER swig_types[99]
#define SWIGTYPE_p_X87STATUSWORDFIELDS swig_types[100]
#define SWIGTYPE_p_XREFTYPE swig_types[101]
#define SWIGTYPE_p_XREF_INFO swig_types[102]
#define SWIGTYPE_p_XREF_RECORD swig_types[103]
#define SWIGTYPE_p_YMMREGISTER swig_types[104]
#define SWIGTYPE_p__MEMORY_BASIC_INFORMATION swig_types[105]
#define SWIGTYPE_p__TYPEDESCRIPTOR swig_types[106]
#define SWIGTYPE_p__XMMREGISTER swig_types[107]
#define SWIGTYPE_p___int64 swig_types[108]
#define SWIGTYPE_p_bool swig_types[109]
#define SWIGTYPE_p_char swig_types[110]
#define SWIGTYPE_p_f___bool swig_types[111]
#define SWIGTYPE_p_f___p_char swig_types[112]
#define SWIGTYPE_p_f___unsigned_long_long swig_types[113]
#define SWIGTYPE_p_f___void swig_types[114]
#define SWIGTYPE_p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool swig_types[115]
#define SWIGTYPE_p_f_p_DBGCALLSTACK__void swig_types[116]
#define SWIGTYPE_p_f_p_DBGCALLSTACK_bool__void swig_types[117]
#define SWIGTYPE_p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int swig_types[118]
#define SWIGTYPE_p_f_p_DBGPATCHINFO_p_size_t__bool swig_types[119]
#define SWIGTYPE_p_f_p_DBGSEHCHAIN__void swig_types[120]
#define SWIGTYPE_p_f_p_ListInfo__bool swig_types[121]
#define SWIGTYPE_p_f_p_ListInfo__void swig_types[122]
#define SWIGTYPE_p_f_p_bool__bool swig_types[123]
#define SWIGTYPE_p_f_p_char__bool swig_types[124]
#define SWIGTYPE_p_f_p_char_bool__bool swig_types[125]
#define SWIGTYPE_p_f_p_char_p_size_t__bool swig_types[126]
#define SWIGTYPE_p_f_p_p_DBGPROCESSINFO_p_int__bool swig_types[127]
#define SWIGTYPE_p_f_p_q_const__SYMBOLPTR__p_void__bool swig_types[128]
#define SWIGTYPE_p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool swig_types[129]
#define SWIGTYPE_p_f_p_q_const__char__bool swig_types[130]
#define SWIGTYPE_p_f_p_q_const__char__unsigned_long_long swig_types[131]
#define SWIGTYPE_p_f_p_q_const__char__void swig_types[132]
#define SWIGTYPE_p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long swig_types[133]
#define SWIGTYPE_p_f_p_q_const__char_p_char_int__int swig_types[134]
#define SWIGTYPE_p_f_p_q_const__char_p_p_char_int__int swig_types[135]
#define SWIGTYPE_p_f_p_q_const__char_p_p_char_p_int__void swig_types[136]
#define SWIGTYPE_p_f_p_q_const__char_p_unsigned_long_long__bool swig_types[137]
#define SWIGTYPE_p_f_p_q_const__char_size_t_p_char__bool swig_types[138]
#define SWIGTYPE_p_f_p_q_const__char_size_t_p_char__void swig_types[139]
#define SWIGTYPE_p_f_p_q_const__char_unsigned_long_long__unsigned_long_long swig_types[140]
#define SWIGTYPE_p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool swig_types[141]
#define SWIGTYPE_p_f_unsigned_int__bool swig_types[142]
#define SWIGTYPE_p_f_unsigned_long_long__TRACERECORDBYTETYPE swig_types[143]
#define SWIGTYPE_p_f_unsigned_long_long__TRACERECORDTYPE swig_types[144]
#define SWIGTYPE_p_f_unsigned_long_long__bool swig_types[145]
#define SWIGTYPE_p_f_unsigned_long_long__int swig_types[146]
#define SWIGTYPE_p_f_unsigned_long_long__unsigned_int swig_types[147]
#define SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long swig_types[148]
#define SWIGTYPE_p_f_unsigned_long_long_bool__bool swig_types[149]
#define SWIGTYPE_p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool swig_types[150]
#define SWIGTYPE_p_f_unsigned_long_long_int__void swig_types[151]
#define SWIGTYPE_p_f_unsigned_long_long_p_DBGPATCHINFO__bool swig_types[152]
#define SWIGTYPE_p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool swig_types[153]
#define SWIGTYPE_p_f_unsigned_long_long_p_ListInfo__bool swig_types[154]
#define SWIGTYPE_p_f_unsigned_long_long_p_char__bool swig_types[155]
#define SWIGTYPE_p_f_unsigned_long_long_p_char_bool__bool swig_types[156]
#define SWIGTYPE_p_f_unsigned_long_long_p_char_int__int swig_types[157]
#define SWIGTYPE_p_f_unsigned_long_long_p_char_p_int__bool swig_types[158]
#define SWIGTYPE_p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool swig_types[159]
#define SWIGTYPE_p_f_unsigned_long_long_p_q_const__char__bool swig_types[160]
#define SWIGTYPE_p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long swig_types[161]
#define SWIGTYPE_p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool swig_types[162]
#define SWIGTYPE_p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool swig_types[163]
#define SWIGTYPE_p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool swig_types[164]
#define SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long__bool swig_types[165]
#define SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long__void swig_types[166]
#define SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool swig_types[167]
#define SWIGTYPE_p_f_unsigned_long_p_char__bool swig_types[168]
#define SWIGTYPE_p_float swig_types[169]
#define SWIGTYPE_p_int swig_types[170]
#define SWIGTYPE_p_long swig_types[171]
#define SWIGTYPE_p_long_long swig_types[172]
#define SWIGTYPE_p_p_DBGPROCESSINFO swig_types[173]
#define SWIGTYPE_p_p_char swig_types[174]
#define SWIGTYPE_p_p_unsigned_long swig_types[175]
#define SWIGTYPE_p_short swig_types[176]
#define SWIGTYPE_p_signed___int64 swig_types[177]
#define SWIGTYPE_p_signed_char swig_types[178]
#define SWIGTYPE_p_size_t swig_types[179]
#define SWIGTYPE_p_unsigned___int64 swig_types[180]
#define SWIGTYPE_p_unsigned_char swig_types[181]
#define SWIGTYPE_p_unsigned_int swig_types[182]
#define SWIGTYPE_p_unsigned_long swig_types[183]
#define SWIGTYPE_p_unsigned_long_long swig_types[184]
#define SWIGTYPE_p_unsigned_short swig_types[185]
#define SWIGTYPE_p_void swig_types[186]
#define SWIGTYPE_p_wchar_t swig_types[187]
static swig_type_info *swig_types[189];
static swig_module_info swig_module = {swig_types, 188, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _x64dbgapi64.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__x64dbgapi64

#else
#  define SWIG_init    init_x64dbgapi64

#endif
#define SWIG_name    "_x64dbgapi64"

#define SWIGVERSION 0x030002 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


typedef struct SWIGCDATA {
    char *data;
    size_t   len;
} SWIGCDATA;



extern "C"  {    


static SWIGCDATA cdata_void(void *ptr, size_t nelements)



{
  SWIGCDATA d;
  d.data = (char *) ptr;



  d.len  = nelements;

   return d;
}

}



SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
#if PY_VERSION_HEX >= 0x03000000
      {
        long v = PyLong_AsLong(obj);
        if (!PyErr_Occurred()) {
          if (v < 0) {
            return SWIG_OverflowError;
          }
        } else {
          PyErr_Clear();
        }
      }
#endif
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if PY_VERSION_HEX >= 0x03010000
      return PyUnicode_DecodeUTF8(carray, static_cast< int >(size), "surrogateescape");
#else
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_UNICODE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_UNICODE_ARG(obj) ((PyUnicodeObject*) (obj))
#endif


#include "bridgelist.h"
#include "bridgemain.h"
#include "_dbgfunctions.h"


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


#include <wchar.h>
#include <limits.h>
#ifndef WCHAR_MIN
#  define WCHAR_MIN 0
#endif
#ifndef WCHAR_MAX
#  define WCHAR_MAX 65535
#endif


SWIGINTERN swig_type_info*
SWIG_pwchar_descriptor()
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_wchar_t");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromWCharPtrAndSize(const wchar_t * carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pwchar_descriptor = SWIG_pwchar_descriptor();
      return pwchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< wchar_t * >(carray), pwchar_descriptor, 0) : SWIG_Py_Void();
    } else {
      return PyUnicode_FromWideChar(carray, static_cast< int >(size));
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromWCharPtr(const wchar_t *cptr)
{ 
  return SWIG_FromWCharPtrAndSize(cptr, (cptr ? wcslen(cptr) : 0));
}





SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    /* special case of single char conversion when we don't need space for NUL */
    if (size == 1 && csize == 2 && cptr && !cptr[1]) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


size_t
SWIG_strnlen(const char* s, size_t maxlen)
{
  const char *p;
  for (p = s; maxlen-- && *p; p++)
    ;
  return p - s;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_short  (unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


typedef MEMPAGE MEMPAGEArray;

SWIGINTERN MEMPAGEArray *new_MEMPAGEArray(size_t nelements){
    return (new MEMPAGE[nelements]);
  }
SWIGINTERN void delete_MEMPAGEArray(MEMPAGEArray *self){
    delete[] self;
  }
SWIGINTERN MEMPAGE MEMPAGEArray___getitem__(MEMPAGEArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void MEMPAGEArray___setitem__(MEMPAGEArray *self,size_t index,MEMPAGE value){
    self[index] = value;
  }
SWIGINTERN MEMPAGE *MEMPAGEArray_cast(MEMPAGEArray *self){
    return self;
  }
SWIGINTERN MEMPAGEArray *MEMPAGEArray_frompointer(MEMPAGE *t){
    return static_cast< MEMPAGEArray * >(t);
  }

MEMPAGE* void_to_MEMPAGE(void* x) {
   return static_cast< MEMPAGE* >(x);
}

SWIGINTERN bool DBGFUNCTIONS__AssembleAtEx_(DBGFUNCTIONS_ *self,duint addr,char const *instruction,char *error,bool fillnop){ return self->AssembleAtEx(addr, instruction, error, fillnop); }
SWIGINTERN bool DBGFUNCTIONS__SectionFromAddr_(DBGFUNCTIONS_ *self,duint addr,char *section){ return self->SectionFromAddr(addr, section); }
SWIGINTERN bool DBGFUNCTIONS__ModNameFromAddr_(DBGFUNCTIONS_ *self,duint addr,char *modname,bool extension){ return self->ModNameFromAddr(addr, modname, extension); }
SWIGINTERN duint DBGFUNCTIONS__ModBaseFromAddr_(DBGFUNCTIONS_ *self,duint addr){ return self->ModBaseFromAddr(addr); }
SWIGINTERN duint DBGFUNCTIONS__ModBaseFromName_(DBGFUNCTIONS_ *self,char const *modname){ return self->ModBaseFromName(modname); }
SWIGINTERN duint DBGFUNCTIONS__ModSizeFromAddr_(DBGFUNCTIONS_ *self,duint addr){ return self->ModSizeFromAddr(addr); }
SWIGINTERN bool DBGFUNCTIONS__Assemble_(DBGFUNCTIONS_ *self,duint addr,unsigned char *dest,int *size,char const *instruction,char *error){ return self->Assemble(addr, dest, size, instruction, error); }
SWIGINTERN bool DBGFUNCTIONS__PatchGet_(DBGFUNCTIONS_ *self,duint addr){ return self->PatchGet(addr); }
SWIGINTERN bool DBGFUNCTIONS__PatchInRange_(DBGFUNCTIONS_ *self,duint start,duint end){ return self->PatchInRange(start, end); }
SWIGINTERN bool DBGFUNCTIONS__MemPatch_(DBGFUNCTIONS_ *self,duint va,unsigned char const *src,duint size){ return self->MemPatch(va, src, size); }
SWIGINTERN void DBGFUNCTIONS__PatchRestoreRange_(DBGFUNCTIONS_ *self,duint start,duint end){ return self->PatchRestoreRange(start, end); }
SWIGINTERN bool DBGFUNCTIONS__PatchEnum_(DBGFUNCTIONS_ *self,DBGPATCHINFO *patchlist,size_t *cbsize){ return self->PatchEnum(patchlist, cbsize); }
SWIGINTERN bool DBGFUNCTIONS__PatchRestore_(DBGFUNCTIONS_ *self,duint addr){ return self->PatchRestore(addr); }
SWIGINTERN int DBGFUNCTIONS__PatchFile_(DBGFUNCTIONS_ *self,DBGPATCHINFO *patchlist,int count,char const *szFileName,char *error){ return self->PatchFile(patchlist, count, szFileName, error); }
SWIGINTERN int DBGFUNCTIONS__ModPathFromAddr_(DBGFUNCTIONS_ *self,duint addr,char *path,int size){ return self->ModPathFromAddr(addr, path, size); }
SWIGINTERN int DBGFUNCTIONS__ModPathFromName_(DBGFUNCTIONS_ *self,char const *modname,char *path,int size){ return self->ModPathFromName(modname, path, size); }
SWIGINTERN bool DBGFUNCTIONS__DisasmFast_(DBGFUNCTIONS_ *self,unsigned char const *data,duint addr,BASIC_INSTRUCTION_INFO *basicinfo){ return self->DisasmFast(data, addr, basicinfo); }
SWIGINTERN void DBGFUNCTIONS__MemUpdateMap_(DBGFUNCTIONS_ *self){ return self->MemUpdateMap(); }
SWIGINTERN void DBGFUNCTIONS__GetCallStack_(DBGFUNCTIONS_ *self,DBGCALLSTACK *callstack){ return self->GetCallStack(callstack); }
SWIGINTERN void DBGFUNCTIONS__SymbolDownloadAllSymbols_(DBGFUNCTIONS_ *self,char const *szSymbolStore){ return self->SymbolDownloadAllSymbols(szSymbolStore); }
SWIGINTERN bool DBGFUNCTIONS__GetJit_(DBGFUNCTIONS_ *self,char *jit,bool x64){ return self->GetJit(jit, x64); }
SWIGINTERN bool DBGFUNCTIONS__GetJitAuto_(DBGFUNCTIONS_ *self,bool *jitauto){ return self->GetJitAuto(jitauto); }
SWIGINTERN bool DBGFUNCTIONS__GetDefJit_(DBGFUNCTIONS_ *self,char *defjit){ return self->GetDefJit(defjit); }
SWIGINTERN bool DBGFUNCTIONS__GetProcessList_(DBGFUNCTIONS_ *self,DBGPROCESSINFO **entries,int *count){ return self->GetProcessList(entries, count); }
SWIGINTERN bool DBGFUNCTIONS__GetPageRights_(DBGFUNCTIONS_ *self,duint addr,char *rights){ return self->GetPageRights(addr, rights); }
SWIGINTERN bool DBGFUNCTIONS__SetPageRights_(DBGFUNCTIONS_ *self,duint addr,char const *rights){ return self->SetPageRights(addr, rights); }
SWIGINTERN bool DBGFUNCTIONS__PageRightsToString_(DBGFUNCTIONS_ *self,DWORD protect,char *rights){ return self->PageRightsToString(protect, rights); }
SWIGINTERN bool DBGFUNCTIONS__IsProcessElevated_(DBGFUNCTIONS_ *self){ return self->IsProcessElevated(); }
SWIGINTERN bool DBGFUNCTIONS__GetCmdline_(DBGFUNCTIONS_ *self,char *cmdline,size_t *cbsize){ return self->GetCmdline(cmdline, cbsize); }
SWIGINTERN bool DBGFUNCTIONS__SetCmdline_(DBGFUNCTIONS_ *self,char const *cmdline){ return self->SetCmdline(cmdline); }
SWIGINTERN duint DBGFUNCTIONS__FileOffsetToVa_(DBGFUNCTIONS_ *self,char const *modname,duint offset){ return self->FileOffsetToVa(modname, offset); }
SWIGINTERN duint DBGFUNCTIONS__VaToFileOffset_(DBGFUNCTIONS_ *self,duint va){ return self->VaToFileOffset(va); }
SWIGINTERN duint DBGFUNCTIONS__GetAddrFromLine_(DBGFUNCTIONS_ *self,char const *szSourceFile,int line,duint *displacement){ return self->GetAddrFromLine(szSourceFile, line, displacement); }
SWIGINTERN bool DBGFUNCTIONS__GetSourceFromAddr_(DBGFUNCTIONS_ *self,duint addr,char *szSourceFile,int *line){ return self->GetSourceFromAddr(addr, szSourceFile, line); }
SWIGINTERN bool DBGFUNCTIONS__ValFromString_(DBGFUNCTIONS_ *self,char const *string,duint *value){ return self->ValFromString(string, value); }
SWIGINTERN bool DBGFUNCTIONS__PatchGetEx_(DBGFUNCTIONS_ *self,duint addr,DBGPATCHINFO *info){ return self->PatchGetEx(addr, info); }
SWIGINTERN bool DBGFUNCTIONS__GetBridgeBp_(DBGFUNCTIONS_ *self,BPXTYPE type,duint addr,BRIDGEBP *bp){ return self->GetBridgeBp(type, addr, bp); }
SWIGINTERN bool DBGFUNCTIONS__StringFormatInline_(DBGFUNCTIONS_ *self,char const *format,size_t resultSize,char *result){ return self->StringFormatInline(format, resultSize, result); }
SWIGINTERN void DBGFUNCTIONS__GetMnemonicBrief_(DBGFUNCTIONS_ *self,char const *mnem,size_t resultSize,char *result){ return self->GetMnemonicBrief(mnem, resultSize, result); }
SWIGINTERN unsigned int DBGFUNCTIONS__GetTraceRecordHitCount_(DBGFUNCTIONS_ *self,duint address){ return self->GetTraceRecordHitCount(address); }
SWIGINTERN TRACERECORDBYTETYPE DBGFUNCTIONS__GetTraceRecordByteType_(DBGFUNCTIONS_ *self,duint address){ return self->GetTraceRecordByteType(address); }
SWIGINTERN bool DBGFUNCTIONS__SetTraceRecordType_(DBGFUNCTIONS_ *self,duint pageAddress,TRACERECORDTYPE type){ return self->SetTraceRecordType(pageAddress, type); }
SWIGINTERN TRACERECORDTYPE DBGFUNCTIONS__GetTraceRecordType_(DBGFUNCTIONS_ *self,duint pageAddress){ return self->GetTraceRecordType(pageAddress); }
SWIGINTERN bool DBGFUNCTIONS__EnumHandles_(DBGFUNCTIONS_ *self,ListInfo *handles){ return self->EnumHandles(handles); }
SWIGINTERN bool DBGFUNCTIONS__GetHandleName_(DBGFUNCTIONS_ *self,duint handle,char *name,size_t nameSize,char *typeName,size_t typeNameSize){ return self->GetHandleName(handle, name, nameSize, typeName, typeNameSize); }
SWIGINTERN bool DBGFUNCTIONS__EnumTcpConnections_(DBGFUNCTIONS_ *self,ListInfo *connections){ return self->EnumTcpConnections(connections); }
SWIGINTERN duint DBGFUNCTIONS__GetDbgEvents_(DBGFUNCTIONS_ *self){ return self->GetDbgEvents(); }
SWIGINTERN int DBGFUNCTIONS__ModGetParty_(DBGFUNCTIONS_ *self,duint base){ return self->ModGetParty(base); }
SWIGINTERN void DBGFUNCTIONS__ModSetParty_(DBGFUNCTIONS_ *self,duint base,int party){ return self->ModSetParty(base, party); }
SWIGINTERN bool DBGFUNCTIONS__WatchIsWatchdogTriggered_(DBGFUNCTIONS_ *self,unsigned int id){ return self->WatchIsWatchdogTriggered(id); }
SWIGINTERN bool DBGFUNCTIONS__MemIsCodePage_(DBGFUNCTIONS_ *self,duint addr,bool refresh){ return self->MemIsCodePage(addr, refresh); }
SWIGINTERN bool DBGFUNCTIONS__AnimateCommand_(DBGFUNCTIONS_ *self,char const *command){ return self->AnimateCommand(command); }
SWIGINTERN void DBGFUNCTIONS__DbgSetDebuggeeInitScript_(DBGFUNCTIONS_ *self,char const *fileName){ return self->DbgSetDebuggeeInitScript(fileName); }
SWIGINTERN char const *DBGFUNCTIONS__DbgGetDebuggeeInitScript_(DBGFUNCTIONS_ *self){ return self->DbgGetDebuggeeInitScript(); }
SWIGINTERN bool DBGFUNCTIONS__EnumWindows_(DBGFUNCTIONS_ *self,ListInfo *windows){ return self->EnumWindows(windows); }
SWIGINTERN bool DBGFUNCTIONS__EnumHeaps_(DBGFUNCTIONS_ *self,ListInfo *heaps){ return self->EnumHeaps(heaps); }
SWIGINTERN bool DBGFUNCTIONS__ThreadGetName_(DBGFUNCTIONS_ *self,DWORD tid,char *name){ return self->ThreadGetName(tid, name); }
SWIGINTERN bool DBGFUNCTIONS__IsDepEnabled_(DBGFUNCTIONS_ *self){ return self->IsDepEnabled(); }
SWIGINTERN void DBGFUNCTIONS__GetCallStackEx_(DBGFUNCTIONS_ *self,DBGCALLSTACK *callstack,bool cache){ return self->GetCallStackEx(callstack, cache); }
SWIGINTERN bool DBGFUNCTIONS__GetUserComment_(DBGFUNCTIONS_ *self,duint addr,char *comment){ return self->GetUserComment(addr, comment); }
SWIGINTERN void DBGFUNCTIONS__EnumConstants_(DBGFUNCTIONS_ *self,ListInfo *constants){ return self->EnumConstants(constants); }
SWIGINTERN void DBGFUNCTIONS__EnumErrorCodes_(DBGFUNCTIONS_ *self,ListInfo *constants){ return self->EnumErrorCodes(constants); }
SWIGINTERN void DBGFUNCTIONS__EnumExceptions_(DBGFUNCTIONS_ *self,ListInfo *constants){ return self->EnumExceptions(constants); }
SWIGINTERN duint DBGFUNCTIONS__MemBpSize_(DBGFUNCTIONS_ *self,duint addr){ return self->MemBpSize(addr); }
SWIGINTERN bool DBGFUNCTIONS__ModRelocationsFromAddr_(DBGFUNCTIONS_ *self,duint addr,ListInfo *relocations){ return self->ModRelocationsFromAddr(addr, relocations); }
SWIGINTERN bool DBGFUNCTIONS__ModRelocationAtAddr_(DBGFUNCTIONS_ *self,duint addr,DBGRELOCATIONINFO *relocation){ return self->ModRelocationAtAddr(addr, relocation); }
SWIGINTERN bool DBGFUNCTIONS__ModRelocationsInRange_(DBGFUNCTIONS_ *self,duint addr,duint size,ListInfo *relocations){ return self->ModRelocationsInRange(addr, size, relocations); }
SWIGINTERN duint DBGFUNCTIONS__DbGetHash_(DBGFUNCTIONS_ *self){ return self->DbGetHash(); }
SWIGINTERN int DBGFUNCTIONS__SymAutoComplete_(DBGFUNCTIONS_ *self,char const *Search,char **Buffer,int MaxSymbols){ return self->SymAutoComplete(Search, Buffer, MaxSymbols); }
SWIGINTERN void DBGFUNCTIONS__RefreshModuleList_(DBGFUNCTIONS_ *self){ return self->RefreshModuleList(); }
SWIGINTERN duint DBGFUNCTIONS__GetAddrFromLineEx_(DBGFUNCTIONS_ *self,duint mod,char const *szSourceFile,int line){ return self->GetAddrFromLineEx(mod, szSourceFile, line); }

#include <windows.h>
#include "_plugins.h"


#include "..\pluginsdk\_scriptapi.h"
#include "..\pluginsdk\_scriptapi_argument.h"
#include "..\pluginsdk\_scriptapi_assembler.h"
#include "..\pluginsdk\_scriptapi_bookmark.h"
#include "..\pluginsdk\_scriptapi_comment.h"
#include "..\pluginsdk\_scriptapi_debug.h"
#include "..\pluginsdk\_scriptapi_flag.h"
#include "..\pluginsdk\_scriptapi_function.h"
#include "..\pluginsdk\_scriptapi_gui.h"
#include "..\pluginsdk\_scriptapi_label.h"
#include "..\pluginsdk\_scriptapi_memory.h"
#include "..\pluginsdk\_scriptapi_misc.h"
#include "..\pluginsdk\_scriptapi_module.h"
#include "..\pluginsdk\_scriptapi_pattern.h"
#include "..\pluginsdk\_scriptapi_register.h"
#include "..\pluginsdk\_scriptapi_stack.h"
#include "..\pluginsdk\_scriptapi_symbol.h"


typedef Script::Argument::ArgumentInfo ArgumentInfoArray;

SWIGINTERN ArgumentInfoArray *new_ArgumentInfoArray(size_t nelements){
    return (new Script::Argument::ArgumentInfo[nelements]);
  }
SWIGINTERN void delete_ArgumentInfoArray(ArgumentInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Argument::ArgumentInfo ArgumentInfoArray___getitem__(ArgumentInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void ArgumentInfoArray___setitem__(ArgumentInfoArray *self,size_t index,Script::Argument::ArgumentInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Argument::ArgumentInfo *ArgumentInfoArray_cast(ArgumentInfoArray *self){
    return self;
  }
SWIGINTERN ArgumentInfoArray *ArgumentInfoArray_frompointer(Script::Argument::ArgumentInfo *t){
    return static_cast< ArgumentInfoArray * >(t);
  }

typedef Script::Bookmark::BookmarkInfo BookmarkInfoArray;

SWIGINTERN BookmarkInfoArray *new_BookmarkInfoArray(size_t nelements){
    return (new Script::Bookmark::BookmarkInfo[nelements]);
  }
SWIGINTERN void delete_BookmarkInfoArray(BookmarkInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Bookmark::BookmarkInfo BookmarkInfoArray___getitem__(BookmarkInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void BookmarkInfoArray___setitem__(BookmarkInfoArray *self,size_t index,Script::Bookmark::BookmarkInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Bookmark::BookmarkInfo *BookmarkInfoArray_cast(BookmarkInfoArray *self){
    return self;
  }
SWIGINTERN BookmarkInfoArray *BookmarkInfoArray_frompointer(Script::Bookmark::BookmarkInfo *t){
    return static_cast< BookmarkInfoArray * >(t);
  }

typedef Script::Comment::CommentInfo CommentInfoArray;

SWIGINTERN CommentInfoArray *new_CommentInfoArray(size_t nelements){
    return (new Script::Comment::CommentInfo[nelements]);
  }
SWIGINTERN void delete_CommentInfoArray(CommentInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Comment::CommentInfo CommentInfoArray___getitem__(CommentInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void CommentInfoArray___setitem__(CommentInfoArray *self,size_t index,Script::Comment::CommentInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Comment::CommentInfo *CommentInfoArray_cast(CommentInfoArray *self){
    return self;
  }
SWIGINTERN CommentInfoArray *CommentInfoArray_frompointer(Script::Comment::CommentInfo *t){
    return static_cast< CommentInfoArray * >(t);
  }

typedef Script::Function::FunctionInfo FunctionInfoArray;

SWIGINTERN FunctionInfoArray *new_FunctionInfoArray(size_t nelements){
    return (new Script::Function::FunctionInfo[nelements]);
  }
SWIGINTERN void delete_FunctionInfoArray(FunctionInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Function::FunctionInfo FunctionInfoArray___getitem__(FunctionInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void FunctionInfoArray___setitem__(FunctionInfoArray *self,size_t index,Script::Function::FunctionInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Function::FunctionInfo *FunctionInfoArray_cast(FunctionInfoArray *self){
    return self;
  }
SWIGINTERN FunctionInfoArray *FunctionInfoArray_frompointer(Script::Function::FunctionInfo *t){
    return static_cast< FunctionInfoArray * >(t);
  }

typedef Script::Label::LabelInfo LabelInfoArray;

SWIGINTERN LabelInfoArray *new_LabelInfoArray(size_t nelements){
    return (new Script::Label::LabelInfo[nelements]);
  }
SWIGINTERN void delete_LabelInfoArray(LabelInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Label::LabelInfo LabelInfoArray___getitem__(LabelInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void LabelInfoArray___setitem__(LabelInfoArray *self,size_t index,Script::Label::LabelInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Label::LabelInfo *LabelInfoArray_cast(LabelInfoArray *self){
    return self;
  }
SWIGINTERN LabelInfoArray *LabelInfoArray_frompointer(Script::Label::LabelInfo *t){
    return static_cast< LabelInfoArray * >(t);
  }

typedef Script::Module::ModuleInfo ModuleInfoArray;

SWIGINTERN ModuleInfoArray *new_ModuleInfoArray(size_t nelements){
    return (new Script::Module::ModuleInfo[nelements]);
  }
SWIGINTERN void delete_ModuleInfoArray(ModuleInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Module::ModuleInfo ModuleInfoArray___getitem__(ModuleInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void ModuleInfoArray___setitem__(ModuleInfoArray *self,size_t index,Script::Module::ModuleInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Module::ModuleInfo *ModuleInfoArray_cast(ModuleInfoArray *self){
    return self;
  }
SWIGINTERN ModuleInfoArray *ModuleInfoArray_frompointer(Script::Module::ModuleInfo *t){
    return static_cast< ModuleInfoArray * >(t);
  }

typedef Script::Module::ModuleSectionInfo ModuleSectionInfoArray;

SWIGINTERN ModuleSectionInfoArray *new_ModuleSectionInfoArray(size_t nelements){
    return (new Script::Module::ModuleSectionInfo[nelements]);
  }
SWIGINTERN void delete_ModuleSectionInfoArray(ModuleSectionInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Module::ModuleSectionInfo ModuleSectionInfoArray___getitem__(ModuleSectionInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void ModuleSectionInfoArray___setitem__(ModuleSectionInfoArray *self,size_t index,Script::Module::ModuleSectionInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Module::ModuleSectionInfo *ModuleSectionInfoArray_cast(ModuleSectionInfoArray *self){
    return self;
  }
SWIGINTERN ModuleSectionInfoArray *ModuleSectionInfoArray_frompointer(Script::Module::ModuleSectionInfo *t){
    return static_cast< ModuleSectionInfoArray * >(t);
  }

typedef Script::Symbol::SymbolInfo SymbolInfoArray;

SWIGINTERN SymbolInfoArray *new_SymbolInfoArray(size_t nelements){
    return (new Script::Symbol::SymbolInfo[nelements]);
  }
SWIGINTERN void delete_SymbolInfoArray(SymbolInfoArray *self){
    delete[] self;
  }
SWIGINTERN Script::Symbol::SymbolInfo SymbolInfoArray___getitem__(SymbolInfoArray *self,size_t index){
    return self[index];
  }
SWIGINTERN void SymbolInfoArray___setitem__(SymbolInfoArray *self,size_t index,Script::Symbol::SymbolInfo value){
    self[index] = value;
  }
SWIGINTERN Script::Symbol::SymbolInfo *SymbolInfoArray_cast(SymbolInfoArray *self){
    return self;
  }
SWIGINTERN SymbolInfoArray *SymbolInfoArray_frompointer(Script::Symbol::SymbolInfo *t){
    return static_cast< SymbolInfoArray * >(t);
  }

  static int *new_intp() { 
    return (new int);
  }
  
  static int *copy_intp(int value) { 
    return (new int(static_cast< const int& >(value)));
  }

  static void delete_intp(int *obj) { 
    if (obj) delete obj;
  }

  static void intp_assign(int *obj, int value) {
    *obj = value;
  }

  static int intp_value(int *obj) {
    return *obj;
  }


  static unsigned int *new_uintp() { 
    return (new unsigned int);
  }
  
  static unsigned int *copy_uintp(unsigned int value) { 
    return (new unsigned int(static_cast< const unsigned int& >(value)));
  }

  static void delete_uintp(unsigned int *obj) { 
    if (obj) delete obj;
  }

  static void uintp_assign(unsigned int *obj, unsigned int value) {
    *obj = value;
  }

  static unsigned int uintp_value(unsigned int *obj) {
    return *obj;
  }


  static duint *new_duintp() { 
    return (new duint);
  }
  
  static duint *copy_duintp(duint value) { 
    return (new duint(static_cast< const duint& >(value)));
  }

  static void delete_duintp(duint *obj) { 
    if (obj) delete obj;
  }

  static void duintp_assign(duint *obj, duint value) {
    *obj = value;
  }

  static duint duintp_value(duint *obj) {
    return *obj;
  }

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_cdata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  size_t arg2 = (size_t) 1 ;
  int res1 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SWIGCDATA result;
  
  if(!PyArg_UnpackTuple(args,(char *)"cdata",1,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "cdata" "', argument " "1"" of type '" "void *""'"); 
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_size_t(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "cdata" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
  }
  result = cdata_void(arg1,arg2);
  resultobj = SWIG_FromCharPtrAndSize((&result)->data,(&result)->len);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_memmove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  int res1 ;
  int res2 ;
  char *buf2 = 0 ;
  size_t size2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"memmove",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "memmove" "', argument " "1"" of type '" "void *""'"); 
  }
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, &size2, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "memmove" "', argument " "2"" of type '" "void const *""'");
  }
  arg2 = reinterpret_cast< void * >(buf2);
  arg3 = static_cast< size_t >(size2);
  memmove(arg1,(void const *)arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListInfo_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ListInfo_count_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListInfo_count_set" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListInfo_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListInfo_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ListInfo_count_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListInfo_count_get" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (int) ((arg1)->count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListInfo_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ListInfo_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListInfo_size_set" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListInfo_size_set" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListInfo_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ListInfo_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListInfo_size_get" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result =  ((arg1)->size);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListInfo_data_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ListInfo_data_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListInfo_data_set" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListInfo_data_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->data = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListInfo_data_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ListInfo_data_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListInfo_data_get" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (void *) ((arg1)->data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ListInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ListInfo",0,0)) SWIG_fail;
  result = (ListInfo *)new ListInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ListInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ListInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListInfo" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ListInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BridgeInit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wchar_t *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeInit",0,0)) SWIG_fail;
  result = (wchar_t *)BridgeInit();
  resultobj = SWIG_FromWCharPtr((const wchar_t *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wchar_t *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeStart",0,0)) SWIG_fail;
  result = (wchar_t *)BridgeStart();
  resultobj = SWIG_FromWCharPtr((const wchar_t *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeAlloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeAlloc",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "BridgeAlloc" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (void *)BridgeAlloc(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeFree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeFree",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BridgeFree" "', argument " "1"" of type '" "void *""'"); 
  }
  BridgeFree(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeSettingGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeSettingGet",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BridgeSettingGet" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BridgeSettingGet" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BridgeSettingGet" "', argument " "3"" of type '" "char *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)BridgeSettingGet((char const *)arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeSettingGetUint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  duint *arg3 = (duint *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeSettingGetUint",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BridgeSettingGetUint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BridgeSettingGetUint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BridgeSettingGetUint" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  result = (bool)BridgeSettingGetUint((char const *)arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeSettingSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeSettingSet",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BridgeSettingSet" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BridgeSettingSet" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BridgeSettingSet" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)BridgeSettingSet((char const *)arg1,(char const *)arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeSettingSetUint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  duint arg3 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeSettingSetUint",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BridgeSettingSetUint" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BridgeSettingSetUint" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BridgeSettingSetUint" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  result = (bool)BridgeSettingSetUint((char const *)arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeSettingFlush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeSettingFlush",0,0)) SWIG_fail;
  result = (bool)BridgeSettingFlush();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeSettingRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeSettingRead",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BridgeSettingRead" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  result = (bool)BridgeSettingRead(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BridgeGetDbgVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BridgeGetDbgVersion",0,0)) SWIG_fail;
  result = (int)BridgeGetDbgVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_BaseAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  PVOID arg2 = (PVOID) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_BaseAddress_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_BaseAddress_set" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MEMORY_BASIC_INFORMATION_BaseAddress_set" "', argument " "2"" of type '" "PVOID""'"); 
  }
  if (arg1) (arg1)->BaseAddress = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_BaseAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PVOID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_BaseAddress_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_BaseAddress_get" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  result = (PVOID) ((arg1)->BaseAddress);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_AllocationBase_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  PVOID arg2 = (PVOID) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_AllocationBase_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_AllocationBase_set" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MEMORY_BASIC_INFORMATION_AllocationBase_set" "', argument " "2"" of type '" "PVOID""'"); 
  }
  if (arg1) (arg1)->AllocationBase = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_AllocationBase_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PVOID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_AllocationBase_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_AllocationBase_get" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  result = (PVOID) ((arg1)->AllocationBase);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_AllocationProtect_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_AllocationProtect_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_AllocationProtect_set" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMORY_BASIC_INFORMATION_AllocationProtect_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->AllocationProtect = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_AllocationProtect_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_AllocationProtect_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_AllocationProtect_get" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  result = (DWORD) ((arg1)->AllocationProtect);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_RegionSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_RegionSize_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_RegionSize_set" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMORY_BASIC_INFORMATION_RegionSize_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->RegionSize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_RegionSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_RegionSize_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_RegionSize_get" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  result = (duint) ((arg1)->RegionSize);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_State_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_State_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_State_set" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMORY_BASIC_INFORMATION_State_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->State = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_State_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_State_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_State_get" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  result = (DWORD) ((arg1)->State);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_Protect_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_Protect_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_Protect_set" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMORY_BASIC_INFORMATION_Protect_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->Protect = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_Protect_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_Protect_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_Protect_get" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  result = (DWORD) ((arg1)->Protect);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_Type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_Type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_Type_set" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMORY_BASIC_INFORMATION_Type_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->Type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_BASIC_INFORMATION_Type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_BASIC_INFORMATION_Type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_BASIC_INFORMATION_Type_get" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  result = (DWORD) ((arg1)->Type);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MEMORY_BASIC_INFORMATION(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MEMORY_BASIC_INFORMATION",0,0)) SWIG_fail;
  result = (_MEMORY_BASIC_INFORMATION *)new _MEMORY_BASIC_INFORMATION();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__MEMORY_BASIC_INFORMATION, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MEMORY_BASIC_INFORMATION(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _MEMORY_BASIC_INFORMATION *arg1 = (_MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MEMORY_BASIC_INFORMATION",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MEMORY_BASIC_INFORMATION" "', argument " "1"" of type '" "_MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg1 = reinterpret_cast< _MEMORY_BASIC_INFORMATION * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MEMORY_BASIC_INFORMATION_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p__MEMORY_BASIC_INFORMATION, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MEMPAGE_mbi_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGE *arg1 = (MEMPAGE *) 0 ;
  MEMORY_BASIC_INFORMATION *arg2 = (MEMORY_BASIC_INFORMATION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGE_mbi_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGE, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGE_mbi_set" "', argument " "1"" of type '" "MEMPAGE *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGE * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MEMPAGE_mbi_set" "', argument " "2"" of type '" "MEMORY_BASIC_INFORMATION *""'"); 
  }
  arg2 = reinterpret_cast< MEMORY_BASIC_INFORMATION * >(argp2);
  if (arg1) (arg1)->mbi = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMPAGE_mbi_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGE *arg1 = (MEMPAGE *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMORY_BASIC_INFORMATION *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGE_mbi_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGE, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGE_mbi_get" "', argument " "1"" of type '" "MEMPAGE *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGE * >(argp1);
  result = (MEMORY_BASIC_INFORMATION *)& ((arg1)->mbi);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__MEMORY_BASIC_INFORMATION, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMPAGE_info_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGE *arg1 = (MEMPAGE *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGE_info_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGE, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGE_info_set" "', argument " "1"" of type '" "MEMPAGE *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGE * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MEMPAGE_info_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->info,arg2,256*sizeof(char));
  else memset(arg1->info,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMPAGE_info_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGE *arg1 = (MEMPAGE *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGE_info_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGE, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGE_info_get" "', argument " "1"" of type '" "MEMPAGE *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGE * >(argp1);
  result = (char *)(char *) ((arg1)->info);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MEMPAGE(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGE *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MEMPAGE",0,0)) SWIG_fail;
  result = (MEMPAGE *)new MEMPAGE();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMPAGE, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MEMPAGE(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGE *arg1 = (MEMPAGE *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MEMPAGE",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGE, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MEMPAGE" "', argument " "1"" of type '" "MEMPAGE *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGE * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MEMPAGE_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_MEMPAGE, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MEMMAP_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMMAP *arg1 = (MEMMAP *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMMAP_count_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMMAP_count_set" "', argument " "1"" of type '" "MEMMAP *""'"); 
  }
  arg1 = reinterpret_cast< MEMMAP * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMMAP_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMMAP_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMMAP *arg1 = (MEMMAP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMMAP_count_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMMAP_count_get" "', argument " "1"" of type '" "MEMMAP *""'"); 
  }
  arg1 = reinterpret_cast< MEMMAP * >(argp1);
  result = (int) ((arg1)->count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMMAP_page_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMMAP *arg1 = (MEMMAP *) 0 ;
  MEMPAGE *arg2 = (MEMPAGE *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMMAP_page_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMMAP_page_set" "', argument " "1"" of type '" "MEMMAP *""'"); 
  }
  arg1 = reinterpret_cast< MEMMAP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_MEMPAGE, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MEMMAP_page_set" "', argument " "2"" of type '" "MEMPAGE *""'"); 
  }
  arg2 = reinterpret_cast< MEMPAGE * >(argp2);
  if (arg1) (arg1)->page = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMMAP_page_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMMAP *arg1 = (MEMMAP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMPAGE *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMMAP_page_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMMAP_page_get" "', argument " "1"" of type '" "MEMMAP *""'"); 
  }
  arg1 = reinterpret_cast< MEMMAP * >(argp1);
  result = (MEMPAGE *) ((arg1)->page);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMPAGE, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MEMMAP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMMAP *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MEMMAP",0,0)) SWIG_fail;
  result = (MEMMAP *)new MEMMAP();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMMAP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MEMMAP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMMAP *arg1 = (MEMMAP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MEMMAP",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMMAP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MEMMAP" "', argument " "1"" of type '" "MEMMAP *""'"); 
  }
  arg1 = reinterpret_cast< MEMMAP * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MEMMAP_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_MEMMAP, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BRIDGEBP_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  BPXTYPE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_type_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_type_set" "', argument " "2"" of type '" "BPXTYPE""'");
  } 
  arg2 = static_cast< BPXTYPE >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  BPXTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_type_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (BPXTYPE) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_addr_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_addr_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_enabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_enabled_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_enabled_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_enabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->enabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_enabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_enabled_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_enabled_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (bool) ((arg1)->enabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_singleshoot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_singleshoot_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_singleshoot_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_singleshoot_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->singleshoot = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_singleshoot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_singleshoot_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_singleshoot_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (bool) ((arg1)->singleshoot);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_active_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_active_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_active_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_active_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->active = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_active_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_active_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_active_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (bool) ((arg1)->active);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_name_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGEBP_name_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,256*sizeof(char));
  else memset(arg1->name,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_name_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_mod_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGEBP_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_mod_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_slot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_slot_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_slot_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_slot_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->slot = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_slot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_slot_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_slot_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (unsigned short) ((arg1)->slot);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_typeEx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_typeEx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_typeEx_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_typeEx_set" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  if (arg1) (arg1)->typeEx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_typeEx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_typeEx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_typeEx_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (unsigned char) ((arg1)->typeEx);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_hwSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_hwSize_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_hwSize_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_hwSize_set" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  if (arg1) (arg1)->hwSize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_hwSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_hwSize_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_hwSize_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (unsigned char) ((arg1)->hwSize);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_hitCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_hitCount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_hitCount_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_hitCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->hitCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_hitCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_hitCount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_hitCount_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (unsigned int) ((arg1)->hitCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_fastResume_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_fastResume_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_fastResume_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_fastResume_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->fastResume = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_fastResume_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_fastResume_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_fastResume_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (bool) ((arg1)->fastResume);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_silent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_silent_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_silent_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGEBP_silent_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->silent = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_silent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_silent_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_silent_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (bool) ((arg1)->silent);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_breakCondition_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_breakCondition_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_breakCondition_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGEBP_breakCondition_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->breakCondition,arg2,256*sizeof(char));
  else memset(arg1->breakCondition,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_breakCondition_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_breakCondition_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_breakCondition_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (char *)(char *) ((arg1)->breakCondition);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_logText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_logText_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_logText_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGEBP_logText_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->logText,arg2,256*sizeof(char));
  else memset(arg1->logText,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_logText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_logText_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_logText_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (char *)(char *) ((arg1)->logText);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_logCondition_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_logCondition_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_logCondition_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGEBP_logCondition_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->logCondition,arg2,256*sizeof(char));
  else memset(arg1->logCondition,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_logCondition_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_logCondition_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_logCondition_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (char *)(char *) ((arg1)->logCondition);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_commandText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_commandText_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_commandText_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGEBP_commandText_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->commandText,arg2,256*sizeof(char));
  else memset(arg1->commandText,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_commandText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_commandText_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_commandText_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (char *)(char *) ((arg1)->commandText);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_commandCondition_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_commandCondition_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_commandCondition_set" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGEBP_commandCondition_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->commandCondition,arg2,256*sizeof(char));
  else memset(arg1->commandCondition,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGEBP_commandCondition_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGEBP_commandCondition_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGEBP_commandCondition_get" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  result = (char *)(char *) ((arg1)->commandCondition);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BRIDGEBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_BRIDGEBP",0,0)) SWIG_fail;
  result = (BRIDGEBP *)new BRIDGEBP();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BRIDGEBP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BRIDGEBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGEBP *arg1 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_BRIDGEBP",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGEBP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BRIDGEBP" "', argument " "1"" of type '" "BRIDGEBP *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGEBP * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BRIDGEBP_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BRIDGEBP, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BPMAP_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BPMAP *arg1 = (BPMAP *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BPMAP_count_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BPMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BPMAP_count_set" "', argument " "1"" of type '" "BPMAP *""'"); 
  }
  arg1 = reinterpret_cast< BPMAP * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BPMAP_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BPMAP_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BPMAP *arg1 = (BPMAP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BPMAP_count_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BPMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BPMAP_count_get" "', argument " "1"" of type '" "BPMAP *""'"); 
  }
  arg1 = reinterpret_cast< BPMAP * >(argp1);
  result = (int) ((arg1)->count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BPMAP_bp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BPMAP *arg1 = (BPMAP *) 0 ;
  BRIDGEBP *arg2 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BPMAP_bp_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BPMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BPMAP_bp_set" "', argument " "1"" of type '" "BPMAP *""'"); 
  }
  arg1 = reinterpret_cast< BPMAP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BRIDGEBP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BPMAP_bp_set" "', argument " "2"" of type '" "BRIDGEBP *""'"); 
  }
  arg2 = reinterpret_cast< BRIDGEBP * >(argp2);
  if (arg1) (arg1)->bp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BPMAP_bp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BPMAP *arg1 = (BPMAP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  BRIDGEBP *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BPMAP_bp_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BPMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BPMAP_bp_get" "', argument " "1"" of type '" "BPMAP *""'"); 
  }
  arg1 = reinterpret_cast< BPMAP * >(argp1);
  result = (BRIDGEBP *) ((arg1)->bp);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BPMAP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BPMAP *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_BPMAP",0,0)) SWIG_fail;
  result = (BPMAP *)new BPMAP();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BPMAP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BPMAP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BPMAP *arg1 = (BPMAP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_BPMAP",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BPMAP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BPMAP" "', argument " "1"" of type '" "BPMAP *""'"); 
  }
  arg1 = reinterpret_cast< BPMAP * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BPMAP_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BPMAP, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_WATCHINFO_WatchName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_WatchName_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_WatchName_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WATCHINFO_WatchName_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->WatchName,arg2,256*sizeof(char));
  else memset(arg1->WatchName,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_WatchName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_WatchName_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_WatchName_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (char *)(char *) ((arg1)->WatchName);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_Expression_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_Expression_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_Expression_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WATCHINFO_Expression_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->Expression,arg2,256*sizeof(char));
  else memset(arg1->Expression,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_Expression_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_Expression_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_Expression_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (char *)(char *) ((arg1)->Expression);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_window_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_window_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_window_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WATCHINFO_window_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->window = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_window_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_window_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_window_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (unsigned int) ((arg1)->window);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_id_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_id_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WATCHINFO_id_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_id_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_id_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (unsigned int) ((arg1)->id);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_varType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  WATCHVARTYPE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_varType_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_varType_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WATCHINFO_varType_set" "', argument " "2"" of type '" "WATCHVARTYPE""'");
  } 
  arg2 = static_cast< WATCHVARTYPE >(val2);
  if (arg1) (arg1)->varType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_varType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  WATCHVARTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_varType_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_varType_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (WATCHVARTYPE) ((arg1)->varType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_watchdogMode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  WATCHDOGMODE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_watchdogMode_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_watchdogMode_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WATCHINFO_watchdogMode_set" "', argument " "2"" of type '" "WATCHDOGMODE""'");
  } 
  arg2 = static_cast< WATCHDOGMODE >(val2);
  if (arg1) (arg1)->watchdogMode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_watchdogMode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  WATCHDOGMODE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_watchdogMode_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_watchdogMode_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (WATCHDOGMODE) ((arg1)->watchdogMode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_value_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WATCHINFO_value_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_value_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (duint) ((arg1)->value);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_watchdogTriggered_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_watchdogTriggered_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_watchdogTriggered_set" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WATCHINFO_watchdogTriggered_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->watchdogTriggered = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WATCHINFO_watchdogTriggered_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WATCHINFO_watchdogTriggered_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WATCHINFO_watchdogTriggered_get" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  result = (bool) ((arg1)->watchdogTriggered);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WATCHINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_WATCHINFO",0,0)) SWIG_fail;
  result = (WATCHINFO *)new WATCHINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_WATCHINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_WATCHINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WATCHINFO *arg1 = (WATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_WATCHINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WATCHINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_WATCHINFO" "', argument " "1"" of type '" "WATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< WATCHINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *WATCHINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_WATCHINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FUNCTION_start_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *arg1 = (FUNCTION *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_start_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_start_set" "', argument " "1"" of type '" "FUNCTION *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_start_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->start = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_start_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *arg1 = (FUNCTION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_start_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_start_get" "', argument " "1"" of type '" "FUNCTION *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION * >(argp1);
  result = (duint) ((arg1)->start);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_end_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *arg1 = (FUNCTION *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_end_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_end_set" "', argument " "1"" of type '" "FUNCTION *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_end_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->end = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_end_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *arg1 = (FUNCTION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_end_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_end_get" "', argument " "1"" of type '" "FUNCTION *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION * >(argp1);
  result = (duint) ((arg1)->end);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_instrcount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *arg1 = (FUNCTION *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_instrcount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_instrcount_set" "', argument " "1"" of type '" "FUNCTION *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_instrcount_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->instrcount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_instrcount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *arg1 = (FUNCTION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_instrcount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_instrcount_get" "', argument " "1"" of type '" "FUNCTION *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION * >(argp1);
  result = (duint) ((arg1)->instrcount);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FUNCTION(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_FUNCTION",0,0)) SWIG_fail;
  result = (FUNCTION *)new FUNCTION();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FUNCTION, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FUNCTION(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION *arg1 = (FUNCTION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FUNCTION",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FUNCTION" "', argument " "1"" of type '" "FUNCTION *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FUNCTION_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FUNCTION, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LOOP_depth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_depth_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_depth_set" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LOOP_depth_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->depth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LOOP_depth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_depth_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_depth_get" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  result = (int) ((arg1)->depth);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LOOP_start_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_start_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_start_set" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LOOP_start_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->start = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LOOP_start_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_start_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_start_get" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  result = (duint) ((arg1)->start);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LOOP_end_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_end_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_end_set" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LOOP_end_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->end = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LOOP_end_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_end_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_end_get" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  result = (duint) ((arg1)->end);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LOOP_instrcount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_instrcount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_instrcount_set" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LOOP_instrcount_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->instrcount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LOOP_instrcount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LOOP_instrcount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LOOP_instrcount_get" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  result = (duint) ((arg1)->instrcount);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LOOP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_LOOP",0,0)) SWIG_fail;
  result = (LOOP *)new LOOP();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LOOP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LOOP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LOOP *arg1 = (LOOP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_LOOP",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LOOP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LOOP" "', argument " "1"" of type '" "LOOP *""'"); 
  }
  arg1 = reinterpret_cast< LOOP * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LOOP_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_LOOP, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_flags_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_flags_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGE_ADDRINFO_flags_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_flags_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_flags_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (int) ((arg1)->flags);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_module_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_module_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_module_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGE_ADDRINFO_module_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->module,arg2,256*sizeof(char));
  else memset(arg1->module,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_module_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_module_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_module_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (char *)(char *) ((arg1)->module);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_label_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_label_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_label_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGE_ADDRINFO_label_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->label,arg2,256*sizeof(char));
  else memset(arg1->label,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_label_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_label_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_label_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (char *)(char *) ((arg1)->label);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_comment_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[512] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_comment_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_comment_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 512);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGE_ADDRINFO_comment_set" "', argument " "2"" of type '" "char [512]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->comment,arg2,512*sizeof(char));
  else memset(arg1->comment,0,512*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_comment_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_comment_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_comment_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (char *)(char *) ((arg1)->comment);
  {
    size_t size = SWIG_strnlen(result, 512);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_isbookmark_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_isbookmark_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_isbookmark_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BRIDGE_ADDRINFO_isbookmark_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->isbookmark = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_isbookmark_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_isbookmark_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_isbookmark_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (bool) ((arg1)->isbookmark);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_function_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  FUNCTION *arg2 = (FUNCTION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_function_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_function_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGE_ADDRINFO_function_set" "', argument " "2"" of type '" "FUNCTION *""'"); 
  }
  arg2 = reinterpret_cast< FUNCTION * >(argp2);
  if (arg1) (arg1)->function = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_function_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FUNCTION *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_function_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_function_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (FUNCTION *)& ((arg1)->function);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FUNCTION, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_loop_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  LOOP *arg2 = (LOOP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_loop_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_loop_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_LOOP, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGE_ADDRINFO_loop_set" "', argument " "2"" of type '" "LOOP *""'"); 
  }
  arg2 = reinterpret_cast< LOOP * >(argp2);
  if (arg1) (arg1)->loop = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_loop_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  LOOP *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_loop_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_loop_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (LOOP *)& ((arg1)->loop);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LOOP, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_args_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  FUNCTION *arg2 = (FUNCTION *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_args_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_args_set" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_FUNCTION, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BRIDGE_ADDRINFO_args_set" "', argument " "2"" of type '" "FUNCTION *""'"); 
  }
  arg2 = reinterpret_cast< FUNCTION * >(argp2);
  if (arg1) (arg1)->args = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BRIDGE_ADDRINFO_args_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FUNCTION *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BRIDGE_ADDRINFO_args_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BRIDGE_ADDRINFO_args_get" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  result = (FUNCTION *)& ((arg1)->args);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FUNCTION, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BRIDGE_ADDRINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_BRIDGE_ADDRINFO",0,0)) SWIG_fail;
  result = (BRIDGE_ADDRINFO *)new BRIDGE_ADDRINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BRIDGE_ADDRINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BRIDGE_ADDRINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BRIDGE_ADDRINFO *arg1 = (BRIDGE_ADDRINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_BRIDGE_ADDRINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BRIDGE_ADDRINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BRIDGE_ADDRINFO" "', argument " "1"" of type '" "BRIDGE_ADDRINFO *""'"); 
  }
  arg1 = reinterpret_cast< BRIDGE_ADDRINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BRIDGE_ADDRINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BRIDGE_ADDRINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SYMBOLINFO_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_addr_set" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SYMBOLINFO_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_addr_get" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_decoratedSymbol_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_decoratedSymbol_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_decoratedSymbol_set" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SYMBOLINFO_decoratedSymbol_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->decoratedSymbol) delete[] arg1->decoratedSymbol;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->decoratedSymbol = (char *)reinterpret_cast< char* >(memcpy((new char[size]), reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->decoratedSymbol = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_decoratedSymbol_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_decoratedSymbol_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_decoratedSymbol_get" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  result = (char *) ((arg1)->decoratedSymbol);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_undecoratedSymbol_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_undecoratedSymbol_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_undecoratedSymbol_set" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SYMBOLINFO_undecoratedSymbol_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->undecoratedSymbol) delete[] arg1->undecoratedSymbol;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->undecoratedSymbol = (char *)reinterpret_cast< char* >(memcpy((new char[size]), reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->undecoratedSymbol = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_undecoratedSymbol_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_undecoratedSymbol_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_undecoratedSymbol_get" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  result = (char *) ((arg1)->undecoratedSymbol);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  SYMBOLTYPE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_type_set" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SYMBOLINFO_type_set" "', argument " "2"" of type '" "SYMBOLTYPE""'");
  } 
  arg2 = static_cast< SYMBOLTYPE >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SYMBOLTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_type_get" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  result = (SYMBOLTYPE) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_freeDecorated_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_freeDecorated_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_freeDecorated_set" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SYMBOLINFO_freeDecorated_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->freeDecorated = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_freeDecorated_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_freeDecorated_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_freeDecorated_get" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  result = (bool) ((arg1)->freeDecorated);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_freeUndecorated_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_freeUndecorated_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_freeUndecorated_set" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SYMBOLINFO_freeUndecorated_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->freeUndecorated = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLINFO_freeUndecorated_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLINFO_freeUndecorated_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLINFO_freeUndecorated_get" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  result = (bool) ((arg1)->freeUndecorated);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SYMBOLINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SYMBOLINFO",0,0)) SWIG_fail;
  result = (SYMBOLINFO_ *)new SYMBOLINFO_();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SYMBOLINFO_, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SYMBOLINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLINFO_ *arg1 = (SYMBOLINFO_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SYMBOLINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLINFO_, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SYMBOLINFO" "', argument " "1"" of type '" "SYMBOLINFO_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLINFO_ * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SYMBOLINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SYMBOLINFO_, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SYMBOLMODULEINFO_base_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLMODULEINFO *arg1 = (SYMBOLMODULEINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLMODULEINFO_base_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLMODULEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLMODULEINFO_base_set" "', argument " "1"" of type '" "SYMBOLMODULEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLMODULEINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SYMBOLMODULEINFO_base_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->base = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLMODULEINFO_base_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLMODULEINFO *arg1 = (SYMBOLMODULEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLMODULEINFO_base_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLMODULEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLMODULEINFO_base_get" "', argument " "1"" of type '" "SYMBOLMODULEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLMODULEINFO * >(argp1);
  result = (duint) ((arg1)->base);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLMODULEINFO_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLMODULEINFO *arg1 = (SYMBOLMODULEINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLMODULEINFO_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLMODULEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLMODULEINFO_name_set" "', argument " "1"" of type '" "SYMBOLMODULEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLMODULEINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SYMBOLMODULEINFO_name_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,256*sizeof(char));
  else memset(arg1->name,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLMODULEINFO_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLMODULEINFO *arg1 = (SYMBOLMODULEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLMODULEINFO_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLMODULEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLMODULEINFO_name_get" "', argument " "1"" of type '" "SYMBOLMODULEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLMODULEINFO * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SYMBOLMODULEINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLMODULEINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SYMBOLMODULEINFO",0,0)) SWIG_fail;
  result = (SYMBOLMODULEINFO *)new SYMBOLMODULEINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SYMBOLMODULEINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SYMBOLMODULEINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLMODULEINFO *arg1 = (SYMBOLMODULEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SYMBOLMODULEINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLMODULEINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SYMBOLMODULEINFO" "', argument " "1"" of type '" "SYMBOLMODULEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLMODULEINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SYMBOLMODULEINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SYMBOLMODULEINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SYMBOLCBINFO_base_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *arg1 = (SYMBOLCBINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLCBINFO_base_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLCBINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLCBINFO_base_set" "', argument " "1"" of type '" "SYMBOLCBINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLCBINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SYMBOLCBINFO_base_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->base = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLCBINFO_base_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *arg1 = (SYMBOLCBINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLCBINFO_base_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLCBINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLCBINFO_base_get" "', argument " "1"" of type '" "SYMBOLCBINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLCBINFO * >(argp1);
  result = (duint) ((arg1)->base);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLCBINFO_cbSymbolEnum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *arg1 = (SYMBOLCBINFO *) 0 ;
  CBSYMBOLENUM arg2 = (CBSYMBOLENUM) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLCBINFO_cbSymbolEnum_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLCBINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLCBINFO_cbSymbolEnum_set" "', argument " "1"" of type '" "SYMBOLCBINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLCBINFO * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__SYMBOLPTR__p_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "SYMBOLCBINFO_cbSymbolEnum_set" "', argument " "2"" of type '" "CBSYMBOLENUM""'"); 
    }
  }
  if (arg1) (arg1)->cbSymbolEnum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLCBINFO_cbSymbolEnum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *arg1 = (SYMBOLCBINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CBSYMBOLENUM result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLCBINFO_cbSymbolEnum_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLCBINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLCBINFO_cbSymbolEnum_get" "', argument " "1"" of type '" "SYMBOLCBINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLCBINFO * >(argp1);
  result = (CBSYMBOLENUM) ((arg1)->cbSymbolEnum);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__SYMBOLPTR__p_void__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLCBINFO_user_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *arg1 = (SYMBOLCBINFO *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLCBINFO_user_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLCBINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLCBINFO_user_set" "', argument " "1"" of type '" "SYMBOLCBINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLCBINFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SYMBOLCBINFO_user_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->user = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLCBINFO_user_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *arg1 = (SYMBOLCBINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLCBINFO_user_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLCBINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLCBINFO_user_get" "', argument " "1"" of type '" "SYMBOLCBINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLCBINFO * >(argp1);
  result = (void *) ((arg1)->user);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SYMBOLCBINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SYMBOLCBINFO",0,0)) SWIG_fail;
  result = (SYMBOLCBINFO *)new SYMBOLCBINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SYMBOLCBINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SYMBOLCBINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLCBINFO *arg1 = (SYMBOLCBINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SYMBOLCBINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLCBINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SYMBOLCBINFO" "', argument " "1"" of type '" "SYMBOLCBINFO *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLCBINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SYMBOLCBINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SYMBOLCBINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FLAGS_c_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_c_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_c_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_c_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->c = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_c_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_c_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_c_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->c);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_p_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_p_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_p_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_p_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->p = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_p_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_p_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_p_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->p);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_a_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_a_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_a_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_a_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->a = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_a_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_a_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_a_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->a);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_z_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_z_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_z_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->z);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_s_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_s_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_s_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_s_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->s = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_s_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_s_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_s_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->s);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_t_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_t_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_t_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_t_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->t = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_t_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_t_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_t_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->t);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_i_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_i_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_i_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_i_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->i = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_i_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_i_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_i_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->i);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_d_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_d_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_d_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_d_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->d = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_d_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_d_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_d_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->d);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_o_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_o_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_o_set" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FLAGS_o_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->o = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FLAGS_o_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FLAGS_o_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FLAGS_o_get" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  result = (bool) ((arg1)->o);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FLAGS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_FLAGS",0,0)) SWIG_fail;
  result = (FLAGS *)new FLAGS();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FLAGS, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FLAGS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FLAGS *arg1 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FLAGS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FLAGS, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FLAGS" "', argument " "1"" of type '" "FLAGS *""'"); 
  }
  arg1 = reinterpret_cast< FLAGS * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FLAGS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FLAGS, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MXCSRFIELDS_FZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_FZ_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_FZ_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_FZ_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->FZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_FZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_FZ_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_FZ_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->FZ);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_PM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_PM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_PM_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_PM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->PM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_PM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_PM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_PM_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->PM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_UM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_UM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_UM_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_UM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->UM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_UM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_UM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_UM_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->UM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_OM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_OM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_OM_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_OM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->OM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_OM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_OM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_OM_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->OM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_ZM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_ZM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_ZM_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_ZM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->ZM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_ZM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_ZM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_ZM_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->ZM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_IM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_IM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_IM_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_IM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->IM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_IM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_IM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_IM_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->IM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_DM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_DM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_DM_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_DM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->DM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_DM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_DM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_DM_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->DM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_DAZ_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_DAZ_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_DAZ_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_DAZ_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->DAZ = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_DAZ_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_DAZ_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_DAZ_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->DAZ);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_PE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_PE_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_PE_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_PE_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->PE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_PE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_PE_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_PE_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->PE);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_UE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_UE_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_UE_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_UE_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->UE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_UE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_UE_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_UE_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->UE);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_OE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_OE_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_OE_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_OE_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->OE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_OE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_OE_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_OE_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->OE);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_ZE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_ZE_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_ZE_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_ZE_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->ZE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_ZE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_ZE_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_ZE_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->ZE);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_DE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_DE_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_DE_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_DE_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->DE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_DE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_DE_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_DE_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->DE);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_IE_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_IE_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_IE_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_IE_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->IE = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_IE_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_IE_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_IE_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (bool) ((arg1)->IE);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_RC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_RC_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_RC_set" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MXCSRFIELDS_RC_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->RC = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MXCSRFIELDS_RC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MXCSRFIELDS_RC_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MXCSRFIELDS_RC_get" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  result = (unsigned short) ((arg1)->RC);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MXCSRFIELDS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MXCSRFIELDS",0,0)) SWIG_fail;
  result = (MXCSRFIELDS *)new MXCSRFIELDS();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MXCSRFIELDS, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MXCSRFIELDS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MXCSRFIELDS *arg1 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MXCSRFIELDS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MXCSRFIELDS, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MXCSRFIELDS" "', argument " "1"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< MXCSRFIELDS * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MXCSRFIELDS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_MXCSRFIELDS, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_B_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_B_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_B_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_B_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->B = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_B_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_B_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_B_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->B);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C3_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C3_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C3_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_C3_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->C3 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C3_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C3_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C3_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->C3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C2_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C2_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_C2_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->C2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C2_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C2_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->C2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C1_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C1_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_C1_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->C1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C1_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C1_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->C1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C0_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C0_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_C0_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->C0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_C0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_C0_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_C0_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->C0);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_ES_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_ES_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_ES_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_ES_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->ES = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_ES_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_ES_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_ES_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->ES);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_SF_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_SF_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_SF_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_SF_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->SF = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_SF_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_SF_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_SF_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->SF);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_P_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_P_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_P_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_P_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->P = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_P_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_P_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_P_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->P);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_U_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_U_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_U_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_U_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->U = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_U_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_U_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_U_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->U);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_O_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_O_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_O_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_O_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->O = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_O_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_O_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_O_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->O);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_Z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_Z_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_Z_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_Z_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->Z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_Z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_Z_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_Z_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->Z);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_D_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_D_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_D_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_D_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->D = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_D_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_D_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_D_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->D);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_I_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_I_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_I_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_I_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->I = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_I_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_I_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_I_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->I);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_TOP_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_TOP_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_TOP_set" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87STATUSWORDFIELDS_TOP_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->TOP = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87STATUSWORDFIELDS_TOP_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87STATUSWORDFIELDS_TOP_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87STATUSWORDFIELDS_TOP_get" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  result = (unsigned short) ((arg1)->TOP);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_X87STATUSWORDFIELDS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_X87STATUSWORDFIELDS",0,0)) SWIG_fail;
  result = (X87STATUSWORDFIELDS *)new X87STATUSWORDFIELDS();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87STATUSWORDFIELDS, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_X87STATUSWORDFIELDS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87STATUSWORDFIELDS *arg1 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_X87STATUSWORDFIELDS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87STATUSWORDFIELDS, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_X87STATUSWORDFIELDS" "', argument " "1"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *X87STATUSWORDFIELDS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_X87STATUSWORDFIELDS, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_IC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_IC_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_IC_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_IC_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->IC = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_IC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_IC_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_IC_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->IC);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_IEM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_IEM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_IEM_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_IEM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->IEM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_IEM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_IEM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_IEM_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->IEM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_PM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_PM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_PM_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_PM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->PM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_PM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_PM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_PM_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->PM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_UM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_UM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_UM_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_UM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->UM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_UM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_UM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_UM_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->UM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_OM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_OM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_OM_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_OM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->OM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_OM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_OM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_OM_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->OM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_ZM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_ZM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_ZM_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_ZM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->ZM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_ZM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_ZM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_ZM_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->ZM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_DM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_DM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_DM_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_DM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->DM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_DM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_DM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_DM_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->DM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_IM_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_IM_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_IM_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_IM_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->IM = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_IM_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_IM_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_IM_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (bool) ((arg1)->IM);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_RC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_RC_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_RC_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_RC_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->RC = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_RC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_RC_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_RC_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (unsigned short) ((arg1)->RC);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_PC_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_PC_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_PC_set" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87CONTROLWORDFIELDS_PC_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->PC = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87CONTROLWORDFIELDS_PC_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87CONTROLWORDFIELDS_PC_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87CONTROLWORDFIELDS_PC_get" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  result = (unsigned short) ((arg1)->PC);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_X87CONTROLWORDFIELDS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_X87CONTROLWORDFIELDS",0,0)) SWIG_fail;
  result = (X87CONTROLWORDFIELDS *)new X87CONTROLWORDFIELDS();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87CONTROLWORDFIELDS, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_X87CONTROLWORDFIELDS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87CONTROLWORDFIELDS *arg1 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_X87CONTROLWORDFIELDS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87CONTROLWORDFIELDS, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_X87CONTROLWORDFIELDS" "', argument " "1"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg1 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *X87CONTROLWORDFIELDS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_X87CONTROLWORDFIELDS, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_XMMREGISTER_Low_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _XMMREGISTER *arg1 = (_XMMREGISTER *) 0 ;
  ULONGLONG arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"XMMREGISTER_Low_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XMMREGISTER_Low_set" "', argument " "1"" of type '" "_XMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< _XMMREGISTER * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XMMREGISTER_Low_set" "', argument " "2"" of type '" "ULONGLONG""'");
  } 
  arg2 = static_cast< ULONGLONG >(val2);
  if (arg1) (arg1)->Low = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XMMREGISTER_Low_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _XMMREGISTER *arg1 = (_XMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONGLONG result;
  
  if(!PyArg_UnpackTuple(args,(char *)"XMMREGISTER_Low_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XMMREGISTER_Low_get" "', argument " "1"" of type '" "_XMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< _XMMREGISTER * >(argp1);
  result =  ((arg1)->Low);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XMMREGISTER_High_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _XMMREGISTER *arg1 = (_XMMREGISTER *) 0 ;
  LONGLONG arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"XMMREGISTER_High_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XMMREGISTER_High_set" "', argument " "1"" of type '" "_XMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< _XMMREGISTER * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XMMREGISTER_High_set" "', argument " "2"" of type '" "LONGLONG""'");
  } 
  arg2 = static_cast< LONGLONG >(val2);
  if (arg1) (arg1)->High = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XMMREGISTER_High_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _XMMREGISTER *arg1 = (_XMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  LONGLONG result;
  
  if(!PyArg_UnpackTuple(args,(char *)"XMMREGISTER_High_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XMMREGISTER_High_get" "', argument " "1"" of type '" "_XMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< _XMMREGISTER * >(argp1);
  result =  ((arg1)->High);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_XMMREGISTER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _XMMREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_XMMREGISTER",0,0)) SWIG_fail;
  result = (_XMMREGISTER *)new _XMMREGISTER();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__XMMREGISTER, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_XMMREGISTER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _XMMREGISTER *arg1 = (_XMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_XMMREGISTER",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__XMMREGISTER, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XMMREGISTER" "', argument " "1"" of type '" "_XMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< _XMMREGISTER * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *XMMREGISTER_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p__XMMREGISTER, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_YMMREGISTER_Low_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  YMMREGISTER *arg1 = (YMMREGISTER *) 0 ;
  XMMREGISTER *arg2 = (XMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"YMMREGISTER_Low_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_YMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "YMMREGISTER_Low_set" "', argument " "1"" of type '" "YMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< YMMREGISTER * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "YMMREGISTER_Low_set" "', argument " "2"" of type '" "XMMREGISTER *""'"); 
  }
  arg2 = reinterpret_cast< XMMREGISTER * >(argp2);
  if (arg1) (arg1)->Low = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_YMMREGISTER_Low_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  YMMREGISTER *arg1 = (YMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  XMMREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"YMMREGISTER_Low_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_YMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "YMMREGISTER_Low_get" "', argument " "1"" of type '" "YMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< YMMREGISTER * >(argp1);
  result = (XMMREGISTER *)& ((arg1)->Low);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_YMMREGISTER_High_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  YMMREGISTER *arg1 = (YMMREGISTER *) 0 ;
  XMMREGISTER *arg2 = (XMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"YMMREGISTER_High_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_YMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "YMMREGISTER_High_set" "', argument " "1"" of type '" "YMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< YMMREGISTER * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "YMMREGISTER_High_set" "', argument " "2"" of type '" "XMMREGISTER *""'"); 
  }
  arg2 = reinterpret_cast< XMMREGISTER * >(argp2);
  if (arg1) (arg1)->High = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_YMMREGISTER_High_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  YMMREGISTER *arg1 = (YMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  XMMREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"YMMREGISTER_High_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_YMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "YMMREGISTER_High_get" "', argument " "1"" of type '" "YMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< YMMREGISTER * >(argp1);
  result = (XMMREGISTER *)& ((arg1)->High);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_YMMREGISTER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  YMMREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_YMMREGISTER",0,0)) SWIG_fail;
  result = (YMMREGISTER *)new YMMREGISTER();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_YMMREGISTER, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_YMMREGISTER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  YMMREGISTER *arg1 = (YMMREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_YMMREGISTER",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_YMMREGISTER, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_YMMREGISTER" "', argument " "1"" of type '" "YMMREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< YMMREGISTER * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *YMMREGISTER_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_YMMREGISTER, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_X87FPUREGISTER_data_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *arg1 = (X87FPUREGISTER *) 0 ;
  BYTE *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPUREGISTER_data_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPUREGISTER_data_set" "', argument " "1"" of type '" "X87FPUREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< X87FPUREGISTER * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "X87FPUREGISTER_data_set" "', argument " "2"" of type '" "BYTE [10]""'"); 
  } 
  arg2 = reinterpret_cast< BYTE * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)10; ++ii) *(BYTE *)&arg1->data[ii] = *((BYTE *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""data""' of type '""BYTE [10]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPUREGISTER_data_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *arg1 = (X87FPUREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  BYTE *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPUREGISTER_data_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPUREGISTER_data_get" "', argument " "1"" of type '" "X87FPUREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< X87FPUREGISTER * >(argp1);
  result = (BYTE *)(BYTE *) ((arg1)->data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPUREGISTER_st_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *arg1 = (X87FPUREGISTER *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPUREGISTER_st_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPUREGISTER_st_value_set" "', argument " "1"" of type '" "X87FPUREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< X87FPUREGISTER * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPUREGISTER_st_value_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->st_value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPUREGISTER_st_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *arg1 = (X87FPUREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPUREGISTER_st_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPUREGISTER_st_value_get" "', argument " "1"" of type '" "X87FPUREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< X87FPUREGISTER * >(argp1);
  result = (int) ((arg1)->st_value);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPUREGISTER_tag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *arg1 = (X87FPUREGISTER *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPUREGISTER_tag_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPUREGISTER_tag_set" "', argument " "1"" of type '" "X87FPUREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< X87FPUREGISTER * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPUREGISTER_tag_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->tag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPUREGISTER_tag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *arg1 = (X87FPUREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPUREGISTER_tag_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPUREGISTER_tag_get" "', argument " "1"" of type '" "X87FPUREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< X87FPUREGISTER * >(argp1);
  result = (int) ((arg1)->tag);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_X87FPUREGISTER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_X87FPUREGISTER",0,0)) SWIG_fail;
  result = (X87FPUREGISTER *)new X87FPUREGISTER();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87FPUREGISTER, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_X87FPUREGISTER(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPUREGISTER *arg1 = (X87FPUREGISTER *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_X87FPUREGISTER",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPUREGISTER, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_X87FPUREGISTER" "', argument " "1"" of type '" "X87FPUREGISTER *""'"); 
  }
  arg1 = reinterpret_cast< X87FPUREGISTER * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *X87FPUREGISTER_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_X87FPUREGISTER, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_X87FPU_ControlWord_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  WORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_ControlWord_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_ControlWord_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_ControlWord_set" "', argument " "2"" of type '" "WORD""'");
  } 
  arg2 = static_cast< WORD >(val2);
  if (arg1) (arg1)->ControlWord = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_ControlWord_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  WORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_ControlWord_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_ControlWord_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (WORD) ((arg1)->ControlWord);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_StatusWord_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  WORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_StatusWord_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_StatusWord_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_StatusWord_set" "', argument " "2"" of type '" "WORD""'");
  } 
  arg2 = static_cast< WORD >(val2);
  if (arg1) (arg1)->StatusWord = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_StatusWord_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  WORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_StatusWord_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_StatusWord_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (WORD) ((arg1)->StatusWord);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_TagWord_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  WORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_TagWord_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_TagWord_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_TagWord_set" "', argument " "2"" of type '" "WORD""'");
  } 
  arg2 = static_cast< WORD >(val2);
  if (arg1) (arg1)->TagWord = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_TagWord_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  WORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_TagWord_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_TagWord_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (WORD) ((arg1)->TagWord);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_ErrorOffset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_ErrorOffset_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_ErrorOffset_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_ErrorOffset_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->ErrorOffset = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_ErrorOffset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_ErrorOffset_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_ErrorOffset_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (DWORD) ((arg1)->ErrorOffset);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_ErrorSelector_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_ErrorSelector_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_ErrorSelector_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_ErrorSelector_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->ErrorSelector = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_ErrorSelector_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_ErrorSelector_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_ErrorSelector_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (DWORD) ((arg1)->ErrorSelector);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_DataOffset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_DataOffset_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_DataOffset_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_DataOffset_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->DataOffset = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_DataOffset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_DataOffset_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_DataOffset_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (DWORD) ((arg1)->DataOffset);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_DataSelector_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_DataSelector_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_DataSelector_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_DataSelector_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->DataSelector = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_DataSelector_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_DataSelector_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_DataSelector_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (DWORD) ((arg1)->DataSelector);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_Cr0NpxState_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_Cr0NpxState_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_Cr0NpxState_set" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "X87FPU_Cr0NpxState_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->Cr0NpxState = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_X87FPU_Cr0NpxState_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"X87FPU_Cr0NpxState_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "X87FPU_Cr0NpxState_get" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  result = (DWORD) ((arg1)->Cr0NpxState);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_X87FPU(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_X87FPU",0,0)) SWIG_fail;
  result = (X87FPU *)new X87FPU();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87FPU, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_X87FPU(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  X87FPU *arg1 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_X87FPU",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_X87FPU, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_X87FPU" "', argument " "1"" of type '" "X87FPU *""'"); 
  }
  arg1 = reinterpret_cast< X87FPU * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *X87FPU_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_X87FPU, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cax_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cax_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cax_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_cax_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->cax = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cax_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cax_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cax_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->cax);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_ccx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_ccx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_ccx_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_ccx_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->ccx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_ccx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_ccx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_ccx_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->ccx);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cdx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cdx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cdx_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_cdx_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->cdx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cdx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cdx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cdx_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->cdx);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cbx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cbx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cbx_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_cbx_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->cbx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cbx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cbx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cbx_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->cbx);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_csp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_csp_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_csp_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_csp_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->csp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_csp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_csp_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_csp_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->csp);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cbp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cbp_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cbp_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_cbp_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->cbp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cbp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cbp_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cbp_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->cbp);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_csi_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_csi_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_csi_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_csi_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->csi = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_csi_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_csi_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_csi_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->csi);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cdi_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cdi_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cdi_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_cdi_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->cdi = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cdi_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cdi_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cdi_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->cdi);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r8_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r8_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r8_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r8_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r8 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r8_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r8_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r8_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r8);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r9_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r9_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r9_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r9_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r9 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r9_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r9_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r9_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r9);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r10_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r10_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r10_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r10_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r10 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r10_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r10_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r10_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r10);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r11_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r11_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r11_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r11_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r11 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r11_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r11_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r11_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r11);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r12_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r12_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r12_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r12_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r12 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r12_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r12_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r12_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r12);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r13_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r13_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r13_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r13_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r13 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r13_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r13_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r13_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r13);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r14_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r14_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r14_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r14_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r14 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r14_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r14_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r14_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r14);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r15_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r15_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r15_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_r15_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->r15 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_r15_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_r15_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_r15_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->r15);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cip_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cip_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cip_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_cip_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->cip = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cip_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cip_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cip_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->cip);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_eflags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_eflags_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_eflags_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_eflags_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->eflags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_eflags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_eflags_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_eflags_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->eflags);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_gs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_gs_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_gs_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_gs_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->gs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_gs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_gs_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_gs_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (unsigned short) ((arg1)->gs);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_fs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_fs_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_fs_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_fs_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->fs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_fs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_fs_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_fs_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (unsigned short) ((arg1)->fs);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_es_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_es_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_es_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_es_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->es = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_es_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_es_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_es_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (unsigned short) ((arg1)->es);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_ds_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_ds_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_ds_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_ds_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->ds = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_ds_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_ds_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_ds_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (unsigned short) ((arg1)->ds);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cs_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cs_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_cs_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->cs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_cs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_cs_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_cs_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (unsigned short) ((arg1)->cs);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_ss_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_ss_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_ss_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_ss_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->ss = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_ss_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_ss_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_ss_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (unsigned short) ((arg1)->ss);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr0_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr0_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_dr0_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->dr0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr0_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr0_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->dr0);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr1_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr1_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_dr1_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->dr1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr1_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr1_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->dr1);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr2_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr2_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_dr2_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->dr2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr2_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr2_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->dr2);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr3_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr3_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr3_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_dr3_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->dr3 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr3_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr3_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr3_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->dr3);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr6_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr6_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr6_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_dr6_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->dr6 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr6_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr6_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr6_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->dr6);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr7_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  ULONG_PTR arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr7_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr7_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_dr7_set" "', argument " "2"" of type '" "ULONG_PTR""'");
  } 
  arg2 = static_cast< ULONG_PTR >(val2);
  if (arg1) (arg1)->dr7 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_dr7_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG_PTR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_dr7_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_dr7_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (ULONG_PTR) ((arg1)->dr7);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_RegisterArea_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  BYTE *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_RegisterArea_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_RegisterArea_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGISTERCONTEXT_RegisterArea_set" "', argument " "2"" of type '" "BYTE [80]""'"); 
  } 
  arg2 = reinterpret_cast< BYTE * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)80; ++ii) *(BYTE *)&arg1->RegisterArea[ii] = *((BYTE *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""RegisterArea""' of type '""BYTE [80]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_RegisterArea_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  BYTE *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_RegisterArea_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_RegisterArea_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (BYTE *)(BYTE *) ((arg1)->RegisterArea);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_x87fpu_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  X87FPU *arg2 = (X87FPU *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_x87fpu_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_x87fpu_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_X87FPU, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGISTERCONTEXT_x87fpu_set" "', argument " "2"" of type '" "X87FPU *""'"); 
  }
  arg2 = reinterpret_cast< X87FPU * >(argp2);
  if (arg1) (arg1)->x87fpu = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_x87fpu_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  X87FPU *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_x87fpu_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_x87fpu_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (X87FPU *)& ((arg1)->x87fpu);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87FPU, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_MxCsr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_MxCsr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_MxCsr_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "REGISTERCONTEXT_MxCsr_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->MxCsr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_MxCsr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_MxCsr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_MxCsr_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (DWORD) ((arg1)->MxCsr);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_XmmRegisters_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  XMMREGISTER *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_XmmRegisters_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_XmmRegisters_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGISTERCONTEXT_XmmRegisters_set" "', argument " "2"" of type '" "XMMREGISTER [16]""'"); 
  } 
  arg2 = reinterpret_cast< XMMREGISTER * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)16; ++ii) *(XMMREGISTER *)&arg1->XmmRegisters[ii] = *((XMMREGISTER *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""XmmRegisters""' of type '""XMMREGISTER [16]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_XmmRegisters_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  XMMREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_XmmRegisters_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_XmmRegisters_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (XMMREGISTER *)(XMMREGISTER *) ((arg1)->XmmRegisters);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__XMMREGISTER, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_YmmRegisters_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  YMMREGISTER *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_YmmRegisters_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_YmmRegisters_set" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_YMMREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGISTERCONTEXT_YmmRegisters_set" "', argument " "2"" of type '" "YMMREGISTER [16]""'"); 
  } 
  arg2 = reinterpret_cast< YMMREGISTER * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)16; ++ii) *(YMMREGISTER *)&arg1->YmmRegisters[ii] = *((YMMREGISTER *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""YmmRegisters""' of type '""YMMREGISTER [16]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGISTERCONTEXT_YmmRegisters_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  YMMREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGISTERCONTEXT_YmmRegisters_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGISTERCONTEXT_YmmRegisters_get" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  result = (YMMREGISTER *)(YMMREGISTER *) ((arg1)->YmmRegisters);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_YMMREGISTER, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_REGISTERCONTEXT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_REGISTERCONTEXT",0,0)) SWIG_fail;
  result = (REGISTERCONTEXT *)new REGISTERCONTEXT();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_REGISTERCONTEXT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_REGISTERCONTEXT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGISTERCONTEXT *arg1 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_REGISTERCONTEXT",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGISTERCONTEXT, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_REGISTERCONTEXT" "', argument " "1"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg1 = reinterpret_cast< REGISTERCONTEXT * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *REGISTERCONTEXT_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_REGISTERCONTEXT, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LASTERROR_code_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTERROR *arg1 = (LASTERROR *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTERROR_code_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTERROR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTERROR_code_set" "', argument " "1"" of type '" "LASTERROR *""'"); 
  }
  arg1 = reinterpret_cast< LASTERROR * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LASTERROR_code_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->code = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LASTERROR_code_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTERROR *arg1 = (LASTERROR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTERROR_code_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTERROR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTERROR_code_get" "', argument " "1"" of type '" "LASTERROR *""'"); 
  }
  arg1 = reinterpret_cast< LASTERROR * >(argp1);
  result = (DWORD) ((arg1)->code);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LASTERROR_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTERROR *arg1 = (LASTERROR *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[128] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTERROR_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTERROR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTERROR_name_set" "', argument " "1"" of type '" "LASTERROR *""'"); 
  }
  arg1 = reinterpret_cast< LASTERROR * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 128);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LASTERROR_name_set" "', argument " "2"" of type '" "char [128]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,128*sizeof(char));
  else memset(arg1->name,0,128*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LASTERROR_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTERROR *arg1 = (LASTERROR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTERROR_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTERROR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTERROR_name_get" "', argument " "1"" of type '" "LASTERROR *""'"); 
  }
  arg1 = reinterpret_cast< LASTERROR * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 128);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LASTERROR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTERROR *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_LASTERROR",0,0)) SWIG_fail;
  result = (LASTERROR *)new LASTERROR();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LASTERROR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LASTERROR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTERROR *arg1 = (LASTERROR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_LASTERROR",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTERROR, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LASTERROR" "', argument " "1"" of type '" "LASTERROR *""'"); 
  }
  arg1 = reinterpret_cast< LASTERROR * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LASTERROR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_LASTERROR, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LASTSTATUS_code_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTSTATUS *arg1 = (LASTSTATUS *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTSTATUS_code_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTSTATUS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTSTATUS_code_set" "', argument " "1"" of type '" "LASTSTATUS *""'"); 
  }
  arg1 = reinterpret_cast< LASTSTATUS * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LASTSTATUS_code_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->code = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LASTSTATUS_code_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTSTATUS *arg1 = (LASTSTATUS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTSTATUS_code_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTSTATUS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTSTATUS_code_get" "', argument " "1"" of type '" "LASTSTATUS *""'"); 
  }
  arg1 = reinterpret_cast< LASTSTATUS * >(argp1);
  result = (DWORD) ((arg1)->code);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LASTSTATUS_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTSTATUS *arg1 = (LASTSTATUS *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[128] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTSTATUS_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTSTATUS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTSTATUS_name_set" "', argument " "1"" of type '" "LASTSTATUS *""'"); 
  }
  arg1 = reinterpret_cast< LASTSTATUS * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 128);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LASTSTATUS_name_set" "', argument " "2"" of type '" "char [128]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,128*sizeof(char));
  else memset(arg1->name,0,128*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LASTSTATUS_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTSTATUS *arg1 = (LASTSTATUS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LASTSTATUS_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTSTATUS, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LASTSTATUS_name_get" "', argument " "1"" of type '" "LASTSTATUS *""'"); 
  }
  arg1 = reinterpret_cast< LASTSTATUS * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 128);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LASTSTATUS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTSTATUS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_LASTSTATUS",0,0)) SWIG_fail;
  result = (LASTSTATUS *)new LASTSTATUS();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LASTSTATUS, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LASTSTATUS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LASTSTATUS *arg1 = (LASTSTATUS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_LASTSTATUS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LASTSTATUS, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LASTSTATUS" "', argument " "1"" of type '" "LASTSTATUS *""'"); 
  }
  arg1 = reinterpret_cast< LASTSTATUS * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LASTSTATUS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_LASTSTATUS, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_REGDUMP_regcontext_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  REGISTERCONTEXT *arg2 = (REGISTERCONTEXT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_regcontext_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_regcontext_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_regcontext_set" "', argument " "2"" of type '" "REGISTERCONTEXT *""'"); 
  }
  arg2 = reinterpret_cast< REGISTERCONTEXT * >(argp2);
  if (arg1) (arg1)->regcontext = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_regcontext_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  REGISTERCONTEXT *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_regcontext_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_regcontext_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (REGISTERCONTEXT *)& ((arg1)->regcontext);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_REGISTERCONTEXT, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  FLAGS *arg2 = (FLAGS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_flags_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_flags_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_FLAGS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_flags_set" "', argument " "2"" of type '" "FLAGS *""'"); 
  }
  arg2 = reinterpret_cast< FLAGS * >(argp2);
  if (arg1) (arg1)->flags = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FLAGS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_flags_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_flags_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (FLAGS *)& ((arg1)->flags);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FLAGS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_x87FPURegisters_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  X87FPUREGISTER *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_x87FPURegisters_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_x87FPURegisters_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_x87FPURegisters_set" "', argument " "2"" of type '" "X87FPUREGISTER [8]""'"); 
  } 
  arg2 = reinterpret_cast< X87FPUREGISTER * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(X87FPUREGISTER *)&arg1->x87FPURegisters[ii] = *((X87FPUREGISTER *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""x87FPURegisters""' of type '""X87FPUREGISTER [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_x87FPURegisters_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  X87FPUREGISTER *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_x87FPURegisters_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_x87FPURegisters_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (X87FPUREGISTER *)(X87FPUREGISTER *) ((arg1)->x87FPURegisters);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87FPUREGISTER, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_mmx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  unsigned long long *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_mmx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_mmx_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_mmx_set" "', argument " "2"" of type '" "unsigned long long [8]""'"); 
  } 
  arg2 = reinterpret_cast< unsigned long long * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)8; ++ii) *(unsigned long long *)&arg1->mmx[ii] = *((unsigned long long *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""mmx""' of type '""unsigned long long [8]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_mmx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_mmx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_mmx_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (unsigned long long *)(unsigned long long *) ((arg1)->mmx);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_MxCsrFields_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  MXCSRFIELDS *arg2 = (MXCSRFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_MxCsrFields_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_MxCsrFields_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_MxCsrFields_set" "', argument " "2"" of type '" "MXCSRFIELDS *""'"); 
  }
  arg2 = reinterpret_cast< MXCSRFIELDS * >(argp2);
  if (arg1) (arg1)->MxCsrFields = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_MxCsrFields_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MXCSRFIELDS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_MxCsrFields_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_MxCsrFields_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (MXCSRFIELDS *)& ((arg1)->MxCsrFields);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MXCSRFIELDS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_x87StatusWordFields_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  X87STATUSWORDFIELDS *arg2 = (X87STATUSWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_x87StatusWordFields_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_x87StatusWordFields_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_x87StatusWordFields_set" "', argument " "2"" of type '" "X87STATUSWORDFIELDS *""'"); 
  }
  arg2 = reinterpret_cast< X87STATUSWORDFIELDS * >(argp2);
  if (arg1) (arg1)->x87StatusWordFields = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_x87StatusWordFields_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  X87STATUSWORDFIELDS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_x87StatusWordFields_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_x87StatusWordFields_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (X87STATUSWORDFIELDS *)& ((arg1)->x87StatusWordFields);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87STATUSWORDFIELDS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_x87ControlWordFields_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  X87CONTROLWORDFIELDS *arg2 = (X87CONTROLWORDFIELDS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_x87ControlWordFields_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_x87ControlWordFields_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_x87ControlWordFields_set" "', argument " "2"" of type '" "X87CONTROLWORDFIELDS *""'"); 
  }
  arg2 = reinterpret_cast< X87CONTROLWORDFIELDS * >(argp2);
  if (arg1) (arg1)->x87ControlWordFields = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_x87ControlWordFields_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  X87CONTROLWORDFIELDS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_x87ControlWordFields_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_x87ControlWordFields_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (X87CONTROLWORDFIELDS *)& ((arg1)->x87ControlWordFields);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_X87CONTROLWORDFIELDS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_lastError_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  LASTERROR *arg2 = (LASTERROR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_lastError_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_lastError_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_LASTERROR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_lastError_set" "', argument " "2"" of type '" "LASTERROR *""'"); 
  }
  arg2 = reinterpret_cast< LASTERROR * >(argp2);
  if (arg1) (arg1)->lastError = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_lastError_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  LASTERROR *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_lastError_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_lastError_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (LASTERROR *)& ((arg1)->lastError);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LASTERROR, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_lastStatus_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  LASTSTATUS *arg2 = (LASTSTATUS *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_lastStatus_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_lastStatus_set" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_LASTSTATUS, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "REGDUMP_lastStatus_set" "', argument " "2"" of type '" "LASTSTATUS *""'"); 
  }
  arg2 = reinterpret_cast< LASTSTATUS * >(argp2);
  if (arg1) (arg1)->lastStatus = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_REGDUMP_lastStatus_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  LASTSTATUS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"REGDUMP_lastStatus_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "REGDUMP_lastStatus_get" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  result = (LASTSTATUS *)& ((arg1)->lastStatus);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LASTSTATUS, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_REGDUMP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_REGDUMP",0,0)) SWIG_fail;
  result = (REGDUMP *)new REGDUMP();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_REGDUMP, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_REGDUMP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_REGDUMP",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_REGDUMP" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *REGDUMP_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_REGDUMP, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DISASM_ARG_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  DISASM_ARGTYPE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_type_set" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_ARG_type_set" "', argument " "2"" of type '" "DISASM_ARGTYPE""'");
  } 
  arg2 = static_cast< DISASM_ARGTYPE >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DISASM_ARGTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_type_get" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  result = (DISASM_ARGTYPE) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_segment_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  SEGMENTREG arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_segment_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_segment_set" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_ARG_segment_set" "', argument " "2"" of type '" "SEGMENTREG""'");
  } 
  arg2 = static_cast< SEGMENTREG >(val2);
  if (arg1) (arg1)->segment = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_segment_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SEGMENTREG result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_segment_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_segment_get" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  result = (SEGMENTREG) ((arg1)->segment);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_mnemonic_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[64] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_mnemonic_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_mnemonic_set" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 64);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DISASM_ARG_mnemonic_set" "', argument " "2"" of type '" "char [64]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mnemonic,arg2,64*sizeof(char));
  else memset(arg1->mnemonic,0,64*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_mnemonic_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_mnemonic_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_mnemonic_get" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  result = (char *)(char *) ((arg1)->mnemonic);
  {
    size_t size = SWIG_strnlen(result, 64);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_constant_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_constant_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_constant_set" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_ARG_constant_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->constant = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_constant_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_constant_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_constant_get" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  result = (duint) ((arg1)->constant);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_value_set" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_ARG_value_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_value_get" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  result = (duint) ((arg1)->value);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_memvalue_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_memvalue_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_memvalue_set" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_ARG_memvalue_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->memvalue = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_ARG_memvalue_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_ARG_memvalue_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_ARG_memvalue_get" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  result = (duint) ((arg1)->memvalue);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DISASM_ARG(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DISASM_ARG",0,0)) SWIG_fail;
  result = (DISASM_ARG *)new DISASM_ARG();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DISASM_ARG, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DISASM_ARG(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_ARG *arg1 = (DISASM_ARG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DISASM_ARG",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_ARG, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DISASM_ARG" "', argument " "1"" of type '" "DISASM_ARG *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_ARG * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DISASM_ARG_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DISASM_ARG, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DISASM_INSTR_instruction_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[64] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_instruction_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_instruction_set" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 64);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DISASM_INSTR_instruction_set" "', argument " "2"" of type '" "char [64]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->instruction,arg2,64*sizeof(char));
  else memset(arg1->instruction,0,64*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_instruction_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_instruction_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_instruction_get" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  result = (char *)(char *) ((arg1)->instruction);
  {
    size_t size = SWIG_strnlen(result, 64);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  DISASM_INSTRTYPE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_type_set" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_INSTR_type_set" "', argument " "2"" of type '" "DISASM_INSTRTYPE""'");
  } 
  arg2 = static_cast< DISASM_INSTRTYPE >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DISASM_INSTRTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_type_get" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  result = (DISASM_INSTRTYPE) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_argcount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_argcount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_argcount_set" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_INSTR_argcount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->argcount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_argcount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_argcount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_argcount_get" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  result = (int) ((arg1)->argcount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_instr_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_instr_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_instr_size_set" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DISASM_INSTR_instr_size_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->instr_size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_instr_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_instr_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_instr_size_get" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  result = (int) ((arg1)->instr_size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_arg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  DISASM_ARG *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_arg_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_arg_set" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DISASM_INSTR_arg_set" "', argument " "2"" of type '" "DISASM_ARG [3]""'"); 
  } 
  arg2 = reinterpret_cast< DISASM_ARG * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)3; ++ii) *(DISASM_ARG *)&arg1->arg[ii] = *((DISASM_ARG *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""arg""' of type '""DISASM_ARG [3]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DISASM_INSTR_arg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DISASM_ARG *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DISASM_INSTR_arg_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DISASM_INSTR_arg_get" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  result = (DISASM_ARG *)(DISASM_ARG *) ((arg1)->arg);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DISASM_ARG, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DISASM_INSTR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DISASM_INSTR",0,0)) SWIG_fail;
  result = (DISASM_INSTR *)new DISASM_INSTR();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DISASM_INSTR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DISASM_INSTR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DISASM_INSTR *arg1 = (DISASM_INSTR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DISASM_INSTR",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DISASM_INSTR, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DISASM_INSTR" "', argument " "1"" of type '" "DISASM_INSTR *""'"); 
  }
  arg1 = reinterpret_cast< DISASM_INSTR * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DISASM_INSTR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DISASM_INSTR, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_STACK_COMMENT_color_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  STACK_COMMENT *arg1 = (STACK_COMMENT *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[8] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"STACK_COMMENT_color_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_STACK_COMMENT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "STACK_COMMENT_color_set" "', argument " "1"" of type '" "STACK_COMMENT *""'"); 
  }
  arg1 = reinterpret_cast< STACK_COMMENT * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 8);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "STACK_COMMENT_color_set" "', argument " "2"" of type '" "char [8]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->color,arg2,8*sizeof(char));
  else memset(arg1->color,0,8*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_STACK_COMMENT_color_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  STACK_COMMENT *arg1 = (STACK_COMMENT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"STACK_COMMENT_color_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_STACK_COMMENT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "STACK_COMMENT_color_get" "', argument " "1"" of type '" "STACK_COMMENT *""'"); 
  }
  arg1 = reinterpret_cast< STACK_COMMENT * >(argp1);
  result = (char *)(char *) ((arg1)->color);
  {
    size_t size = SWIG_strnlen(result, 8);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_STACK_COMMENT_comment_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  STACK_COMMENT *arg1 = (STACK_COMMENT *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[512] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"STACK_COMMENT_comment_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_STACK_COMMENT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "STACK_COMMENT_comment_set" "', argument " "1"" of type '" "STACK_COMMENT *""'"); 
  }
  arg1 = reinterpret_cast< STACK_COMMENT * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 512);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "STACK_COMMENT_comment_set" "', argument " "2"" of type '" "char [512]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->comment,arg2,512*sizeof(char));
  else memset(arg1->comment,0,512*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_STACK_COMMENT_comment_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  STACK_COMMENT *arg1 = (STACK_COMMENT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"STACK_COMMENT_comment_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_STACK_COMMENT, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "STACK_COMMENT_comment_get" "', argument " "1"" of type '" "STACK_COMMENT *""'"); 
  }
  arg1 = reinterpret_cast< STACK_COMMENT * >(argp1);
  result = (char *)(char *) ((arg1)->comment);
  {
    size_t size = SWIG_strnlen(result, 512);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_STACK_COMMENT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  STACK_COMMENT *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_STACK_COMMENT",0,0)) SWIG_fail;
  result = (STACK_COMMENT *)new STACK_COMMENT();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_STACK_COMMENT, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_STACK_COMMENT(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  STACK_COMMENT *arg1 = (STACK_COMMENT *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_STACK_COMMENT",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_STACK_COMMENT, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_STACK_COMMENT" "', argument " "1"" of type '" "STACK_COMMENT *""'"); 
  }
  arg1 = reinterpret_cast< STACK_COMMENT * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *STACK_COMMENT_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_STACK_COMMENT, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_THREADINFO_ThreadNumber_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadNumber_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadNumber_set" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADINFO_ThreadNumber_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->ThreadNumber = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_ThreadNumber_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadNumber_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadNumber_get" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  result = (int) ((arg1)->ThreadNumber);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_Handle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  HANDLE arg2 = (HANDLE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_Handle_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_Handle_set" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "THREADINFO_Handle_set" "', argument " "2"" of type '" "HANDLE""'"); 
  }
  if (arg1) (arg1)->Handle = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_Handle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  HANDLE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_Handle_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_Handle_get" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  result = (HANDLE) ((arg1)->Handle);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_ThreadId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadId_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadId_set" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADINFO_ThreadId_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->ThreadId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_ThreadId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadId_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadId_get" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  result = (DWORD) ((arg1)->ThreadId);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_ThreadStartAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadStartAddress_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadStartAddress_set" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADINFO_ThreadStartAddress_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->ThreadStartAddress = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_ThreadStartAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadStartAddress_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadStartAddress_get" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  result = (duint) ((arg1)->ThreadStartAddress);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_ThreadLocalBase_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadLocalBase_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadLocalBase_set" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADINFO_ThreadLocalBase_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->ThreadLocalBase = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_ThreadLocalBase_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_ThreadLocalBase_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_ThreadLocalBase_get" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  result = (duint) ((arg1)->ThreadLocalBase);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_threadName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_threadName_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_threadName_set" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "THREADINFO_threadName_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->threadName,arg2,256*sizeof(char));
  else memset(arg1->threadName,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADINFO_threadName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADINFO_threadName_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADINFO_threadName_get" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  result = (char *)(char *) ((arg1)->threadName);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_THREADINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_THREADINFO",0,0)) SWIG_fail;
  result = (THREADINFO *)new THREADINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_THREADINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_THREADINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADINFO *arg1 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_THREADINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_THREADINFO" "', argument " "1"" of type '" "THREADINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *THREADINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_THREADINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_THREADALLINFO_BasicInfo_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  THREADINFO *arg2 = (THREADINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_BasicInfo_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_BasicInfo_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_THREADINFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "THREADALLINFO_BasicInfo_set" "', argument " "2"" of type '" "THREADINFO *""'"); 
  }
  arg2 = reinterpret_cast< THREADINFO * >(argp2);
  if (arg1) (arg1)->BasicInfo = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_BasicInfo_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  THREADINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_BasicInfo_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_BasicInfo_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result = (THREADINFO *)& ((arg1)->BasicInfo);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_THREADINFO, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_ThreadCip_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_ThreadCip_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_ThreadCip_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADALLINFO_ThreadCip_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->ThreadCip = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_ThreadCip_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_ThreadCip_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_ThreadCip_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result = (duint) ((arg1)->ThreadCip);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_SuspendCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_SuspendCount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_SuspendCount_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADALLINFO_SuspendCount_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->SuspendCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_SuspendCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_SuspendCount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_SuspendCount_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result = (DWORD) ((arg1)->SuspendCount);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_Priority_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  THREADPRIORITY arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_Priority_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_Priority_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADALLINFO_Priority_set" "', argument " "2"" of type '" "THREADPRIORITY""'");
  } 
  arg2 = static_cast< THREADPRIORITY >(val2);
  if (arg1) (arg1)->Priority = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_Priority_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  THREADPRIORITY result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_Priority_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_Priority_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result = (THREADPRIORITY) ((arg1)->Priority);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_WaitReason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  THREADWAITREASON arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_WaitReason_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_WaitReason_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADALLINFO_WaitReason_set" "', argument " "2"" of type '" "THREADWAITREASON""'");
  } 
  arg2 = static_cast< THREADWAITREASON >(val2);
  if (arg1) (arg1)->WaitReason = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_WaitReason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  THREADWAITREASON result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_WaitReason_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_WaitReason_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result = (THREADWAITREASON) ((arg1)->WaitReason);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_LastError_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_LastError_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_LastError_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADALLINFO_LastError_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->LastError = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_LastError_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_LastError_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_LastError_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result = (DWORD) ((arg1)->LastError);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_UserTime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  FILETIME arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_UserTime_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_UserTime_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_FILETIME,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "THREADALLINFO_UserTime_set" "', argument " "2"" of type '" "FILETIME""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "THREADALLINFO_UserTime_set" "', argument " "2"" of type '" "FILETIME""'");
    } else {
      FILETIME * temp = reinterpret_cast< FILETIME * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->UserTime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_UserTime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FILETIME result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_UserTime_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_UserTime_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result =  ((arg1)->UserTime);
  resultobj = SWIG_NewPointerObj((new FILETIME(static_cast< const FILETIME& >(result))), SWIGTYPE_p_FILETIME, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_KernelTime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  FILETIME arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_KernelTime_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_KernelTime_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_FILETIME,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "THREADALLINFO_KernelTime_set" "', argument " "2"" of type '" "FILETIME""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "THREADALLINFO_KernelTime_set" "', argument " "2"" of type '" "FILETIME""'");
    } else {
      FILETIME * temp = reinterpret_cast< FILETIME * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->KernelTime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_KernelTime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FILETIME result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_KernelTime_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_KernelTime_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result =  ((arg1)->KernelTime);
  resultobj = SWIG_NewPointerObj((new FILETIME(static_cast< const FILETIME& >(result))), SWIGTYPE_p_FILETIME, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_CreationTime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  FILETIME arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_CreationTime_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_CreationTime_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_FILETIME,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "THREADALLINFO_CreationTime_set" "', argument " "2"" of type '" "FILETIME""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "THREADALLINFO_CreationTime_set" "', argument " "2"" of type '" "FILETIME""'");
    } else {
      FILETIME * temp = reinterpret_cast< FILETIME * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->CreationTime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_CreationTime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FILETIME result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_CreationTime_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_CreationTime_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result =  ((arg1)->CreationTime);
  resultobj = SWIG_NewPointerObj((new FILETIME(static_cast< const FILETIME& >(result))), SWIGTYPE_p_FILETIME, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_Cycles_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  ULONG64 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_Cycles_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_Cycles_set" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADALLINFO_Cycles_set" "', argument " "2"" of type '" "ULONG64""'");
  } 
  arg2 = static_cast< ULONG64 >(val2);
  if (arg1) (arg1)->Cycles = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADALLINFO_Cycles_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ULONG64 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADALLINFO_Cycles_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADALLINFO_Cycles_get" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  result =  ((arg1)->Cycles);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_THREADALLINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_THREADALLINFO",0,0)) SWIG_fail;
  result = (THREADALLINFO *)new THREADALLINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_THREADALLINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_THREADALLINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADALLINFO *arg1 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_THREADALLINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADALLINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_THREADALLINFO" "', argument " "1"" of type '" "THREADALLINFO *""'"); 
  }
  arg1 = reinterpret_cast< THREADALLINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *THREADALLINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_THREADALLINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_THREADLIST_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADLIST_count_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADLIST_count_set" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADLIST_count_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADLIST_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADLIST_count_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADLIST_count_get" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  result = (int) ((arg1)->count);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADLIST_list_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  THREADALLINFO *arg2 = (THREADALLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADLIST_list_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADLIST_list_set" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_THREADALLINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "THREADLIST_list_set" "', argument " "2"" of type '" "THREADALLINFO *""'"); 
  }
  arg2 = reinterpret_cast< THREADALLINFO * >(argp2);
  if (arg1) (arg1)->list = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADLIST_list_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  THREADALLINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADLIST_list_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADLIST_list_get" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  result = (THREADALLINFO *) ((arg1)->list);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_THREADALLINFO, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADLIST_CurrentThread_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADLIST_CurrentThread_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADLIST_CurrentThread_set" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "THREADLIST_CurrentThread_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->CurrentThread = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_THREADLIST_CurrentThread_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"THREADLIST_CurrentThread_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "THREADLIST_CurrentThread_get" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  result = (int) ((arg1)->CurrentThread);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_THREADLIST(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_THREADLIST",0,0)) SWIG_fail;
  result = (THREADLIST *)new THREADLIST();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_THREADLIST, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_THREADLIST(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_THREADLIST",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_THREADLIST" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *THREADLIST_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_THREADLIST, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MEMORY_INFO_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *arg1 = (MEMORY_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_INFO_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_INFO_value_set" "', argument " "1"" of type '" "MEMORY_INFO *""'"); 
  }
  arg1 = reinterpret_cast< MEMORY_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMORY_INFO_value_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_INFO_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *arg1 = (MEMORY_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_INFO_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_INFO_value_get" "', argument " "1"" of type '" "MEMORY_INFO *""'"); 
  }
  arg1 = reinterpret_cast< MEMORY_INFO * >(argp1);
  result = (duint) ((arg1)->value);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_INFO_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *arg1 = (MEMORY_INFO *) 0 ;
  MEMORY_SIZE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_INFO_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_INFO_size_set" "', argument " "1"" of type '" "MEMORY_INFO *""'"); 
  }
  arg1 = reinterpret_cast< MEMORY_INFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMORY_INFO_size_set" "', argument " "2"" of type '" "MEMORY_SIZE""'");
  } 
  arg2 = static_cast< MEMORY_SIZE >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_INFO_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *arg1 = (MEMORY_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMORY_SIZE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_INFO_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_INFO_size_get" "', argument " "1"" of type '" "MEMORY_INFO *""'"); 
  }
  arg1 = reinterpret_cast< MEMORY_INFO * >(argp1);
  result = (MEMORY_SIZE) ((arg1)->size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_INFO_mnemonic_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *arg1 = (MEMORY_INFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[64] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_INFO_mnemonic_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_INFO_mnemonic_set" "', argument " "1"" of type '" "MEMORY_INFO *""'"); 
  }
  arg1 = reinterpret_cast< MEMORY_INFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 64);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MEMORY_INFO_mnemonic_set" "', argument " "2"" of type '" "char [64]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mnemonic,arg2,64*sizeof(char));
  else memset(arg1->mnemonic,0,64*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMORY_INFO_mnemonic_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *arg1 = (MEMORY_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMORY_INFO_mnemonic_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMORY_INFO_mnemonic_get" "', argument " "1"" of type '" "MEMORY_INFO *""'"); 
  }
  arg1 = reinterpret_cast< MEMORY_INFO * >(argp1);
  result = (char *)(char *) ((arg1)->mnemonic);
  {
    size_t size = SWIG_strnlen(result, 64);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MEMORY_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MEMORY_INFO",0,0)) SWIG_fail;
  result = (MEMORY_INFO *)new MEMORY_INFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMORY_INFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MEMORY_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMORY_INFO *arg1 = (MEMORY_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MEMORY_INFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMORY_INFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MEMORY_INFO" "', argument " "1"" of type '" "MEMORY_INFO *""'"); 
  }
  arg1 = reinterpret_cast< MEMORY_INFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MEMORY_INFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_MEMORY_INFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_VALUE_INFO_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VALUE_INFO *arg1 = (VALUE_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"VALUE_INFO_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VALUE_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VALUE_INFO_value_set" "', argument " "1"" of type '" "VALUE_INFO *""'"); 
  }
  arg1 = reinterpret_cast< VALUE_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VALUE_INFO_value_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VALUE_INFO_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VALUE_INFO *arg1 = (VALUE_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"VALUE_INFO_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VALUE_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VALUE_INFO_value_get" "', argument " "1"" of type '" "VALUE_INFO *""'"); 
  }
  arg1 = reinterpret_cast< VALUE_INFO * >(argp1);
  result = (duint) ((arg1)->value);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VALUE_INFO_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VALUE_INFO *arg1 = (VALUE_INFO *) 0 ;
  VALUE_SIZE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"VALUE_INFO_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VALUE_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VALUE_INFO_size_set" "', argument " "1"" of type '" "VALUE_INFO *""'"); 
  }
  arg1 = reinterpret_cast< VALUE_INFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "VALUE_INFO_size_set" "', argument " "2"" of type '" "VALUE_SIZE""'");
  } 
  arg2 = static_cast< VALUE_SIZE >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_VALUE_INFO_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VALUE_INFO *arg1 = (VALUE_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VALUE_SIZE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"VALUE_INFO_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VALUE_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "VALUE_INFO_size_get" "', argument " "1"" of type '" "VALUE_INFO *""'"); 
  }
  arg1 = reinterpret_cast< VALUE_INFO * >(argp1);
  result = (VALUE_SIZE) ((arg1)->size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_VALUE_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VALUE_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_VALUE_INFO",0,0)) SWIG_fail;
  result = (VALUE_INFO *)new VALUE_INFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VALUE_INFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_VALUE_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  VALUE_INFO *arg1 = (VALUE_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_VALUE_INFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_VALUE_INFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_VALUE_INFO" "', argument " "1"" of type '" "VALUE_INFO *""'"); 
  }
  arg1 = reinterpret_cast< VALUE_INFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *VALUE_INFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_VALUE_INFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_type_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BASIC_INSTRUCTION_INFO_type_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_type_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (DWORD) ((arg1)->type);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  VALUE_INFO *arg2 = (VALUE_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_value_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_VALUE_INFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BASIC_INSTRUCTION_INFO_value_set" "', argument " "2"" of type '" "VALUE_INFO *""'"); 
  }
  arg2 = reinterpret_cast< VALUE_INFO * >(argp2);
  if (arg1) (arg1)->value = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VALUE_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_value_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (VALUE_INFO *)& ((arg1)->value);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_VALUE_INFO, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_memory_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  MEMORY_INFO *arg2 = (MEMORY_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_memory_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_memory_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BASIC_INSTRUCTION_INFO_memory_set" "', argument " "2"" of type '" "MEMORY_INFO *""'"); 
  }
  arg2 = reinterpret_cast< MEMORY_INFO * >(argp2);
  if (arg1) (arg1)->memory = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_memory_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMORY_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_memory_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_memory_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (MEMORY_INFO *)& ((arg1)->memory);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMORY_INFO, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_addr_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BASIC_INSTRUCTION_INFO_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_addr_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_branch_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_branch_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_branch_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BASIC_INSTRUCTION_INFO_branch_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->branch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_branch_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_branch_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_branch_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (bool) ((arg1)->branch);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_call_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_call_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_call_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BASIC_INSTRUCTION_INFO_call_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->call = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_call_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_call_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_call_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (bool) ((arg1)->call);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_size_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BASIC_INSTRUCTION_INFO_size_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_size_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (int) ((arg1)->size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_instruction_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[64*4] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_instruction_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_instruction_set" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 64*4);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BASIC_INSTRUCTION_INFO_instruction_set" "', argument " "2"" of type '" "char [64*4]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->instruction,arg2,64*4*sizeof(char));
  else memset(arg1->instruction,0,64*4*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BASIC_INSTRUCTION_INFO_instruction_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BASIC_INSTRUCTION_INFO_instruction_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BASIC_INSTRUCTION_INFO_instruction_get" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  result = (char *)(char *) ((arg1)->instruction);
  {
    size_t size = SWIG_strnlen(result, 64*4);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BASIC_INSTRUCTION_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_BASIC_INSTRUCTION_INFO",0,0)) SWIG_fail;
  result = (BASIC_INSTRUCTION_INFO *)new BASIC_INSTRUCTION_INFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BASIC_INSTRUCTION_INFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BASIC_INSTRUCTION_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BASIC_INSTRUCTION_INFO *arg1 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_BASIC_INSTRUCTION_INFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BASIC_INSTRUCTION_INFO" "', argument " "1"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg1 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BASIC_INSTRUCTION_INFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BASIC_INSTRUCTION_INFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SCRIPTBRANCH_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *arg1 = (SCRIPTBRANCH *) 0 ;
  SCRIPTBRANCHTYPE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTBRANCH_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTBRANCH, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTBRANCH_type_set" "', argument " "1"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTBRANCH * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SCRIPTBRANCH_type_set" "', argument " "2"" of type '" "SCRIPTBRANCHTYPE""'");
  } 
  arg2 = static_cast< SCRIPTBRANCHTYPE >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTBRANCH_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *arg1 = (SCRIPTBRANCH *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SCRIPTBRANCHTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTBRANCH_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTBRANCH, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTBRANCH_type_get" "', argument " "1"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTBRANCH * >(argp1);
  result = (SCRIPTBRANCHTYPE) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTBRANCH_dest_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *arg1 = (SCRIPTBRANCH *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTBRANCH_dest_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTBRANCH, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTBRANCH_dest_set" "', argument " "1"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTBRANCH * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SCRIPTBRANCH_dest_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->dest = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTBRANCH_dest_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *arg1 = (SCRIPTBRANCH *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTBRANCH_dest_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTBRANCH, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTBRANCH_dest_get" "', argument " "1"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTBRANCH * >(argp1);
  result = (int) ((arg1)->dest);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTBRANCH_branchlabel_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *arg1 = (SCRIPTBRANCH *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTBRANCH_branchlabel_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTBRANCH, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTBRANCH_branchlabel_set" "', argument " "1"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTBRANCH * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SCRIPTBRANCH_branchlabel_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->branchlabel,arg2,256*sizeof(char));
  else memset(arg1->branchlabel,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTBRANCH_branchlabel_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *arg1 = (SCRIPTBRANCH *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTBRANCH_branchlabel_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTBRANCH, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTBRANCH_branchlabel_get" "', argument " "1"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTBRANCH * >(argp1);
  result = (char *)(char *) ((arg1)->branchlabel);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SCRIPTBRANCH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SCRIPTBRANCH",0,0)) SWIG_fail;
  result = (SCRIPTBRANCH *)new SCRIPTBRANCH();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SCRIPTBRANCH, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SCRIPTBRANCH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTBRANCH *arg1 = (SCRIPTBRANCH *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SCRIPTBRANCH",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTBRANCH, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SCRIPTBRANCH" "', argument " "1"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTBRANCH * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SCRIPTBRANCH_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SCRIPTBRANCH, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_addr_set" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_LOOP_INFO_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_addr_get" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_start_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_start_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_start_set" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_LOOP_INFO_start_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->start = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_start_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_start_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_start_get" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  result = (duint) ((arg1)->start);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_end_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_end_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_end_set" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_LOOP_INFO_end_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->end = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_end_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_end_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_end_get" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  result = (duint) ((arg1)->end);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_manual_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_manual_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_manual_set" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_LOOP_INFO_manual_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->manual = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_manual_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_manual_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_manual_get" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  result = (bool) ((arg1)->manual);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_depth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_depth_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_depth_set" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FUNCTION_LOOP_INFO_depth_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->depth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FUNCTION_LOOP_INFO_depth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FUNCTION_LOOP_INFO_depth_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FUNCTION_LOOP_INFO_depth_get" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  result = (int) ((arg1)->depth);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FUNCTION_LOOP_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_FUNCTION_LOOP_INFO",0,0)) SWIG_fail;
  result = (FUNCTION_LOOP_INFO *)new FUNCTION_LOOP_INFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FUNCTION_LOOP_INFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FUNCTION_LOOP_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FUNCTION_LOOP_INFO *arg1 = (FUNCTION_LOOP_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FUNCTION_LOOP_INFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FUNCTION_LOOP_INFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FUNCTION_LOOP_INFO" "', argument " "1"" of type '" "FUNCTION_LOOP_INFO *""'"); 
  }
  arg1 = reinterpret_cast< FUNCTION_LOOP_INFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FUNCTION_LOOP_INFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FUNCTION_LOOP_INFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_XREF_RECORD_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_RECORD *arg1 = (XREF_RECORD *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_RECORD_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_RECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_RECORD_addr_set" "', argument " "1"" of type '" "XREF_RECORD *""'"); 
  }
  arg1 = reinterpret_cast< XREF_RECORD * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XREF_RECORD_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XREF_RECORD_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_RECORD *arg1 = (XREF_RECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_RECORD_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_RECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_RECORD_addr_get" "', argument " "1"" of type '" "XREF_RECORD *""'"); 
  }
  arg1 = reinterpret_cast< XREF_RECORD * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XREF_RECORD_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_RECORD *arg1 = (XREF_RECORD *) 0 ;
  XREFTYPE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_RECORD_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_RECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_RECORD_type_set" "', argument " "1"" of type '" "XREF_RECORD *""'"); 
  }
  arg1 = reinterpret_cast< XREF_RECORD * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XREF_RECORD_type_set" "', argument " "2"" of type '" "XREFTYPE""'");
  } 
  arg2 = static_cast< XREFTYPE >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XREF_RECORD_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_RECORD *arg1 = (XREF_RECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  XREFTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_RECORD_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_RECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_RECORD_type_get" "', argument " "1"" of type '" "XREF_RECORD *""'"); 
  }
  arg1 = reinterpret_cast< XREF_RECORD * >(argp1);
  result = (XREFTYPE) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_XREF_RECORD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_RECORD *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_XREF_RECORD",0,0)) SWIG_fail;
  result = (XREF_RECORD *)new XREF_RECORD();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_XREF_RECORD, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_XREF_RECORD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_RECORD *arg1 = (XREF_RECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_XREF_RECORD",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_RECORD, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XREF_RECORD" "', argument " "1"" of type '" "XREF_RECORD *""'"); 
  }
  arg1 = reinterpret_cast< XREF_RECORD * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *XREF_RECORD_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_XREF_RECORD, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_XREF_INFO_refcount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_INFO *arg1 = (XREF_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_INFO_refcount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_INFO_refcount_set" "', argument " "1"" of type '" "XREF_INFO *""'"); 
  }
  arg1 = reinterpret_cast< XREF_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "XREF_INFO_refcount_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->refcount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XREF_INFO_refcount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_INFO *arg1 = (XREF_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_INFO_refcount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_INFO_refcount_get" "', argument " "1"" of type '" "XREF_INFO *""'"); 
  }
  arg1 = reinterpret_cast< XREF_INFO * >(argp1);
  result = (duint) ((arg1)->refcount);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XREF_INFO_references_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_INFO *arg1 = (XREF_INFO *) 0 ;
  XREF_RECORD *arg2 = (XREF_RECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_INFO_references_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_INFO_references_set" "', argument " "1"" of type '" "XREF_INFO *""'"); 
  }
  arg1 = reinterpret_cast< XREF_INFO * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_XREF_RECORD, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "XREF_INFO_references_set" "', argument " "2"" of type '" "XREF_RECORD *""'"); 
  }
  arg2 = reinterpret_cast< XREF_RECORD * >(argp2);
  if (arg1) (arg1)->references = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_XREF_INFO_references_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_INFO *arg1 = (XREF_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  XREF_RECORD *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"XREF_INFO_references_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XREF_INFO_references_get" "', argument " "1"" of type '" "XREF_INFO *""'"); 
  }
  arg1 = reinterpret_cast< XREF_INFO * >(argp1);
  result = (XREF_RECORD *) ((arg1)->references);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_XREF_RECORD, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_XREF_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_XREF_INFO",0,0)) SWIG_fail;
  result = (XREF_INFO *)new XREF_INFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_XREF_INFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_XREF_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  XREF_INFO *arg1 = (XREF_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_XREF_INFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_XREF_INFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XREF_INFO" "', argument " "1"" of type '" "XREF_INFO *""'"); 
  }
  arg1 = reinterpret_cast< XREF_INFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *XREF_INFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_XREF_INFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SYMBOLPTR_modbase_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLPTR_ *arg1 = (SYMBOLPTR_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLPTR_modbase_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLPTR_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLPTR_modbase_set" "', argument " "1"" of type '" "SYMBOLPTR_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLPTR_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SYMBOLPTR_modbase_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->modbase = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLPTR_modbase_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLPTR_ *arg1 = (SYMBOLPTR_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLPTR_modbase_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLPTR_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLPTR_modbase_get" "', argument " "1"" of type '" "SYMBOLPTR_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLPTR_ * >(argp1);
  result = (duint) ((arg1)->modbase);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLPTR_symbol_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLPTR_ *arg1 = (SYMBOLPTR_ *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLPTR_symbol_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLPTR_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLPTR_symbol_set" "', argument " "1"" of type '" "SYMBOLPTR_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLPTR_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SYMBOLPTR_symbol_set" "', argument " "2"" of type '" "void const *""'"); 
  }
  if (arg1) (arg1)->symbol = (void const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SYMBOLPTR_symbol_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLPTR_ *arg1 = (SYMBOLPTR_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SYMBOLPTR_symbol_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLPTR_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SYMBOLPTR_symbol_get" "', argument " "1"" of type '" "SYMBOLPTR_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLPTR_ * >(argp1);
  result = (void *) ((arg1)->symbol);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SYMBOLPTR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLPTR_ *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SYMBOLPTR",0,0)) SWIG_fail;
  result = (SYMBOLPTR_ *)new SYMBOLPTR_();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SYMBOLPTR_, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SYMBOLPTR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLPTR_ *arg1 = (SYMBOLPTR_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SYMBOLPTR",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLPTR_, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SYMBOLPTR" "', argument " "1"" of type '" "SYMBOLPTR_ *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLPTR_ * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SYMBOLPTR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SYMBOLPTR_, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DbgInit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgInit",0,0)) SWIG_fail;
  result = (char *)DbgInit();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgExit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgExit",0,0)) SWIG_fail;
  DbgExit();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMemRead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  void *arg2 = (void *) 0 ;
  duint arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void *buf2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMemRead",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgMemRead" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsWriteBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgMemRead" "', argument " "2"" of type '" "(void *dest, SIZE)""'");
    }
    arg2 = (void *) buf2;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DbgMemRead" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  result = (bool)DbgMemRead(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMemWrite(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  void *arg2 = (void *) 0 ;
  duint arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMemWrite",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgMemWrite" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgMemWrite" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DbgMemWrite" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  result = (bool)DbgMemWrite(arg1,(void const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMemGetPageSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMemGetPageSize",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgMemGetPageSize" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)DbgMemGetPageSize(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMemFindBaseAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMemFindBaseAddr",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgMemFindBaseAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgMemFindBaseAddr" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (duint)DbgMemFindBaseAddr(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgCmdExec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgCmdExec",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgCmdExec" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (bool)DbgCmdExec((char const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgCmdExecDirect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgCmdExecDirect",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgCmdExecDirect" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (bool)DbgCmdExecDirect((char const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMemMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMMAP *arg1 = (MEMMAP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMemMap",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMMAP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgMemMap" "', argument " "1"" of type '" "MEMMAP *""'"); 
  }
  arg1 = reinterpret_cast< MEMMAP * >(argp1);
  result = (bool)DbgMemMap(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgIsValidExpression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgIsValidExpression",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgIsValidExpression" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (bool)DbgIsValidExpression((char const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgIsDebugging(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgIsDebugging",0,0)) SWIG_fail;
  result = (bool)DbgIsDebugging();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgIsJumpGoingToExecute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgIsJumpGoingToExecute",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgIsJumpGoingToExecute" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgIsJumpGoingToExecute(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetLabelAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  SEGMENTREG arg2 ;
  char *arg3 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void const *buf3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetLabelAt",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetLabelAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgGetLabelAt" "', argument " "2"" of type '" "SEGMENTREG""'");
  } 
  arg2 = static_cast< SEGMENTREG >(val2);
  {
    res3 = PyObject_AsReadBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DbgGetLabelAt" "', argument " "3"" of type '" "(char* text, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  result = (bool)DbgGetLabelAt(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetLabelAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetLabelAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetLabelAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgSetLabelAt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DbgSetLabelAt(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgClearLabelRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgClearLabelRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgClearLabelRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgClearLabelRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgClearLabelRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetCommentAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetCommentAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetCommentAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgGetCommentAt" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)DbgGetCommentAt(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetCommentAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetCommentAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetCommentAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgSetCommentAt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DbgSetCommentAt(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgClearCommentRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgClearCommentRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgClearCommentRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgClearCommentRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgClearCommentRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetBookmarkAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetBookmarkAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetBookmarkAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgGetBookmarkAt(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetBookmarkAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetBookmarkAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetBookmarkAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgSetBookmarkAt" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)DbgSetBookmarkAt(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgClearBookmarkRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgClearBookmarkRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgClearBookmarkRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgClearBookmarkRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgClearBookmarkRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetModuleAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetModuleAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetModuleAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgGetModuleAt" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)DbgGetModuleAt(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetBpxTypeAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  BPXTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetBpxTypeAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetBpxTypeAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (BPXTYPE)DbgGetBpxTypeAt(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgValFromString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgValFromString",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgValFromString" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (duint)DbgValFromString((char const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetRegDumpEx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  REGDUMP *arg1 = (REGDUMP *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetRegDumpEx",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_REGDUMP, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgGetRegDumpEx" "', argument " "1"" of type '" "REGDUMP *""'"); 
  }
  arg1 = reinterpret_cast< REGDUMP * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgGetRegDumpEx" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (bool)DbgGetRegDumpEx(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgValToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  duint arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgValToString",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgValToString" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgValToString" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgValToString((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMemIsValidReadPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMemIsValidReadPtr",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgMemIsValidReadPtr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgMemIsValidReadPtr(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetBpList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BPXTYPE arg1 ;
  BPMAP *arg2 = (BPMAP *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetBpList",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetBpList" "', argument " "1"" of type '" "BPXTYPE""'");
  } 
  arg1 = static_cast< BPXTYPE >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BPMAP, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgGetBpList" "', argument " "2"" of type '" "BPMAP *""'"); 
  }
  arg2 = reinterpret_cast< BPMAP * >(argp2);
  result = (int)DbgGetBpList(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetFunctionTypeAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  FUNCTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetFunctionTypeAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetFunctionTypeAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (FUNCTYPE)DbgGetFunctionTypeAt(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetLoopTypeAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  int arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  LOOPTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetLoopTypeAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetLoopTypeAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgGetLoopTypeAt" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (LOOPTYPE)DbgGetLoopTypeAt(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetBranchDestination(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetBranchDestination",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetBranchDestination" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)DbgGetBranchDestination(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptLoad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptLoad",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgScriptLoad" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  DbgScriptLoad((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptUnload(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptUnload",0,0)) SWIG_fail;
  DbgScriptUnload();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptRun(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptRun",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgScriptRun" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  DbgScriptRun(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptStep",0,0)) SWIG_fail;
  DbgScriptStep();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptBpToggle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptBpToggle",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgScriptBpToggle" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (bool)DbgScriptBpToggle(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptBpGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptBpGet",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgScriptBpGet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (bool)DbgScriptBpGet(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptCmdExec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptCmdExec",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgScriptCmdExec" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (bool)DbgScriptCmdExec((char const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptAbort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptAbort",0,0)) SWIG_fail;
  DbgScriptAbort();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptGetLineType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  SCRIPTLINETYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptGetLineType",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgScriptGetLineType" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (SCRIPTLINETYPE)DbgScriptGetLineType(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptSetIp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptSetIp",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgScriptSetIp" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  DbgScriptSetIp(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgScriptGetBranchInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  SCRIPTBRANCH *arg2 = (SCRIPTBRANCH *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgScriptGetBranchInfo",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgScriptGetBranchInfo" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_SCRIPTBRANCH, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgScriptGetBranchInfo" "', argument " "2"" of type '" "SCRIPTBRANCH *""'"); 
  }
  arg2 = reinterpret_cast< SCRIPTBRANCH * >(argp2);
  result = (bool)DbgScriptGetBranchInfo(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSymbolEnum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  CBSYMBOLENUM arg2 = (CBSYMBOLENUM) 0 ;
  void *arg3 = (void *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSymbolEnum",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSymbolEnum" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__SYMBOLPTR__p_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DbgSymbolEnum" "', argument " "2"" of type '" "CBSYMBOLENUM""'"); 
    }
  }
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DbgSymbolEnum" "', argument " "3"" of type '" "void *""'"); 
  }
  DbgSymbolEnum(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSymbolEnumFromCache(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  CBSYMBOLENUM arg2 = (CBSYMBOLENUM) 0 ;
  void *arg3 = (void *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSymbolEnumFromCache",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSymbolEnumFromCache" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__SYMBOLPTR__p_void__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DbgSymbolEnumFromCache" "', argument " "2"" of type '" "CBSYMBOLENUM""'"); 
    }
  }
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DbgSymbolEnumFromCache" "', argument " "3"" of type '" "void *""'"); 
  }
  DbgSymbolEnumFromCache(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgAssembleAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgAssembleAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgAssembleAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgAssembleAt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DbgAssembleAt(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgModBaseFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgModBaseFromName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgModBaseFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (duint)DbgModBaseFromName((char const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgDisasmAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  DISASM_INSTR *arg2 = (DISASM_INSTR *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgDisasmAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgDisasmAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DISASM_INSTR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgDisasmAt" "', argument " "2"" of type '" "DISASM_INSTR *""'"); 
  }
  arg2 = reinterpret_cast< DISASM_INSTR * >(argp2);
  DbgDisasmAt(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgStackCommentGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  STACK_COMMENT *arg2 = (STACK_COMMENT *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgStackCommentGet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgStackCommentGet" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_STACK_COMMENT, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgStackCommentGet" "', argument " "2"" of type '" "STACK_COMMENT *""'"); 
  }
  arg2 = reinterpret_cast< STACK_COMMENT * >(argp2);
  result = (bool)DbgStackCommentGet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetThreadList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  THREADLIST *arg1 = (THREADLIST *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetThreadList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_THREADLIST, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgGetThreadList" "', argument " "1"" of type '" "THREADLIST *""'"); 
  }
  arg1 = reinterpret_cast< THREADLIST * >(argp1);
  DbgGetThreadList(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSettingsUpdated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSettingsUpdated",0,0)) SWIG_fail;
  DbgSettingsUpdated();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgDisasmFastAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  BASIC_INSTRUCTION_INFO *arg2 = (BASIC_INSTRUCTION_INFO *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgDisasmFastAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgDisasmFastAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgDisasmFastAt" "', argument " "2"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg2 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp2);
  DbgDisasmFastAt(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMenuEntryClicked(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMenuEntryClicked",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgMenuEntryClicked" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  DbgMenuEntryClicked(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgFunctionGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  duint *arg3 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgFunctionGet",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgFunctionGet" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgFunctionGet" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DbgFunctionGet" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  result = (bool)DbgFunctionGet(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgFunctionOverlaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgFunctionOverlaps",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgFunctionOverlaps" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgFunctionOverlaps" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgFunctionOverlaps(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgFunctionAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgFunctionAdd",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgFunctionAdd" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgFunctionAdd" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgFunctionAdd(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgFunctionDel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgFunctionDel",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgFunctionDel" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgFunctionDel(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgArgumentGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  duint *arg3 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgArgumentGet",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgArgumentGet" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgArgumentGet" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DbgArgumentGet" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  result = (bool)DbgArgumentGet(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgArgumentOverlaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgArgumentOverlaps",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgArgumentOverlaps" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgArgumentOverlaps" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgArgumentOverlaps(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgArgumentAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgArgumentAdd",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgArgumentAdd" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgArgumentAdd" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgArgumentAdd(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgArgumentDel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgArgumentDel",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgArgumentDel" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgArgumentDel(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgLoopGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  duint arg2 ;
  duint *arg3 = (duint *) 0 ;
  duint *arg4 = (duint *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgLoopGet",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgLoopGet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgLoopGet" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DbgLoopGet" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DbgLoopGet" "', argument " "4"" of type '" "duint *""'"); 
  }
  arg4 = reinterpret_cast< duint * >(argp4);
  result = (bool)DbgLoopGet(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgLoopOverlaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  duint arg2 ;
  duint arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgLoopOverlaps",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgLoopOverlaps" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgLoopOverlaps" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DbgLoopOverlaps" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  result = (bool)DbgLoopOverlaps(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgLoopAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgLoopAdd",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgLoopAdd" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgLoopAdd" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgLoopAdd(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgLoopDel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  duint arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgLoopDel",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgLoopDel" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgLoopDel" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgLoopDel(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgXrefAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgXrefAdd",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgXrefAdd" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgXrefAdd" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgXrefAdd(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgXrefDelAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgXrefDelAll",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgXrefDelAll" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgXrefDelAll(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgXrefGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  XREF_INFO *arg2 = (XREF_INFO *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgXrefGet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgXrefGet" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_XREF_INFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgXrefGet" "', argument " "2"" of type '" "XREF_INFO *""'"); 
  }
  arg2 = reinterpret_cast< XREF_INFO * >(argp2);
  result = (bool)DbgXrefGet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetXrefCountAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetXrefCountAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetXrefCountAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = DbgGetXrefCountAt(arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetXrefTypeAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  XREFTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetXrefTypeAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetXrefTypeAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (XREFTYPE)DbgGetXrefTypeAt(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgIsRunLocked(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgIsRunLocked",0,0)) SWIG_fail;
  result = (bool)DbgIsRunLocked();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgIsBpDisabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgIsBpDisabled",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgIsBpDisabled" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgIsBpDisabled(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetAutoCommentAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetAutoCommentAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetAutoCommentAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgSetAutoCommentAt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DbgSetAutoCommentAt(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgClearAutoCommentRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgClearAutoCommentRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgClearAutoCommentRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgClearAutoCommentRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgClearAutoCommentRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetAutoLabelAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetAutoLabelAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetAutoLabelAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgSetAutoLabelAt" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DbgSetAutoLabelAt(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgClearAutoLabelRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgClearAutoLabelRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgClearAutoLabelRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgClearAutoLabelRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgClearAutoLabelRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetAutoBookmarkAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetAutoBookmarkAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetAutoBookmarkAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)DbgSetAutoBookmarkAt(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgClearAutoBookmarkRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgClearAutoBookmarkRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgClearAutoBookmarkRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgClearAutoBookmarkRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgClearAutoBookmarkRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetAutoFunctionAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetAutoFunctionAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetAutoFunctionAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgSetAutoFunctionAt" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DbgSetAutoFunctionAt(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgClearAutoFunctionRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgClearAutoFunctionRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgClearAutoFunctionRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgClearAutoFunctionRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgClearAutoFunctionRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetStringAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetStringAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetStringAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgGetStringAt" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)DbgGetStringAt(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgFunctions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgFunctions",0,0)) SWIG_fail;
  result = (DBGFUNCTIONS *)DbgFunctions();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgWinEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MSG *arg1 = (MSG *) 0 ;
  long *arg2 = (long *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgWinEvent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MSG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgWinEvent" "', argument " "1"" of type '" "MSG *""'"); 
  }
  arg1 = reinterpret_cast< MSG * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgWinEvent" "', argument " "2"" of type '" "long *""'"); 
  }
  arg2 = reinterpret_cast< long * >(argp2);
  result = (bool)DbgWinEvent(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgWinEventGlobal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MSG *arg1 = (MSG *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgWinEventGlobal",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MSG, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgWinEventGlobal" "', argument " "1"" of type '" "MSG *""'"); 
  }
  arg1 = reinterpret_cast< MSG * >(argp1);
  result = (bool)DbgWinEventGlobal(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgIsRunning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgIsRunning",0,0)) SWIG_fail;
  result = (bool)DbgIsRunning();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetTimeWastedCounter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetTimeWastedCounter",0,0)) SWIG_fail;
  result = (duint)DbgGetTimeWastedCounter();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetArgTypeAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  ARGTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetArgTypeAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetArgTypeAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (ARGTYPE)DbgGetArgTypeAt(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetEncodeTypeBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetEncodeTypeBuffer",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetEncodeTypeBuffer" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgGetEncodeTypeBuffer" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (void *)DbgGetEncodeTypeBuffer(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgReleaseEncodeTypeBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgReleaseEncodeTypeBuffer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgReleaseEncodeTypeBuffer" "', argument " "1"" of type '" "void *""'"); 
  }
  DbgReleaseEncodeTypeBuffer(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetEncodeTypeAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ENCODETYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetEncodeTypeAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetEncodeTypeAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgGetEncodeTypeAt" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (ENCODETYPE)DbgGetEncodeTypeAt(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetEncodeSizeAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetEncodeSizeAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetEncodeSizeAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgGetEncodeSizeAt" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (duint)DbgGetEncodeSizeAt(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSetEncodeType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  ENCODETYPE arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSetEncodeType",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSetEncodeType" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgSetEncodeType" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DbgSetEncodeType" "', argument " "3"" of type '" "ENCODETYPE""'");
  } 
  arg3 = static_cast< ENCODETYPE >(val3);
  result = (bool)DbgSetEncodeType(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgDelEncodeTypeRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgDelEncodeTypeRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgDelEncodeTypeRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgDelEncodeTypeRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgDelEncodeTypeRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgDelEncodeTypeSegment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgDelEncodeTypeSegment",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgDelEncodeTypeSegment" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  DbgDelEncodeTypeSegment(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetWatchList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetWatchList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgGetWatchList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)DbgGetWatchList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgSelChanged(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  duint arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgSelChanged",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgSelChanged" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DbgSelChanged" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  DbgSelChanged(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetProcessHandle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetProcessHandle",0,0)) SWIG_fail;
  result = (HANDLE)DbgGetProcessHandle();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetThreadHandle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetThreadHandle",0,0)) SWIG_fail;
  result = (HANDLE)DbgGetThreadHandle();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetProcessId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetProcessId",0,0)) SWIG_fail;
  result = (DWORD)DbgGetProcessId();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetThreadId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetThreadId",0,0)) SWIG_fail;
  result = (DWORD)DbgGetThreadId();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetPebAddress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DWORD arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetPebAddress",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetPebAddress" "', argument " "1"" of type '" "DWORD""'");
  } 
  arg1 = static_cast< DWORD >(val1);
  result = (duint)DbgGetPebAddress(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetTebAddress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DWORD arg1 ;
  unsigned long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetTebAddress",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgGetTebAddress" "', argument " "1"" of type '" "DWORD""'");
  } 
  arg1 = static_cast< DWORD >(val1);
  result = (duint)DbgGetTebAddress(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgAnalyzeFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  BridgeCFGraphList *arg2 = (BridgeCFGraphList *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgAnalyzeFunction",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgAnalyzeFunction" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_BridgeCFGraphList, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgAnalyzeFunction" "', argument " "2"" of type '" "BridgeCFGraphList *""'"); 
  }
  arg2 = reinterpret_cast< BridgeCFGraphList * >(argp2);
  result = (bool)DbgAnalyzeFunction(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgEval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  bool *arg2 = (bool *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgEval",1,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgEval" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  if (obj1) {
    res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgEval" "', argument " "2"" of type '" "bool *""'"); 
    }
    arg2 = reinterpret_cast< bool * >(argp2);
  }
  result = (duint)DbgEval((char const *)arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgMenuPrepare(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgMenuPrepare",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "DbgMenuPrepare" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  DbgMenuPrepare(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DbgGetSymbolInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SYMBOLPTR *arg1 = (SYMBOLPTR *) 0 ;
  SYMBOLINFO *arg2 = (SYMBOLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DbgGetSymbolInfo",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SYMBOLPTR_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DbgGetSymbolInfo" "', argument " "1"" of type '" "SYMBOLPTR const *""'"); 
  }
  arg1 = reinterpret_cast< SYMBOLPTR * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_SYMBOLINFO_, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DbgGetSymbolInfo" "', argument " "2"" of type '" "SYMBOLINFO *""'"); 
  }
  arg2 = reinterpret_cast< SYMBOLINFO * >(argp2);
  DbgGetSymbolInfo((SYMBOLPTR_ const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CELLINFO_row_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *arg1 = (CELLINFO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CELLINFO_row_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CELLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CELLINFO_row_set" "', argument " "1"" of type '" "CELLINFO *""'"); 
  }
  arg1 = reinterpret_cast< CELLINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CELLINFO_row_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->row = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CELLINFO_row_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *arg1 = (CELLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CELLINFO_row_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CELLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CELLINFO_row_get" "', argument " "1"" of type '" "CELLINFO *""'"); 
  }
  arg1 = reinterpret_cast< CELLINFO * >(argp1);
  result = (int) ((arg1)->row);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CELLINFO_col_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *arg1 = (CELLINFO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CELLINFO_col_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CELLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CELLINFO_col_set" "', argument " "1"" of type '" "CELLINFO *""'"); 
  }
  arg1 = reinterpret_cast< CELLINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CELLINFO_col_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->col = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CELLINFO_col_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *arg1 = (CELLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CELLINFO_col_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CELLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CELLINFO_col_get" "', argument " "1"" of type '" "CELLINFO *""'"); 
  }
  arg1 = reinterpret_cast< CELLINFO * >(argp1);
  result = (int) ((arg1)->col);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CELLINFO_str_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *arg1 = (CELLINFO *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CELLINFO_str_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CELLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CELLINFO_str_set" "', argument " "1"" of type '" "CELLINFO *""'"); 
  }
  arg1 = reinterpret_cast< CELLINFO * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CELLINFO_str_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->str = (char const *)reinterpret_cast< char* >(memcpy((new char[size]), arg2, sizeof(char)*(size)));
  } else {
    arg1->str = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CELLINFO_str_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *arg1 = (CELLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CELLINFO_str_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CELLINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CELLINFO_str_get" "', argument " "1"" of type '" "CELLINFO *""'"); 
  }
  arg1 = reinterpret_cast< CELLINFO * >(argp1);
  result = (char *) ((arg1)->str);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CELLINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_CELLINFO",0,0)) SWIG_fail;
  result = (CELLINFO *)new CELLINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CELLINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CELLINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CELLINFO *arg1 = (CELLINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_CELLINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CELLINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CELLINFO" "', argument " "1"" of type '" "CELLINFO *""'"); 
  }
  arg1 = reinterpret_cast< CELLINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CELLINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CELLINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SELECTIONDATA_start_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SELECTIONDATA *arg1 = (SELECTIONDATA *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SELECTIONDATA_start_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SELECTIONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SELECTIONDATA_start_set" "', argument " "1"" of type '" "SELECTIONDATA *""'"); 
  }
  arg1 = reinterpret_cast< SELECTIONDATA * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SELECTIONDATA_start_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->start = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SELECTIONDATA_start_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SELECTIONDATA *arg1 = (SELECTIONDATA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SELECTIONDATA_start_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SELECTIONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SELECTIONDATA_start_get" "', argument " "1"" of type '" "SELECTIONDATA *""'"); 
  }
  arg1 = reinterpret_cast< SELECTIONDATA * >(argp1);
  result = (duint) ((arg1)->start);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SELECTIONDATA_end_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SELECTIONDATA *arg1 = (SELECTIONDATA *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SELECTIONDATA_end_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SELECTIONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SELECTIONDATA_end_set" "', argument " "1"" of type '" "SELECTIONDATA *""'"); 
  }
  arg1 = reinterpret_cast< SELECTIONDATA * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SELECTIONDATA_end_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->end = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SELECTIONDATA_end_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SELECTIONDATA *arg1 = (SELECTIONDATA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SELECTIONDATA_end_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SELECTIONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SELECTIONDATA_end_get" "', argument " "1"" of type '" "SELECTIONDATA *""'"); 
  }
  arg1 = reinterpret_cast< SELECTIONDATA * >(argp1);
  result = (duint) ((arg1)->end);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SELECTIONDATA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SELECTIONDATA *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SELECTIONDATA",0,0)) SWIG_fail;
  result = (SELECTIONDATA *)new SELECTIONDATA();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SELECTIONDATA, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SELECTIONDATA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SELECTIONDATA *arg1 = (SELECTIONDATA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SELECTIONDATA",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SELECTIONDATA, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SELECTIONDATA" "', argument " "1"" of type '" "SELECTIONDATA *""'"); 
  }
  arg1 = reinterpret_cast< SELECTIONDATA * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SELECTIONDATA_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SELECTIONDATA, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ICONDATA_data_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ICONDATA *arg1 = (ICONDATA *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ICONDATA_data_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ICONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ICONDATA_data_set" "', argument " "1"" of type '" "ICONDATA *""'"); 
  }
  arg1 = reinterpret_cast< ICONDATA * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ICONDATA_data_set" "', argument " "2"" of type '" "void const *""'"); 
  }
  if (arg1) (arg1)->data = (void const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ICONDATA_data_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ICONDATA *arg1 = (ICONDATA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ICONDATA_data_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ICONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ICONDATA_data_get" "', argument " "1"" of type '" "ICONDATA *""'"); 
  }
  arg1 = reinterpret_cast< ICONDATA * >(argp1);
  result = (void *) ((arg1)->data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ICONDATA_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ICONDATA *arg1 = (ICONDATA *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ICONDATA_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ICONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ICONDATA_size_set" "', argument " "1"" of type '" "ICONDATA *""'"); 
  }
  arg1 = reinterpret_cast< ICONDATA * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ICONDATA_size_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ICONDATA_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ICONDATA *arg1 = (ICONDATA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ICONDATA_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ICONDATA, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ICONDATA_size_get" "', argument " "1"" of type '" "ICONDATA *""'"); 
  }
  arg1 = reinterpret_cast< ICONDATA * >(argp1);
  result = (duint) ((arg1)->size);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ICONDATA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ICONDATA *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ICONDATA",0,0)) SWIG_fail;
  result = (ICONDATA *)new ICONDATA();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ICONDATA, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ICONDATA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ICONDATA *arg1 = (ICONDATA *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ICONDATA",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ICONDATA, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ICONDATA" "', argument " "1"" of type '" "ICONDATA *""'"); 
  }
  arg1 = reinterpret_cast< ICONDATA * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ICONDATA_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ICONDATA, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[64] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_name_set" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 64);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SCRIPTTYPEINFO_name_set" "', argument " "2"" of type '" "char [64]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,64*sizeof(char));
  else memset(arg1->name,0,64*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_name_get" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 64);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_id_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_id_set" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SCRIPTTYPEINFO_id_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_id_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_id_get" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  result = (int) ((arg1)->id);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_execute_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  GUISCRIPTEXECUTE arg2 = (GUISCRIPTEXECUTE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_execute_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_execute_set" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "SCRIPTTYPEINFO_execute_set" "', argument " "2"" of type '" "GUISCRIPTEXECUTE""'"); 
    }
  }
  if (arg1) (arg1)->execute = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_execute_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GUISCRIPTEXECUTE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_execute_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_execute_get" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  result = (GUISCRIPTEXECUTE) ((arg1)->execute);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_completeCommand_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  GUISCRIPTCOMPLETER arg2 = (GUISCRIPTCOMPLETER) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_completeCommand_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_completeCommand_set" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_p_p_char_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "SCRIPTTYPEINFO_completeCommand_set" "', argument " "2"" of type '" "GUISCRIPTCOMPLETER""'"); 
    }
  }
  if (arg1) (arg1)->completeCommand = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SCRIPTTYPEINFO_completeCommand_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GUISCRIPTCOMPLETER result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SCRIPTTYPEINFO_completeCommand_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SCRIPTTYPEINFO_completeCommand_get" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  result = (GUISCRIPTCOMPLETER) ((arg1)->completeCommand);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_p_p_char_p_int__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SCRIPTTYPEINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SCRIPTTYPEINFO",0,0)) SWIG_fail;
  result = (SCRIPTTYPEINFO *)new SCRIPTTYPEINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SCRIPTTYPEINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SCRIPTTYPEINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SCRIPTTYPEINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SCRIPTTYPEINFO" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SCRIPTTYPEINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SCRIPTTYPEINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ACTIVEVIEW_titleHwnd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_titleHwnd_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_titleHwnd_set" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ACTIVEVIEW_titleHwnd_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->titleHwnd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ACTIVEVIEW_titleHwnd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_titleHwnd_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_titleHwnd_get" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  result = (void *) ((arg1)->titleHwnd);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ACTIVEVIEW_classHwnd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_classHwnd_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_classHwnd_set" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ACTIVEVIEW_classHwnd_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->classHwnd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ACTIVEVIEW_classHwnd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_classHwnd_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_classHwnd_get" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  result = (void *) ((arg1)->classHwnd);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ACTIVEVIEW_title_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[512] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_title_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_title_set" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 512);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ACTIVEVIEW_title_set" "', argument " "2"" of type '" "char [512]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->title,arg2,512*sizeof(char));
  else memset(arg1->title,0,512*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ACTIVEVIEW_title_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_title_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_title_get" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  result = (char *)(char *) ((arg1)->title);
  {
    size_t size = SWIG_strnlen(result, 512);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ACTIVEVIEW_className_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[512] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_className_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_className_set" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 512);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ACTIVEVIEW_className_set" "', argument " "2"" of type '" "char [512]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->className,arg2,512*sizeof(char));
  else memset(arg1->className,0,512*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ACTIVEVIEW_className_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ACTIVEVIEW_className_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ACTIVEVIEW_className_get" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  result = (char *)(char *) ((arg1)->className);
  {
    size_t size = SWIG_strnlen(result, 512);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ACTIVEVIEW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ACTIVEVIEW",0,0)) SWIG_fail;
  result = (ACTIVEVIEW *)new ACTIVEVIEW();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ACTIVEVIEW, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ACTIVEVIEW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ACTIVEVIEW",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ACTIVEVIEW" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ACTIVEVIEW_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ACTIVEVIEW, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_expanded_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_expanded_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_expanded_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TYPEDESCRIPTOR_expanded_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->expanded = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_expanded_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_expanded_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_expanded_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (bool) ((arg1)->expanded);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_reverse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_reverse_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_reverse_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TYPEDESCRIPTOR_reverse_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->reverse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_reverse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_reverse_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_reverse_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (bool) ((arg1)->reverse);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_name_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TYPEDESCRIPTOR_name_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->name = (char const *)reinterpret_cast< char* >(memcpy((new char[size]), arg2, sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_name_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (char *) ((arg1)->name);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_addr_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TYPEDESCRIPTOR_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_addr_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_offset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_offset_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_offset_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TYPEDESCRIPTOR_offset_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->offset = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_offset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_offset_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_offset_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (duint) ((arg1)->offset);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_id_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_id_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TYPEDESCRIPTOR_id_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_id_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_id_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (int) ((arg1)->id);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_size_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TYPEDESCRIPTOR_size_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_size_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (int) ((arg1)->size);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_callback_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  TYPETOSTRING arg2 = (TYPETOSTRING) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_callback_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_callback_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "TYPEDESCRIPTOR_callback_set" "', argument " "2"" of type '" "TYPETOSTRING""'"); 
    }
  }
  if (arg1) (arg1)->callback = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_callback_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  TYPETOSTRING result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_callback_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_callback_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (TYPETOSTRING) ((arg1)->callback);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_userdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_userdata_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_userdata_set" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TYPEDESCRIPTOR_userdata_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->userdata = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TYPEDESCRIPTOR_userdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TYPEDESCRIPTOR_userdata_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TYPEDESCRIPTOR_userdata_get" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  result = (void *) ((arg1)->userdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TYPEDESCRIPTOR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TYPEDESCRIPTOR",0,0)) SWIG_fail;
  result = (_TYPEDESCRIPTOR *)new _TYPEDESCRIPTOR();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p__TYPEDESCRIPTOR, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TYPEDESCRIPTOR(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  _TYPEDESCRIPTOR *arg1 = (_TYPEDESCRIPTOR *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TYPEDESCRIPTOR",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p__TYPEDESCRIPTOR, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TYPEDESCRIPTOR" "', argument " "1"" of type '" "_TYPEDESCRIPTOR *""'"); 
  }
  arg1 = reinterpret_cast< _TYPEDESCRIPTOR * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TYPEDESCRIPTOR_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p__TYPEDESCRIPTOR, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GuiTranslateText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiTranslateText",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiTranslateText" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (char *)GuiTranslateText((char const *)arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiDisasmAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiDisasmAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiDisasmAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiDisasmAt" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  GuiDisasmAt(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSetDebugState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSTATE arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSetDebugState",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSetDebugState" "', argument " "1"" of type '" "DBGSTATE""'");
  } 
  arg1 = static_cast< DBGSTATE >(val1);
  GuiSetDebugState(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSetDebugStateFast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSTATE arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSetDebugStateFast",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSetDebugStateFast" "', argument " "1"" of type '" "DBGSTATE""'");
  } 
  arg1 = static_cast< DBGSTATE >(val1);
  GuiSetDebugStateFast(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAddLogMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAddLogMessage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAddLogMessage" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiAddLogMessage((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiLogClear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiLogClear",0,0)) SWIG_fail;
  GuiLogClear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateAllViews(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateAllViews",0,0)) SWIG_fail;
  GuiUpdateAllViews();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateRegisterView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateRegisterView",0,0)) SWIG_fail;
  GuiUpdateRegisterView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateDisassemblyView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateDisassemblyView",0,0)) SWIG_fail;
  GuiUpdateDisassemblyView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateBreakpointsView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateBreakpointsView",0,0)) SWIG_fail;
  GuiUpdateBreakpointsView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateWindowTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateWindowTitle",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiUpdateWindowTitle" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiUpdateWindowTitle((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiGetWindowHandle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HWND result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiGetWindowHandle",0,0)) SWIG_fail;
  result = GuiGetWindowHandle();
  {
    resultobj = PyInt_FromLong((long)result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiDumpAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiDumpAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiDumpAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  GuiDumpAt(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char **arg2 = (char **) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptAdd",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiScriptAdd" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiScriptAdd" "', argument " "2"" of type '" "char const **""'"); 
  }
  arg2 = reinterpret_cast< char ** >(argp2);
  GuiScriptAdd(arg1,(char const **)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptClear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptClear",0,0)) SWIG_fail;
  GuiScriptClear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptSetIp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptSetIp",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiScriptSetIp" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiScriptSetIp(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptError",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiScriptError" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiScriptError" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiScriptError(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptSetTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptSetTitle",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiScriptSetTitle" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiScriptSetTitle((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptSetInfoLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptSetInfoLine",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiScriptSetInfoLine" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiScriptSetInfoLine" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiScriptSetInfoLine(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptMessage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiScriptMessage" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiScriptMessage((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptMsgyn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptMsgyn",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiScriptMsgyn" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)GuiScriptMsgyn((char const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiScriptEnableHighlighting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiScriptEnableHighlighting",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiScriptEnableHighlighting" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  GuiScriptEnableHighlighting(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSymbolLogAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSymbolLogAdd",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiSymbolLogAdd" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiSymbolLogAdd((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSymbolLogClear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSymbolLogClear",0,0)) SWIG_fail;
  GuiSymbolLogClear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSymbolSetProgress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSymbolSetProgress",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSymbolSetProgress" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiSymbolSetProgress(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSymbolUpdateModuleList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  SYMBOLMODULEINFO *arg2 = (SYMBOLMODULEINFO *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSymbolUpdateModuleList",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSymbolUpdateModuleList" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_SYMBOLMODULEINFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiSymbolUpdateModuleList" "', argument " "2"" of type '" "SYMBOLMODULEINFO *""'"); 
  }
  arg2 = reinterpret_cast< SYMBOLMODULEINFO * >(argp2);
  GuiSymbolUpdateModuleList(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSymbolRefreshCurrent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSymbolRefreshCurrent",0,0)) SWIG_fail;
  GuiSymbolRefreshCurrent();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceAddColumn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceAddColumn",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceAddColumn" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiReferenceAddColumn" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiReferenceAddColumn(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSetRowCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSetRowCount",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceSetRowCount" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiReferenceSetRowCount(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceGetRowCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceGetRowCount",0,0)) SWIG_fail;
  result = (int)GuiReferenceGetRowCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSearchGetRowCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSearchGetRowCount",0,0)) SWIG_fail;
  result = (int)GuiReferenceSearchGetRowCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceDeleteAllColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceDeleteAllColumns",0,0)) SWIG_fail;
  GuiReferenceDeleteAllColumns();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceInitialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceInitialize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiReferenceInitialize" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiReferenceInitialize((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSetCellContent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSetCellContent",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceSetCellContent" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiReferenceSetCellContent" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GuiReferenceSetCellContent" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  GuiReferenceSetCellContent(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceGetCellContent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceGetCellContent",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceGetCellContent" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiReferenceGetCellContent" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)GuiReferenceGetCellContent(arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSearchGetCellContent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSearchGetCellContent",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceSearchGetCellContent" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiReferenceSearchGetCellContent" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (char *)GuiReferenceSearchGetCellContent(arg1,arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceReloadData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceReloadData",0,0)) SWIG_fail;
  GuiReferenceReloadData();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSetSingleSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSetSingleSelection",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceSetSingleSelection" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiReferenceSetSingleSelection" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  GuiReferenceSetSingleSelection(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSetProgress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSetProgress",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceSetProgress" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiReferenceSetProgress(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSetCurrentTaskProgress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSetCurrentTaskProgress",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceSetCurrentTaskProgress" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiReferenceSetCurrentTaskProgress" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiReferenceSetCurrentTaskProgress(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceSetSearchStartCol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceSetSearchStartCol",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiReferenceSetSearchStartCol" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiReferenceSetSearchStartCol(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiStackDumpAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiStackDumpAt",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiStackDumpAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiStackDumpAt" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  GuiStackDumpAt(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateDumpView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateDumpView",0,0)) SWIG_fail;
  GuiUpdateDumpView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateWatchView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateWatchView",0,0)) SWIG_fail;
  GuiUpdateWatchView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateThreadView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateThreadView",0,0)) SWIG_fail;
  GuiUpdateThreadView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateMemoryView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateMemoryView",0,0)) SWIG_fail;
  GuiUpdateMemoryView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAddRecentFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAddRecentFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAddRecentFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiAddRecentFile((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSetLastException(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSetLastException",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSetLastException" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  GuiSetLastException(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiGetDisassembly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiGetDisassembly",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiGetDisassembly" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiGetDisassembly" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)GuiGetDisassembly(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuAdd",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuAdd" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiMenuAdd" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)GuiMenuAdd(arg1,(char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuAddEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuAddEntry",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuAddEntry" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiMenuAddEntry" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (int)GuiMenuAddEntry(arg1,(char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuAddSeparator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuAddSeparator",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuAddSeparator" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiMenuAddSeparator(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuClear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuClear",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuClear" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiMenuClear(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuRemove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuRemove",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuRemove" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiMenuRemove(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSelectionGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  SELECTIONDATA *arg2 = (SELECTIONDATA *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSelectionGet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSelectionGet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_SELECTIONDATA, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiSelectionGet" "', argument " "2"" of type '" "SELECTIONDATA *""'"); 
  }
  arg2 = reinterpret_cast< SELECTIONDATA * >(argp2);
  result = (bool)GuiSelectionGet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSelectionSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  SELECTIONDATA *arg2 = (SELECTIONDATA *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSelectionSet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSelectionSet" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_SELECTIONDATA, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiSelectionSet" "', argument " "2"" of type '" "SELECTIONDATA const *""'"); 
  }
  arg2 = reinterpret_cast< SELECTIONDATA * >(argp2);
  result = (bool)GuiSelectionSet(arg1,(SELECTIONDATA const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiGetLineWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiGetLineWindow",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiGetLineWindow" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiGetLineWindow" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)GuiGetLineWindow((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAutoCompleteAddCmd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAutoCompleteAddCmd",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAutoCompleteAddCmd" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiAutoCompleteAddCmd((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAutoCompleteDelCmd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAutoCompleteDelCmd",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAutoCompleteDelCmd" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiAutoCompleteDelCmd((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAutoCompleteClearAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAutoCompleteClearAll",0,0)) SWIG_fail;
  GuiAutoCompleteClearAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAddStatusBarMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAddStatusBarMessage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAddStatusBarMessage" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiAddStatusBarMessage((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateSideBar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateSideBar",0,0)) SWIG_fail;
  GuiUpdateSideBar();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiRepaintTableView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiRepaintTableView",0,0)) SWIG_fail;
  GuiRepaintTableView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdatePatches(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdatePatches",0,0)) SWIG_fail;
  GuiUpdatePatches();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateCallStack(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateCallStack",0,0)) SWIG_fail;
  GuiUpdateCallStack();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateSEHChain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateSEHChain",0,0)) SWIG_fail;
  GuiUpdateSEHChain();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiLoadSourceFileEx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  duint arg2 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiLoadSourceFileEx",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiLoadSourceFileEx" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiLoadSourceFileEx" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  GuiLoadSourceFileEx((char const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  ICONDATA *arg2 = (ICONDATA *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetIcon",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetIcon" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ICONDATA, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiMenuSetIcon" "', argument " "2"" of type '" "ICONDATA const *""'"); 
  }
  arg2 = reinterpret_cast< ICONDATA * >(argp2);
  GuiMenuSetIcon(arg1,(ICONDATA const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetEntryIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  ICONDATA *arg2 = (ICONDATA *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetEntryIcon",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetEntryIcon" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ICONDATA, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiMenuSetEntryIcon" "', argument " "2"" of type '" "ICONDATA const *""'"); 
  }
  arg2 = reinterpret_cast< ICONDATA * >(argp2);
  GuiMenuSetEntryIcon(arg1,(ICONDATA const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetEntryChecked(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetEntryChecked",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetEntryChecked" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiMenuSetEntryChecked" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  GuiMenuSetEntryChecked(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetVisible(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetVisible",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetVisible" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiMenuSetVisible" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  GuiMenuSetVisible(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetEntryVisible(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetEntryVisible",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetEntryVisible" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiMenuSetEntryVisible" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  GuiMenuSetEntryVisible(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetName",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetName" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiMenuSetName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiMenuSetName(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetEntryName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetEntryName",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetEntryName" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiMenuSetEntryName" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiMenuSetEntryName(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiMenuSetEntryHotkey(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiMenuSetEntryHotkey",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiMenuSetEntryHotkey" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiMenuSetEntryHotkey" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiMenuSetEntryHotkey(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiShowCpu(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiShowCpu",0,0)) SWIG_fail;
  GuiShowCpu();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAddQWidgetTab(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAddQWidgetTab",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAddQWidgetTab" "', argument " "1"" of type '" "void *""'"); 
  }
  GuiAddQWidgetTab(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiShowQWidgetTab(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiShowQWidgetTab",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiShowQWidgetTab" "', argument " "1"" of type '" "void *""'"); 
  }
  GuiShowQWidgetTab(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiCloseQWidgetTab(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiCloseQWidgetTab",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiCloseQWidgetTab" "', argument " "1"" of type '" "void *""'"); 
  }
  GuiCloseQWidgetTab(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiExecuteOnGuiThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  GUICALLBACK arg1 = (GUICALLBACK) 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiExecuteOnGuiThread",1,1,&obj0)) SWIG_fail;
  {
    int res = SWIG_ConvertFunctionPtr(obj0, (void**)(&arg1), SWIGTYPE_p_f___void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "GuiExecuteOnGuiThread" "', argument " "1"" of type '" "GUICALLBACK""'"); 
    }
  }
  GuiExecuteOnGuiThread(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateTimeWastedCounter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateTimeWastedCounter",0,0)) SWIG_fail;
  GuiUpdateTimeWastedCounter();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSetGlobalNotes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSetGlobalNotes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiSetGlobalNotes" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiSetGlobalNotes((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiGetGlobalNotes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char **arg1 = (char **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiGetGlobalNotes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiGetGlobalNotes" "', argument " "1"" of type '" "char **""'"); 
  }
  arg1 = reinterpret_cast< char ** >(argp1);
  GuiGetGlobalNotes(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSetDebuggeeNotes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSetDebuggeeNotes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiSetDebuggeeNotes" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiSetDebuggeeNotes((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiGetDebuggeeNotes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char **arg1 = (char **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiGetDebuggeeNotes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiGetDebuggeeNotes" "', argument " "1"" of type '" "char **""'"); 
  }
  arg1 = reinterpret_cast< char ** >(argp1);
  GuiGetDebuggeeNotes(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiDumpAtN(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  int arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiDumpAtN",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiDumpAtN" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiDumpAtN" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  GuiDumpAtN(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiDisplayWarning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiDisplayWarning",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiDisplayWarning" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiDisplayWarning" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiDisplayWarning((char const *)arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiRegisterScriptLanguage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SCRIPTTYPEINFO *arg1 = (SCRIPTTYPEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiRegisterScriptLanguage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SCRIPTTYPEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiRegisterScriptLanguage" "', argument " "1"" of type '" "SCRIPTTYPEINFO *""'"); 
  }
  arg1 = reinterpret_cast< SCRIPTTYPEINFO * >(argp1);
  GuiRegisterScriptLanguage(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUnregisterScriptLanguage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUnregisterScriptLanguage",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiUnregisterScriptLanguage" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiUnregisterScriptLanguage(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateArgumentWidget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateArgumentWidget",0,0)) SWIG_fail;
  GuiUpdateArgumentWidget();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiFocusView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiFocusView",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiFocusView" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  GuiFocusView(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiIsUpdateDisabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiIsUpdateDisabled",0,0)) SWIG_fail;
  result = (bool)GuiIsUpdateDisabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateEnable",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiUpdateEnable" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  GuiUpdateEnable(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateDisable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateDisable",0,0)) SWIG_fail;
  GuiUpdateDisable();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiLoadGraph(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BridgeCFGraphList *arg1 = (BridgeCFGraphList *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiLoadGraph",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BridgeCFGraphList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiLoadGraph" "', argument " "1"" of type '" "BridgeCFGraphList *""'"); 
  }
  arg1 = reinterpret_cast< BridgeCFGraphList * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiLoadGraph" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)GuiLoadGraph(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiGraphAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiGraphAt",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiGraphAt" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)GuiGraphAt(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateGraphView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateGraphView",0,0)) SWIG_fail;
  GuiUpdateGraphView();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiDisableLog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiDisableLog",0,0)) SWIG_fail;
  GuiDisableLog();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiEnableLog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiEnableLog",0,0)) SWIG_fail;
  GuiEnableLog();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAddFavouriteTool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAddFavouriteTool",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAddFavouriteTool" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiAddFavouriteTool" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiAddFavouriteTool((char const *)arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAddFavouriteCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAddFavouriteCommand",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAddFavouriteCommand" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiAddFavouriteCommand" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiAddFavouriteCommand((char const *)arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSetFavouriteToolShortcut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSetFavouriteToolShortcut",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiSetFavouriteToolShortcut" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiSetFavouriteToolShortcut" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiSetFavouriteToolShortcut((char const *)arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiFoldDisassembly(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiFoldDisassembly",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiFoldDisassembly" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GuiFoldDisassembly" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  GuiFoldDisassembly(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiSelectInMemoryMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiSelectInMemoryMap",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiSelectInMemoryMap" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  GuiSelectInMemoryMap(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiGetActiveView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ACTIVEVIEW *arg1 = (ACTIVEVIEW *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiGetActiveView",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ACTIVEVIEW, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiGetActiveView" "', argument " "1"" of type '" "ACTIVEVIEW *""'"); 
  }
  arg1 = reinterpret_cast< ACTIVEVIEW * >(argp1);
  GuiGetActiveView(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiAddInfoLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiAddInfoLine",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiAddInfoLine" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiAddInfoLine((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiProcessEvents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiProcessEvents",0,0)) SWIG_fail;
  GuiProcessEvents();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiTypeAddNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  TYPEDESCRIPTOR *arg2 = (TYPEDESCRIPTOR *) 0 ;
  int res1 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiTypeAddNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiTypeAddNode" "', argument " "1"" of type '" "void *""'"); 
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p__TYPEDESCRIPTOR, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiTypeAddNode" "', argument " "2"" of type '" "TYPEDESCRIPTOR const *""'"); 
  }
  arg2 = reinterpret_cast< TYPEDESCRIPTOR * >(argp2);
  result = (void *)GuiTypeAddNode(arg1,(_TYPEDESCRIPTOR const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiTypeClear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiTypeClear",0,0)) SWIG_fail;
  result = (bool)GuiTypeClear();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateTypeWidget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateTypeWidget",0,0)) SWIG_fail;
  GuiUpdateTypeWidget();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiCloseApplication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiCloseApplication",0,0)) SWIG_fail;
  GuiCloseApplication();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiFlushLog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiFlushLog",0,0)) SWIG_fail;
  GuiFlushLog();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiReferenceAddCommand(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiReferenceAddCommand",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiReferenceAddCommand" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GuiReferenceAddCommand" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  GuiReferenceAddCommand((char const *)arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiUpdateTraceBrowser(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiUpdateTraceBrowser",0,0)) SWIG_fail;
  GuiUpdateTraceBrowser();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiOpenTraceFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiOpenTraceFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GuiOpenTraceFile" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  GuiOpenTraceFile((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GuiInvalidateSymbolSource(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"GuiInvalidateSymbolSource",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "GuiInvalidateSymbolSource" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  GuiInvalidateSymbolSource(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MEMPAGEArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMPAGEArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_MEMPAGEArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MEMPAGEArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (MEMPAGEArray *)new_MEMPAGEArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMPAGEArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MEMPAGEArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGEArray *arg1 = (MEMPAGEArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_MEMPAGEArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGEArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MEMPAGEArray" "', argument " "1"" of type '" "MEMPAGEArray *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGEArray * >(argp1);
  delete_MEMPAGEArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMPAGEArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGEArray *arg1 = (MEMPAGEArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  MEMPAGE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGEArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGEArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGEArray___getitem__" "', argument " "1"" of type '" "MEMPAGEArray *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGEArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMPAGEArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = MEMPAGEArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new MEMPAGE(static_cast< const MEMPAGE& >(result))), SWIGTYPE_p_MEMPAGE, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMPAGEArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGEArray *arg1 = (MEMPAGEArray *) 0 ;
  size_t arg2 ;
  MEMPAGE arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGEArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGEArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGEArray___setitem__" "', argument " "1"" of type '" "MEMPAGEArray *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGEArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MEMPAGEArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_MEMPAGE,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MEMPAGEArray___setitem__" "', argument " "3"" of type '" "MEMPAGE""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MEMPAGEArray___setitem__" "', argument " "3"" of type '" "MEMPAGE""'");
    } else {
      MEMPAGE * temp = reinterpret_cast< MEMPAGE * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  MEMPAGEArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMPAGEArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGEArray *arg1 = (MEMPAGEArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMPAGE *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGEArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGEArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGEArray_cast" "', argument " "1"" of type '" "MEMPAGEArray *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGEArray * >(argp1);
  result = (MEMPAGE *)MEMPAGEArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMPAGE, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MEMPAGEArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  MEMPAGE *arg1 = (MEMPAGE *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMPAGEArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"MEMPAGEArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_MEMPAGE, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MEMPAGEArray_frompointer" "', argument " "1"" of type '" "MEMPAGE *""'"); 
  }
  arg1 = reinterpret_cast< MEMPAGE * >(argp1);
  result = (MEMPAGEArray *)MEMPAGEArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMPAGEArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MEMPAGEArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_MEMPAGEArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_void_to_MEMPAGE(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  MEMPAGE *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"void_to_MEMPAGE",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "void_to_MEMPAGE" "', argument " "1"" of type '" "void *""'"); 
  }
  result = (MEMPAGE *)void_to_MEMPAGE(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_MEMPAGE, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_mod_set" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGPATCHINFO_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_mod_get" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_addr_set" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGPATCHINFO_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_addr_get" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_oldbyte_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_oldbyte_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_oldbyte_set" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGPATCHINFO_oldbyte_set" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  if (arg1) (arg1)->oldbyte = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_oldbyte_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_oldbyte_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_oldbyte_get" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  result = (unsigned char) ((arg1)->oldbyte);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_newbyte_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_newbyte_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_newbyte_set" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGPATCHINFO_newbyte_set" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  if (arg1) (arg1)->newbyte = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPATCHINFO_newbyte_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPATCHINFO_newbyte_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPATCHINFO_newbyte_get" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  result = (unsigned char) ((arg1)->newbyte);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGPATCHINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGPATCHINFO",0,0)) SWIG_fail;
  result = (DBGPATCHINFO *)new DBGPATCHINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGPATCHINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGPATCHINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPATCHINFO *arg1 = (DBGPATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGPATCHINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPATCHINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGPATCHINFO" "', argument " "1"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPATCHINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGPATCHINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGPATCHINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY_addr_set" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGCALLSTACKENTRY_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY_addr_get" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY__from_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY__from_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY__from_set" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGCALLSTACKENTRY__from_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->from = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY__from_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY__from_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY__from_get" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  result = (duint) ((arg1)->from);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY_to_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY_to_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY_to_set" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGCALLSTACKENTRY_to_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->to = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY_to_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY_to_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY_to_get" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  result = (duint) ((arg1)->to);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY_comment_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[512] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY_comment_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY_comment_set" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 512);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGCALLSTACKENTRY_comment_set" "', argument " "2"" of type '" "char [512]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->comment,arg2,512*sizeof(char));
  else memset(arg1->comment,0,512*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACKENTRY_comment_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACKENTRY_comment_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACKENTRY_comment_get" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  result = (char *)(char *) ((arg1)->comment);
  {
    size_t size = SWIG_strnlen(result, 512);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGCALLSTACKENTRY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGCALLSTACKENTRY",0,0)) SWIG_fail;
  result = (DBGCALLSTACKENTRY *)new DBGCALLSTACKENTRY();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGCALLSTACKENTRY, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGCALLSTACKENTRY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACKENTRY *arg1 = (DBGCALLSTACKENTRY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGCALLSTACKENTRY",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACKENTRY, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGCALLSTACKENTRY" "', argument " "1"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGCALLSTACKENTRY_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGCALLSTACKENTRY, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DBGCALLSTACK_total_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACK *arg1 = (DBGCALLSTACK *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACK_total_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACK, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACK_total_set" "', argument " "1"" of type '" "DBGCALLSTACK *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACK * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGCALLSTACK_total_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->total = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACK_total_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACK *arg1 = (DBGCALLSTACK *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACK_total_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACK, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACK_total_get" "', argument " "1"" of type '" "DBGCALLSTACK *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACK * >(argp1);
  result = (int) ((arg1)->total);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACK_entries_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACK *arg1 = (DBGCALLSTACK *) 0 ;
  DBGCALLSTACKENTRY *arg2 = (DBGCALLSTACKENTRY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACK_entries_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACK, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACK_entries_set" "', argument " "1"" of type '" "DBGCALLSTACK *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACK * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DBGCALLSTACKENTRY, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGCALLSTACK_entries_set" "', argument " "2"" of type '" "DBGCALLSTACKENTRY *""'"); 
  }
  arg2 = reinterpret_cast< DBGCALLSTACKENTRY * >(argp2);
  if (arg1) (arg1)->entries = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGCALLSTACK_entries_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACK *arg1 = (DBGCALLSTACK *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DBGCALLSTACKENTRY *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGCALLSTACK_entries_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACK, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGCALLSTACK_entries_get" "', argument " "1"" of type '" "DBGCALLSTACK *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACK * >(argp1);
  result = (DBGCALLSTACKENTRY *) ((arg1)->entries);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGCALLSTACKENTRY, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGCALLSTACK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACK *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGCALLSTACK",0,0)) SWIG_fail;
  result = (DBGCALLSTACK *)new DBGCALLSTACK();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGCALLSTACK, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGCALLSTACK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGCALLSTACK *arg1 = (DBGCALLSTACK *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGCALLSTACK",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGCALLSTACK, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGCALLSTACK" "', argument " "1"" of type '" "DBGCALLSTACK *""'"); 
  }
  arg1 = reinterpret_cast< DBGCALLSTACK * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGCALLSTACK_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGCALLSTACK, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DBGSEHRECORD_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHRECORD *arg1 = (DBGSEHRECORD *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHRECORD_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHRECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHRECORD_addr_set" "', argument " "1"" of type '" "DBGSEHRECORD *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHRECORD * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGSEHRECORD_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGSEHRECORD_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHRECORD *arg1 = (DBGSEHRECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHRECORD_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHRECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHRECORD_addr_get" "', argument " "1"" of type '" "DBGSEHRECORD *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHRECORD * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGSEHRECORD_handler_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHRECORD *arg1 = (DBGSEHRECORD *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHRECORD_handler_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHRECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHRECORD_handler_set" "', argument " "1"" of type '" "DBGSEHRECORD *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHRECORD * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGSEHRECORD_handler_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->handler = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGSEHRECORD_handler_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHRECORD *arg1 = (DBGSEHRECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHRECORD_handler_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHRECORD, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHRECORD_handler_get" "', argument " "1"" of type '" "DBGSEHRECORD *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHRECORD * >(argp1);
  result = (duint) ((arg1)->handler);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGSEHRECORD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHRECORD *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGSEHRECORD",0,0)) SWIG_fail;
  result = (DBGSEHRECORD *)new DBGSEHRECORD();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGSEHRECORD, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGSEHRECORD(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHRECORD *arg1 = (DBGSEHRECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGSEHRECORD",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHRECORD, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGSEHRECORD" "', argument " "1"" of type '" "DBGSEHRECORD *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHRECORD * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGSEHRECORD_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGSEHRECORD, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DBGSEHCHAIN_total_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHCHAIN *arg1 = (DBGSEHCHAIN *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHCHAIN_total_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHCHAIN, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHCHAIN_total_set" "', argument " "1"" of type '" "DBGSEHCHAIN *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHCHAIN * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGSEHCHAIN_total_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->total = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGSEHCHAIN_total_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHCHAIN *arg1 = (DBGSEHCHAIN *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHCHAIN_total_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHCHAIN, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHCHAIN_total_get" "', argument " "1"" of type '" "DBGSEHCHAIN *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHCHAIN * >(argp1);
  result = (duint) ((arg1)->total);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGSEHCHAIN_records_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHCHAIN *arg1 = (DBGSEHCHAIN *) 0 ;
  DBGSEHRECORD *arg2 = (DBGSEHRECORD *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHCHAIN_records_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHCHAIN, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHCHAIN_records_set" "', argument " "1"" of type '" "DBGSEHCHAIN *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHCHAIN * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DBGSEHRECORD, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGSEHCHAIN_records_set" "', argument " "2"" of type '" "DBGSEHRECORD *""'"); 
  }
  arg2 = reinterpret_cast< DBGSEHRECORD * >(argp2);
  if (arg1) (arg1)->records = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGSEHCHAIN_records_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHCHAIN *arg1 = (DBGSEHCHAIN *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DBGSEHRECORD *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGSEHCHAIN_records_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHCHAIN, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGSEHCHAIN_records_get" "', argument " "1"" of type '" "DBGSEHCHAIN *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHCHAIN * >(argp1);
  result = (DBGSEHRECORD *) ((arg1)->records);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGSEHRECORD, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGSEHCHAIN(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHCHAIN *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGSEHCHAIN",0,0)) SWIG_fail;
  result = (DBGSEHCHAIN *)new DBGSEHCHAIN();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGSEHCHAIN, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGSEHCHAIN(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGSEHCHAIN *arg1 = (DBGSEHCHAIN *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGSEHCHAIN",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGSEHCHAIN, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGSEHCHAIN" "', argument " "1"" of type '" "DBGSEHCHAIN *""'"); 
  }
  arg1 = reinterpret_cast< DBGSEHCHAIN * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGSEHCHAIN_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGSEHCHAIN, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_dwProcessId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_dwProcessId_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_dwProcessId_set" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGPROCESSINFO_dwProcessId_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->dwProcessId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_dwProcessId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_dwProcessId_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_dwProcessId_get" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  result = (DWORD) ((arg1)->dwProcessId);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_szExeFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[MAX_PATH] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_szExeFile_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_szExeFile_set" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, MAX_PATH);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGPROCESSINFO_szExeFile_set" "', argument " "2"" of type '" "char [MAX_PATH]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->szExeFile,arg2,MAX_PATH*sizeof(char));
  else memset(arg1->szExeFile,0,MAX_PATH*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_szExeFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_szExeFile_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_szExeFile_get" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  result = (char *)(char *) ((arg1)->szExeFile);
  {
    size_t size = SWIG_strnlen(result, MAX_PATH);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_szExeMainWindowTitle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[MAX_PATH] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_szExeMainWindowTitle_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_szExeMainWindowTitle_set" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, MAX_PATH);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGPROCESSINFO_szExeMainWindowTitle_set" "', argument " "2"" of type '" "char [MAX_PATH]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->szExeMainWindowTitle,arg2,MAX_PATH*sizeof(char));
  else memset(arg1->szExeMainWindowTitle,0,MAX_PATH*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_szExeMainWindowTitle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_szExeMainWindowTitle_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_szExeMainWindowTitle_get" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  result = (char *)(char *) ((arg1)->szExeMainWindowTitle);
  {
    size_t size = SWIG_strnlen(result, MAX_PATH);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_szExeArgs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_szExeArgs_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_szExeArgs_set" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGPROCESSINFO_szExeArgs_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->szExeArgs,arg2,256*sizeof(char));
  else memset(arg1->szExeArgs,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGPROCESSINFO_szExeArgs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGPROCESSINFO_szExeArgs_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGPROCESSINFO_szExeArgs_get" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  result = (char *)(char *) ((arg1)->szExeArgs);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGPROCESSINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGPROCESSINFO",0,0)) SWIG_fail;
  result = (DBGPROCESSINFO *)new DBGPROCESSINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGPROCESSINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGPROCESSINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGPROCESSINFO *arg1 = (DBGPROCESSINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGPROCESSINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGPROCESSINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGPROCESSINFO" "', argument " "1"" of type '" "DBGPROCESSINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGPROCESSINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGPROCESSINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGPROCESSINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DBGRELOCATIONINFO_rva_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *arg1 = (DBGRELOCATIONINFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGRELOCATIONINFO_rva_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGRELOCATIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGRELOCATIONINFO_rva_set" "', argument " "1"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGRELOCATIONINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGRELOCATIONINFO_rva_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->rva = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGRELOCATIONINFO_rva_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *arg1 = (DBGRELOCATIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGRELOCATIONINFO_rva_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGRELOCATIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGRELOCATIONINFO_rva_get" "', argument " "1"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGRELOCATIONINFO * >(argp1);
  result = (DWORD) ((arg1)->rva);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGRELOCATIONINFO_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *arg1 = (DBGRELOCATIONINFO *) 0 ;
  BYTE arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGRELOCATIONINFO_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGRELOCATIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGRELOCATIONINFO_type_set" "', argument " "1"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGRELOCATIONINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGRELOCATIONINFO_type_set" "', argument " "2"" of type '" "BYTE""'");
  } 
  arg2 = static_cast< BYTE >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGRELOCATIONINFO_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *arg1 = (DBGRELOCATIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  BYTE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGRELOCATIONINFO_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGRELOCATIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGRELOCATIONINFO_type_get" "', argument " "1"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGRELOCATIONINFO * >(argp1);
  result = (BYTE) ((arg1)->type);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGRELOCATIONINFO_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *arg1 = (DBGRELOCATIONINFO *) 0 ;
  WORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGRELOCATIONINFO_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGRELOCATIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGRELOCATIONINFO_size_set" "', argument " "1"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGRELOCATIONINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGRELOCATIONINFO_size_set" "', argument " "2"" of type '" "WORD""'");
  } 
  arg2 = static_cast< WORD >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGRELOCATIONINFO_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *arg1 = (DBGRELOCATIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  WORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGRELOCATIONINFO_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGRELOCATIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGRELOCATIONINFO_size_get" "', argument " "1"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGRELOCATIONINFO * >(argp1);
  result = (WORD) ((arg1)->size);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGRELOCATIONINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGRELOCATIONINFO",0,0)) SWIG_fail;
  result = (DBGRELOCATIONINFO *)new DBGRELOCATIONINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGRELOCATIONINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGRELOCATIONINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGRELOCATIONINFO *arg1 = (DBGRELOCATIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGRELOCATIONINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGRELOCATIONINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGRELOCATIONINFO" "', argument " "1"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< DBGRELOCATIONINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGRELOCATIONINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGRELOCATIONINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_HANDLEINFO_Handle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *arg1 = (HANDLEINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"HANDLEINFO_Handle_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HANDLEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HANDLEINFO_Handle_set" "', argument " "1"" of type '" "HANDLEINFO *""'"); 
  }
  arg1 = reinterpret_cast< HANDLEINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HANDLEINFO_Handle_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->Handle = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HANDLEINFO_Handle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *arg1 = (HANDLEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"HANDLEINFO_Handle_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HANDLEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HANDLEINFO_Handle_get" "', argument " "1"" of type '" "HANDLEINFO *""'"); 
  }
  arg1 = reinterpret_cast< HANDLEINFO * >(argp1);
  result = (duint) ((arg1)->Handle);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HANDLEINFO_TypeNumber_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *arg1 = (HANDLEINFO *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"HANDLEINFO_TypeNumber_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HANDLEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HANDLEINFO_TypeNumber_set" "', argument " "1"" of type '" "HANDLEINFO *""'"); 
  }
  arg1 = reinterpret_cast< HANDLEINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HANDLEINFO_TypeNumber_set" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  if (arg1) (arg1)->TypeNumber = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HANDLEINFO_TypeNumber_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *arg1 = (HANDLEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"HANDLEINFO_TypeNumber_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HANDLEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HANDLEINFO_TypeNumber_get" "', argument " "1"" of type '" "HANDLEINFO *""'"); 
  }
  arg1 = reinterpret_cast< HANDLEINFO * >(argp1);
  result = (unsigned char) ((arg1)->TypeNumber);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HANDLEINFO_GrantedAccess_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *arg1 = (HANDLEINFO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"HANDLEINFO_GrantedAccess_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HANDLEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HANDLEINFO_GrantedAccess_set" "', argument " "1"" of type '" "HANDLEINFO *""'"); 
  }
  arg1 = reinterpret_cast< HANDLEINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HANDLEINFO_GrantedAccess_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->GrantedAccess = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HANDLEINFO_GrantedAccess_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *arg1 = (HANDLEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"HANDLEINFO_GrantedAccess_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HANDLEINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HANDLEINFO_GrantedAccess_get" "', argument " "1"" of type '" "HANDLEINFO *""'"); 
  }
  arg1 = reinterpret_cast< HANDLEINFO * >(argp1);
  result = (unsigned int) ((arg1)->GrantedAccess);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HANDLEINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_HANDLEINFO",0,0)) SWIG_fail;
  result = (HANDLEINFO *)new HANDLEINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_HANDLEINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_HANDLEINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HANDLEINFO *arg1 = (HANDLEINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_HANDLEINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HANDLEINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HANDLEINFO" "', argument " "1"" of type '" "HANDLEINFO *""'"); 
  }
  arg1 = reinterpret_cast< HANDLEINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HANDLEINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_HANDLEINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_RemoteAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[50] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_RemoteAddress_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_RemoteAddress_set" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 50);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TCPCONNECTIONINFO_RemoteAddress_set" "', argument " "2"" of type '" "char [50]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->RemoteAddress,arg2,50*sizeof(char));
  else memset(arg1->RemoteAddress,0,50*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_RemoteAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_RemoteAddress_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_RemoteAddress_get" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  result = (char *)(char *) ((arg1)->RemoteAddress);
  {
    size_t size = SWIG_strnlen(result, 50);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_RemotePort_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_RemotePort_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_RemotePort_set" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TCPCONNECTIONINFO_RemotePort_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->RemotePort = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_RemotePort_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_RemotePort_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_RemotePort_get" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  result = (unsigned short) ((arg1)->RemotePort);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_LocalAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[50] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_LocalAddress_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_LocalAddress_set" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 50);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TCPCONNECTIONINFO_LocalAddress_set" "', argument " "2"" of type '" "char [50]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->LocalAddress,arg2,50*sizeof(char));
  else memset(arg1->LocalAddress,0,50*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_LocalAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_LocalAddress_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_LocalAddress_get" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  result = (char *)(char *) ((arg1)->LocalAddress);
  {
    size_t size = SWIG_strnlen(result, 50);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_LocalPort_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  unsigned short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_LocalPort_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_LocalPort_set" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TCPCONNECTIONINFO_LocalPort_set" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  if (arg1) (arg1)->LocalPort = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_LocalPort_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_LocalPort_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_LocalPort_get" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  result = (unsigned short) ((arg1)->LocalPort);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_StateText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[50] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_StateText_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_StateText_set" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 50);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TCPCONNECTIONINFO_StateText_set" "', argument " "2"" of type '" "char [50]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->StateText,arg2,50*sizeof(char));
  else memset(arg1->StateText,0,50*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_StateText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_StateText_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_StateText_get" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  result = (char *)(char *) ((arg1)->StateText);
  {
    size_t size = SWIG_strnlen(result, 50);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_State_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_State_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_State_set" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TCPCONNECTIONINFO_State_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->State = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TCPCONNECTIONINFO_State_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"TCPCONNECTIONINFO_State_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TCPCONNECTIONINFO_State_get" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  result = (unsigned int) ((arg1)->State);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TCPCONNECTIONINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_TCPCONNECTIONINFO",0,0)) SWIG_fail;
  result = (TCPCONNECTIONINFO *)new TCPCONNECTIONINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TCPCONNECTIONINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TCPCONNECTIONINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  TCPCONNECTIONINFO *arg1 = (TCPCONNECTIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_TCPCONNECTIONINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TCPCONNECTIONINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TCPCONNECTIONINFO" "', argument " "1"" of type '" "TCPCONNECTIONINFO *""'"); 
  }
  arg1 = reinterpret_cast< TCPCONNECTIONINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TCPCONNECTIONINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_TCPCONNECTIONINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_WINDOW_INFO_handle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_handle_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_handle_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WINDOW_INFO_handle_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->handle = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_handle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_handle_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_handle_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (duint) ((arg1)->handle);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_parent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_parent_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_parent_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WINDOW_INFO_parent_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->parent = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_parent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_parent_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_parent_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (duint) ((arg1)->parent);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_threadId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_threadId_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_threadId_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WINDOW_INFO_threadId_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->threadId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_threadId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_threadId_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_threadId_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (DWORD) ((arg1)->threadId);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_style_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_style_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_style_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WINDOW_INFO_style_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->style = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_style_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_style_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_style_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (DWORD) ((arg1)->style);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_styleEx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  DWORD arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_styleEx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_styleEx_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WINDOW_INFO_styleEx_set" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  if (arg1) (arg1)->styleEx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_styleEx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DWORD result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_styleEx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_styleEx_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (DWORD) ((arg1)->styleEx);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_wndProc_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_wndProc_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_wndProc_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WINDOW_INFO_wndProc_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->wndProc = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_wndProc_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_wndProc_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_wndProc_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (duint) ((arg1)->wndProc);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_enabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_enabled_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_enabled_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "WINDOW_INFO_enabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->enabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_enabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_enabled_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_enabled_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (bool) ((arg1)->enabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_position_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  RECT arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_position_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_position_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_RECT,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WINDOW_INFO_position_set" "', argument " "2"" of type '" "RECT""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "WINDOW_INFO_position_set" "', argument " "2"" of type '" "RECT""'");
    } else {
      RECT * temp = reinterpret_cast< RECT * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  if (arg1) (arg1)->position = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_position_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  RECT result;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_position_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_position_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result =  ((arg1)->position);
  resultobj = SWIG_NewPointerObj((new RECT(static_cast< const RECT& >(result))), SWIGTYPE_p_RECT, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_windowTitle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[512] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_windowTitle_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_windowTitle_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 512);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WINDOW_INFO_windowTitle_set" "', argument " "2"" of type '" "char [512]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->windowTitle,arg2,512*sizeof(char));
  else memset(arg1->windowTitle,0,512*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_windowTitle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_windowTitle_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_windowTitle_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (char *)(char *) ((arg1)->windowTitle);
  {
    size_t size = SWIG_strnlen(result, 512);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_windowClass_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[512] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_windowClass_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_windowClass_set" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 512);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "WINDOW_INFO_windowClass_set" "', argument " "2"" of type '" "char [512]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->windowClass,arg2,512*sizeof(char));
  else memset(arg1->windowClass,0,512*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_WINDOW_INFO_windowClass_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"WINDOW_INFO_windowClass_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "WINDOW_INFO_windowClass_get" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  result = (char *)(char *) ((arg1)->windowClass);
  {
    size_t size = SWIG_strnlen(result, 512);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_WINDOW_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_WINDOW_INFO",0,0)) SWIG_fail;
  result = (WINDOW_INFO *)new WINDOW_INFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_WINDOW_INFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_WINDOW_INFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  WINDOW_INFO *arg1 = (WINDOW_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_WINDOW_INFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_WINDOW_INFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_WINDOW_INFO" "', argument " "1"" of type '" "WINDOW_INFO *""'"); 
  }
  arg1 = reinterpret_cast< WINDOW_INFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *WINDOW_INFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_WINDOW_INFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_HEAPINFO_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *arg1 = (HEAPINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"HEAPINFO_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HEAPINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HEAPINFO_addr_set" "', argument " "1"" of type '" "HEAPINFO *""'"); 
  }
  arg1 = reinterpret_cast< HEAPINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HEAPINFO_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HEAPINFO_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *arg1 = (HEAPINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"HEAPINFO_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HEAPINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HEAPINFO_addr_get" "', argument " "1"" of type '" "HEAPINFO *""'"); 
  }
  arg1 = reinterpret_cast< HEAPINFO * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HEAPINFO_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *arg1 = (HEAPINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"HEAPINFO_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HEAPINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HEAPINFO_size_set" "', argument " "1"" of type '" "HEAPINFO *""'"); 
  }
  arg1 = reinterpret_cast< HEAPINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HEAPINFO_size_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HEAPINFO_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *arg1 = (HEAPINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"HEAPINFO_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HEAPINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HEAPINFO_size_get" "', argument " "1"" of type '" "HEAPINFO *""'"); 
  }
  arg1 = reinterpret_cast< HEAPINFO * >(argp1);
  result = (duint) ((arg1)->size);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HEAPINFO_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *arg1 = (HEAPINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"HEAPINFO_flags_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HEAPINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HEAPINFO_flags_set" "', argument " "1"" of type '" "HEAPINFO *""'"); 
  }
  arg1 = reinterpret_cast< HEAPINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "HEAPINFO_flags_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_HEAPINFO_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *arg1 = (HEAPINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"HEAPINFO_flags_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HEAPINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HEAPINFO_flags_get" "', argument " "1"" of type '" "HEAPINFO *""'"); 
  }
  arg1 = reinterpret_cast< HEAPINFO * >(argp1);
  result = (duint) ((arg1)->flags);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_HEAPINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_HEAPINFO",0,0)) SWIG_fail;
  result = (HEAPINFO *)new HEAPINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_HEAPINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_HEAPINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  HEAPINFO *arg1 = (HEAPINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_HEAPINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_HEAPINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HEAPINFO" "', argument " "1"" of type '" "HEAPINFO *""'"); 
  }
  arg1 = reinterpret_cast< HEAPINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HEAPINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_HEAPINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CONSTANTINFO_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CONSTANTINFO *arg1 = (CONSTANTINFO *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CONSTANTINFO_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CONSTANTINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CONSTANTINFO_name_set" "', argument " "1"" of type '" "CONSTANTINFO *""'"); 
  }
  arg1 = reinterpret_cast< CONSTANTINFO * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CONSTANTINFO_name_set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(reinterpret_cast< const char * >(arg2))) + 1;
    arg1->name = (char const *)reinterpret_cast< char* >(memcpy((new char[size]), arg2, sizeof(char)*(size)));
  } else {
    arg1->name = 0;
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CONSTANTINFO_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CONSTANTINFO *arg1 = (CONSTANTINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CONSTANTINFO_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CONSTANTINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CONSTANTINFO_name_get" "', argument " "1"" of type '" "CONSTANTINFO *""'"); 
  }
  arg1 = reinterpret_cast< CONSTANTINFO * >(argp1);
  result = (char *) ((arg1)->name);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CONSTANTINFO_value_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CONSTANTINFO *arg1 = (CONSTANTINFO *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CONSTANTINFO_value_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CONSTANTINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CONSTANTINFO_value_set" "', argument " "1"" of type '" "CONSTANTINFO *""'"); 
  }
  arg1 = reinterpret_cast< CONSTANTINFO * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CONSTANTINFO_value_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->value = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CONSTANTINFO_value_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CONSTANTINFO *arg1 = (CONSTANTINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CONSTANTINFO_value_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CONSTANTINFO, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CONSTANTINFO_value_get" "', argument " "1"" of type '" "CONSTANTINFO *""'"); 
  }
  arg1 = reinterpret_cast< CONSTANTINFO * >(argp1);
  result = (duint) ((arg1)->value);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CONSTANTINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CONSTANTINFO *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_CONSTANTINFO",0,0)) SWIG_fail;
  result = (CONSTANTINFO *)new CONSTANTINFO();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CONSTANTINFO, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CONSTANTINFO(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CONSTANTINFO *arg1 = (CONSTANTINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_CONSTANTINFO",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CONSTANTINFO, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CONSTANTINFO" "', argument " "1"" of type '" "CONSTANTINFO *""'"); 
  }
  arg1 = reinterpret_cast< CONSTANTINFO * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CONSTANTINFO_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CONSTANTINFO, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_AssembleAtEx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ASSEMBLEATEX arg2 = (ASSEMBLEATEX) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_AssembleAtEx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_AssembleAtEx_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_AssembleAtEx_set" "', argument " "2"" of type '" "ASSEMBLEATEX""'"); 
    }
  }
  if (arg1) (arg1)->AssembleAtEx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_AssembleAtEx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ASSEMBLEATEX result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_AssembleAtEx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_AssembleAtEx_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ASSEMBLEATEX) ((arg1)->AssembleAtEx);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SectionFromAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  SECTIONFROMADDR arg2 = (SECTIONFROMADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SectionFromAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SectionFromAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_SectionFromAddr_set" "', argument " "2"" of type '" "SECTIONFROMADDR""'"); 
    }
  }
  if (arg1) (arg1)->SectionFromAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SectionFromAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SECTIONFROMADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SectionFromAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SectionFromAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (SECTIONFROMADDR) ((arg1)->SectionFromAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModNameFromAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODNAMEFROMADDR arg2 = (MODNAMEFROMADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModNameFromAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModNameFromAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_char_bool__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModNameFromAddr_set" "', argument " "2"" of type '" "MODNAMEFROMADDR""'"); 
    }
  }
  if (arg1) (arg1)->ModNameFromAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModNameFromAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODNAMEFROMADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModNameFromAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModNameFromAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODNAMEFROMADDR) ((arg1)->ModNameFromAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_char_bool__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModBaseFromAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODBASEFROMADDR arg2 = (MODBASEFROMADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModBaseFromAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModBaseFromAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModBaseFromAddr_set" "', argument " "2"" of type '" "MODBASEFROMADDR""'"); 
    }
  }
  if (arg1) (arg1)->ModBaseFromAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModBaseFromAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODBASEFROMADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModBaseFromAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModBaseFromAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODBASEFROMADDR) ((arg1)->ModBaseFromAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModBaseFromName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODBASEFROMNAME arg2 = (MODBASEFROMNAME) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModBaseFromName_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModBaseFromName_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModBaseFromName_set" "', argument " "2"" of type '" "MODBASEFROMNAME""'"); 
    }
  }
  if (arg1) (arg1)->ModBaseFromName = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModBaseFromName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODBASEFROMNAME result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModBaseFromName_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModBaseFromName_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODBASEFROMNAME) ((arg1)->ModBaseFromName);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModSizeFromAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODSIZEFROMADDR arg2 = (MODSIZEFROMADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModSizeFromAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModSizeFromAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModSizeFromAddr_set" "', argument " "2"" of type '" "MODSIZEFROMADDR""'"); 
    }
  }
  if (arg1) (arg1)->ModSizeFromAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModSizeFromAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODSIZEFROMADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModSizeFromAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModSizeFromAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODSIZEFROMADDR) ((arg1)->ModSizeFromAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_Assemble_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ASSEMBLE arg2 = (ASSEMBLE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_Assemble_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_Assemble_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_Assemble_set" "', argument " "2"" of type '" "ASSEMBLE""'"); 
    }
  }
  if (arg1) (arg1)->Assemble = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_Assemble_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ASSEMBLE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_Assemble_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_Assemble_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ASSEMBLE) ((arg1)->Assemble);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchGet_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PATCHGET arg2 = (PATCHGET) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchGet_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchGet_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PatchGet_set" "', argument " "2"" of type '" "PATCHGET""'"); 
    }
  }
  if (arg1) (arg1)->PatchGet = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchGet_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PATCHGET result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchGet_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchGet_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PATCHGET) ((arg1)->PatchGet);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchInRange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PATCHINRANGE arg2 = (PATCHINRANGE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchInRange_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchInRange_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PatchInRange_set" "', argument " "2"" of type '" "PATCHINRANGE""'"); 
    }
  }
  if (arg1) (arg1)->PatchInRange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchInRange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PATCHINRANGE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchInRange_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchInRange_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PATCHINRANGE) ((arg1)->PatchInRange);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemPatch_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MEMPATCH arg2 = (MEMPATCH) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemPatch_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemPatch_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_MemPatch_set" "', argument " "2"" of type '" "MEMPATCH""'"); 
    }
  }
  if (arg1) (arg1)->MemPatch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemPatch_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMPATCH result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemPatch_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemPatch_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MEMPATCH) ((arg1)->MemPatch);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchRestoreRange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PATCHRESTORERANGE arg2 = (PATCHRESTORERANGE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchRestoreRange_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchRestoreRange_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PatchRestoreRange_set" "', argument " "2"" of type '" "PATCHRESTORERANGE""'"); 
    }
  }
  if (arg1) (arg1)->PatchRestoreRange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchRestoreRange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PATCHRESTORERANGE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchRestoreRange_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchRestoreRange_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PATCHRESTORERANGE) ((arg1)->PatchRestoreRange);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchEnum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PATCHENUM arg2 = (PATCHENUM) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchEnum_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchEnum_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_DBGPATCHINFO_p_size_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PatchEnum_set" "', argument " "2"" of type '" "PATCHENUM""'"); 
    }
  }
  if (arg1) (arg1)->PatchEnum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchEnum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PATCHENUM result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchEnum_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchEnum_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PATCHENUM) ((arg1)->PatchEnum);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_DBGPATCHINFO_p_size_t__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchRestore_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PATCHRESTORE arg2 = (PATCHRESTORE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchRestore_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchRestore_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PatchRestore_set" "', argument " "2"" of type '" "PATCHRESTORE""'"); 
    }
  }
  if (arg1) (arg1)->PatchRestore = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchRestore_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PATCHRESTORE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchRestore_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchRestore_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PATCHRESTORE) ((arg1)->PatchRestore);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PATCHFILE arg2 = (PATCHFILE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchFile_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchFile_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PatchFile_set" "', argument " "2"" of type '" "PATCHFILE""'"); 
    }
  }
  if (arg1) (arg1)->PatchFile = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PATCHFILE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchFile_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchFile_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PATCHFILE) ((arg1)->PatchFile);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModPathFromAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODPATHFROMADDR arg2 = (MODPATHFROMADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModPathFromAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModPathFromAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_char_int__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModPathFromAddr_set" "', argument " "2"" of type '" "MODPATHFROMADDR""'"); 
    }
  }
  if (arg1) (arg1)->ModPathFromAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModPathFromAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODPATHFROMADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModPathFromAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModPathFromAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODPATHFROMADDR) ((arg1)->ModPathFromAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_char_int__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModPathFromName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODPATHFROMNAME arg2 = (MODPATHFROMNAME) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModPathFromName_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModPathFromName_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_p_char_int__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModPathFromName_set" "', argument " "2"" of type '" "MODPATHFROMNAME""'"); 
    }
  }
  if (arg1) (arg1)->ModPathFromName = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModPathFromName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODPATHFROMNAME result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModPathFromName_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModPathFromName_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODPATHFROMNAME) ((arg1)->ModPathFromName);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_p_char_int__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DisasmFast_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DISASMFAST arg2 = (DISASMFAST) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DisasmFast_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DisasmFast_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_DisasmFast_set" "', argument " "2"" of type '" "DISASMFAST""'"); 
    }
  }
  if (arg1) (arg1)->DisasmFast = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DisasmFast_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DISASMFAST result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DisasmFast_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DisasmFast_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (DISASMFAST) ((arg1)->DisasmFast);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemUpdateMap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MEMUPDATEMAP arg2 = (MEMUPDATEMAP) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemUpdateMap_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemUpdateMap_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f___void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_MemUpdateMap_set" "', argument " "2"" of type '" "MEMUPDATEMAP""'"); 
    }
  }
  if (arg1) (arg1)->MemUpdateMap = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemUpdateMap_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMUPDATEMAP result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemUpdateMap_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemUpdateMap_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MEMUPDATEMAP) ((arg1)->MemUpdateMap);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f___void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCallStack_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETCALLSTACK arg2 = (GETCALLSTACK) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCallStack_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCallStack_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_DBGCALLSTACK__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetCallStack_set" "', argument " "2"" of type '" "GETCALLSTACK""'"); 
    }
  }
  if (arg1) (arg1)->GetCallStack = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCallStack_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETCALLSTACK result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCallStack_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCallStack_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETCALLSTACK) ((arg1)->GetCallStack);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_DBGCALLSTACK__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetSEHChain_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETSEHCHAIN arg2 = (GETSEHCHAIN) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetSEHChain_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetSEHChain_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_DBGSEHCHAIN__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetSEHChain_set" "', argument " "2"" of type '" "GETSEHCHAIN""'"); 
    }
  }
  if (arg1) (arg1)->GetSEHChain = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetSEHChain_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETSEHCHAIN result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetSEHChain_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetSEHChain_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETSEHCHAIN) ((arg1)->GetSEHChain);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_DBGSEHCHAIN__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SymbolDownloadAllSymbols_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  SYMBOLDOWNLOADALLSYMBOLS arg2 = (SYMBOLDOWNLOADALLSYMBOLS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SymbolDownloadAllSymbols_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_SymbolDownloadAllSymbols_set" "', argument " "2"" of type '" "SYMBOLDOWNLOADALLSYMBOLS""'"); 
    }
  }
  if (arg1) (arg1)->SymbolDownloadAllSymbols = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SymbolDownloadAllSymbols_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SYMBOLDOWNLOADALLSYMBOLS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SymbolDownloadAllSymbols_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (SYMBOLDOWNLOADALLSYMBOLS) ((arg1)->SymbolDownloadAllSymbols);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetJitAuto_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETJITAUTO arg2 = (GETJITAUTO) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetJitAuto_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetJitAuto_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_bool__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetJitAuto_set" "', argument " "2"" of type '" "GETJITAUTO""'"); 
    }
  }
  if (arg1) (arg1)->GetJitAuto = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetJitAuto_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETJITAUTO result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetJitAuto_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetJitAuto_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETJITAUTO) ((arg1)->GetJitAuto);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_bool__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetJit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETJIT arg2 = (GETJIT) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetJit_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetJit_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_char_bool__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetJit_set" "', argument " "2"" of type '" "GETJIT""'"); 
    }
  }
  if (arg1) (arg1)->GetJit = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetJit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETJIT result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetJit_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetJit_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETJIT) ((arg1)->GetJit);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_char_bool__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetDefJit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETDEFJIT arg2 = (GETDEFJIT) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetDefJit_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetDefJit_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetDefJit_set" "', argument " "2"" of type '" "GETDEFJIT""'"); 
    }
  }
  if (arg1) (arg1)->GetDefJit = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetDefJit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETDEFJIT result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetDefJit_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetDefJit_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETDEFJIT) ((arg1)->GetDefJit);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetProcessList_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETPROCESSLIST arg2 = (GETPROCESSLIST) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetProcessList_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetProcessList_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_p_DBGPROCESSINFO_p_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetProcessList_set" "', argument " "2"" of type '" "GETPROCESSLIST""'"); 
    }
  }
  if (arg1) (arg1)->GetProcessList = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetProcessList_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETPROCESSLIST result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetProcessList_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetProcessList_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETPROCESSLIST) ((arg1)->GetProcessList);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_p_DBGPROCESSINFO_p_int__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetPageRights_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETPAGERIGHTS arg2 = (GETPAGERIGHTS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetPageRights_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetPageRights_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetPageRights_set" "', argument " "2"" of type '" "GETPAGERIGHTS""'"); 
    }
  }
  if (arg1) (arg1)->GetPageRights = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetPageRights_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETPAGERIGHTS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetPageRights_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetPageRights_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETPAGERIGHTS) ((arg1)->GetPageRights);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetPageRights_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  SETPAGERIGHTS arg2 = (SETPAGERIGHTS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetPageRights_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetPageRights_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_q_const__char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_SetPageRights_set" "', argument " "2"" of type '" "SETPAGERIGHTS""'"); 
    }
  }
  if (arg1) (arg1)->SetPageRights = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetPageRights_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SETPAGERIGHTS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetPageRights_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetPageRights_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (SETPAGERIGHTS) ((arg1)->SetPageRights);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_q_const__char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PageRightsToString_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PAGERIGHTSTOSTRING arg2 = (PAGERIGHTSTOSTRING) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PageRightsToString_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PageRightsToString_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PageRightsToString_set" "', argument " "2"" of type '" "PAGERIGHTSTOSTRING""'"); 
    }
  }
  if (arg1) (arg1)->PageRightsToString = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PageRightsToString_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PAGERIGHTSTOSTRING result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PageRightsToString_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PageRightsToString_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PAGERIGHTSTOSTRING) ((arg1)->PageRightsToString);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_IsProcessElevated_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ISPROCESSELEVATED arg2 = (ISPROCESSELEVATED) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_IsProcessElevated_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_IsProcessElevated_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f___bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_IsProcessElevated_set" "', argument " "2"" of type '" "ISPROCESSELEVATED""'"); 
    }
  }
  if (arg1) (arg1)->IsProcessElevated = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_IsProcessElevated_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ISPROCESSELEVATED result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_IsProcessElevated_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_IsProcessElevated_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ISPROCESSELEVATED) ((arg1)->IsProcessElevated);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f___bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCmdline_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETCMDLINE arg2 = (GETCMDLINE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCmdline_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCmdline_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_char_p_size_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetCmdline_set" "', argument " "2"" of type '" "GETCMDLINE""'"); 
    }
  }
  if (arg1) (arg1)->GetCmdline = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCmdline_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETCMDLINE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCmdline_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCmdline_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETCMDLINE) ((arg1)->GetCmdline);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_char_p_size_t__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetCmdline_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  SETCMDLINE arg2 = (SETCMDLINE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetCmdline_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetCmdline_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_SetCmdline_set" "', argument " "2"" of type '" "SETCMDLINE""'"); 
    }
  }
  if (arg1) (arg1)->SetCmdline = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetCmdline_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SETCMDLINE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetCmdline_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetCmdline_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (SETCMDLINE) ((arg1)->SetCmdline);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_FileOffsetToVa_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  FILEOFFSETTOVA arg2 = (FILEOFFSETTOVA) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_FileOffsetToVa_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_FileOffsetToVa_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_unsigned_long_long__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_FileOffsetToVa_set" "', argument " "2"" of type '" "FILEOFFSETTOVA""'"); 
    }
  }
  if (arg1) (arg1)->FileOffsetToVa = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_FileOffsetToVa_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FILEOFFSETTOVA result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_FileOffsetToVa_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_FileOffsetToVa_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (FILEOFFSETTOVA) ((arg1)->FileOffsetToVa);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_unsigned_long_long__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_VaToFileOffset_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  VATOFILEOFFSET arg2 = (VATOFILEOFFSET) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_VaToFileOffset_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_VaToFileOffset_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_VaToFileOffset_set" "', argument " "2"" of type '" "VATOFILEOFFSET""'"); 
    }
  }
  if (arg1) (arg1)->VaToFileOffset = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_VaToFileOffset_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VATOFILEOFFSET result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_VaToFileOffset_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_VaToFileOffset_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (VATOFILEOFFSET) ((arg1)->VaToFileOffset);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetAddrFromLine_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETADDRFROMLINE arg2 = (GETADDRFROMLINE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetAddrFromLine_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetAddrFromLine_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetAddrFromLine_set" "', argument " "2"" of type '" "GETADDRFROMLINE""'"); 
    }
  }
  if (arg1) (arg1)->GetAddrFromLine = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetAddrFromLine_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETADDRFROMLINE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetAddrFromLine_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetAddrFromLine_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETADDRFROMLINE) ((arg1)->GetAddrFromLine);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetSourceFromAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETSOURCEFROMADDR arg2 = (GETSOURCEFROMADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetSourceFromAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetSourceFromAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_char_p_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetSourceFromAddr_set" "', argument " "2"" of type '" "GETSOURCEFROMADDR""'"); 
    }
  }
  if (arg1) (arg1)->GetSourceFromAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetSourceFromAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETSOURCEFROMADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetSourceFromAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetSourceFromAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETSOURCEFROMADDR) ((arg1)->GetSourceFromAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_char_p_int__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ValFromString_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  VALFROMSTRING arg2 = (VALFROMSTRING) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ValFromString_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ValFromString_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_p_unsigned_long_long__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ValFromString_set" "', argument " "2"" of type '" "VALFROMSTRING""'"); 
    }
  }
  if (arg1) (arg1)->ValFromString = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ValFromString_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  VALFROMSTRING result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ValFromString_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ValFromString_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (VALFROMSTRING) ((arg1)->ValFromString);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_p_unsigned_long_long__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchGetEx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  PATCHGETEX arg2 = (PATCHGETEX) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchGetEx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchGetEx_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_DBGPATCHINFO__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_PatchGetEx_set" "', argument " "2"" of type '" "PATCHGETEX""'"); 
    }
  }
  if (arg1) (arg1)->PatchGetEx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchGetEx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PATCHGETEX result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchGetEx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchGetEx_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (PATCHGETEX) ((arg1)->PatchGetEx);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_DBGPATCHINFO__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetBridgeBp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETBRIDGEBP arg2 = (GETBRIDGEBP) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetBridgeBp_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetBridgeBp_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetBridgeBp_set" "', argument " "2"" of type '" "GETBRIDGEBP""'"); 
    }
  }
  if (arg1) (arg1)->GetBridgeBp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetBridgeBp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETBRIDGEBP result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetBridgeBp_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetBridgeBp_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETBRIDGEBP) ((arg1)->GetBridgeBp);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_StringFormatInline_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  STRINGFORMATINLINE arg2 = (STRINGFORMATINLINE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_StringFormatInline_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_StringFormatInline_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_size_t_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_StringFormatInline_set" "', argument " "2"" of type '" "STRINGFORMATINLINE""'"); 
    }
  }
  if (arg1) (arg1)->StringFormatInline = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_StringFormatInline_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  STRINGFORMATINLINE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_StringFormatInline_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_StringFormatInline_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (STRINGFORMATINLINE) ((arg1)->StringFormatInline);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_size_t_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetMnemonicBrief_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETMNEMONICBRIEF arg2 = (GETMNEMONICBRIEF) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetMnemonicBrief_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetMnemonicBrief_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_size_t_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetMnemonicBrief_set" "', argument " "2"" of type '" "GETMNEMONICBRIEF""'"); 
    }
  }
  if (arg1) (arg1)->GetMnemonicBrief = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetMnemonicBrief_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETMNEMONICBRIEF result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetMnemonicBrief_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetMnemonicBrief_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETMNEMONICBRIEF) ((arg1)->GetMnemonicBrief);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_size_t_p_char__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordHitCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETTRACERECORDHITCOUNT arg2 = (GETTRACERECORDHITCOUNT) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordHitCount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordHitCount_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetTraceRecordHitCount_set" "', argument " "2"" of type '" "GETTRACERECORDHITCOUNT""'"); 
    }
  }
  if (arg1) (arg1)->GetTraceRecordHitCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordHitCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETTRACERECORDHITCOUNT result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordHitCount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordHitCount_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETTRACERECORDHITCOUNT) ((arg1)->GetTraceRecordHitCount);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__unsigned_int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordByteType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETTRACERECORDBYTETYPE arg2 = (GETTRACERECORDBYTETYPE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordByteType_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordByteType_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__TRACERECORDBYTETYPE);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetTraceRecordByteType_set" "', argument " "2"" of type '" "GETTRACERECORDBYTETYPE""'"); 
    }
  }
  if (arg1) (arg1)->GetTraceRecordByteType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordByteType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETTRACERECORDBYTETYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordByteType_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordByteType_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETTRACERECORDBYTETYPE) ((arg1)->GetTraceRecordByteType);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__TRACERECORDBYTETYPE);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetTraceRecordType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  SETTRACERECORDTYPE arg2 = (SETTRACERECORDTYPE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetTraceRecordType_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetTraceRecordType_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_SetTraceRecordType_set" "', argument " "2"" of type '" "SETTRACERECORDTYPE""'"); 
    }
  }
  if (arg1) (arg1)->SetTraceRecordType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetTraceRecordType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SETTRACERECORDTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetTraceRecordType_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetTraceRecordType_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (SETTRACERECORDTYPE) ((arg1)->SetTraceRecordType);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETTRACERECORDTYPE arg2 = (GETTRACERECORDTYPE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordType_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordType_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__TRACERECORDTYPE);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetTraceRecordType_set" "', argument " "2"" of type '" "GETTRACERECORDTYPE""'"); 
    }
  }
  if (arg1) (arg1)->GetTraceRecordType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETTRACERECORDTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordType_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordType_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETTRACERECORDTYPE) ((arg1)->GetTraceRecordType);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__TRACERECORDTYPE);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumHandles_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ENUMHANDLES arg2 = (ENUMHANDLES) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumHandles_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumHandles_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_ListInfo__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_EnumHandles_set" "', argument " "2"" of type '" "ENUMHANDLES""'"); 
    }
  }
  if (arg1) (arg1)->EnumHandles = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumHandles_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ENUMHANDLES result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumHandles_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumHandles_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ENUMHANDLES) ((arg1)->EnumHandles);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_ListInfo__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetHandleName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETHANDLENAME arg2 = (GETHANDLENAME) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetHandleName_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetHandleName_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetHandleName_set" "', argument " "2"" of type '" "GETHANDLENAME""'"); 
    }
  }
  if (arg1) (arg1)->GetHandleName = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetHandleName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETHANDLENAME result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetHandleName_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetHandleName_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETHANDLENAME) ((arg1)->GetHandleName);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumTcpConnections_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ENUMTCPCONNECTIONS arg2 = (ENUMTCPCONNECTIONS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumTcpConnections_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumTcpConnections_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_ListInfo__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_EnumTcpConnections_set" "', argument " "2"" of type '" "ENUMTCPCONNECTIONS""'"); 
    }
  }
  if (arg1) (arg1)->EnumTcpConnections = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumTcpConnections_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ENUMTCPCONNECTIONS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumTcpConnections_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumTcpConnections_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ENUMTCPCONNECTIONS) ((arg1)->EnumTcpConnections);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_ListInfo__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetDbgEvents_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETDBGEVENTS arg2 = (GETDBGEVENTS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetDbgEvents_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetDbgEvents_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f___unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetDbgEvents_set" "', argument " "2"" of type '" "GETDBGEVENTS""'"); 
    }
  }
  if (arg1) (arg1)->GetDbgEvents = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetDbgEvents_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETDBGEVENTS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetDbgEvents_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetDbgEvents_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETDBGEVENTS) ((arg1)->GetDbgEvents);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f___unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModGetParty_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODGETPARTY arg2 = (MODGETPARTY) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModGetParty_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModGetParty_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModGetParty_set" "', argument " "2"" of type '" "MODGETPARTY""'"); 
    }
  }
  if (arg1) (arg1)->ModGetParty = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModGetParty_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODGETPARTY result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModGetParty_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModGetParty_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODGETPARTY) ((arg1)->ModGetParty);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModSetParty_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODSETPARTY arg2 = (MODSETPARTY) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModSetParty_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModSetParty_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModSetParty_set" "', argument " "2"" of type '" "MODSETPARTY""'"); 
    }
  }
  if (arg1) (arg1)->ModSetParty = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModSetParty_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODSETPARTY result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModSetParty_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModSetParty_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODSETPARTY) ((arg1)->ModSetParty);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_int__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_WatchIsWatchdogTriggered_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  WATCHISWATCHDOGTRIGGERED arg2 = (WATCHISWATCHDOGTRIGGERED) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_WatchIsWatchdogTriggered_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_int__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_WatchIsWatchdogTriggered_set" "', argument " "2"" of type '" "WATCHISWATCHDOGTRIGGERED""'"); 
    }
  }
  if (arg1) (arg1)->WatchIsWatchdogTriggered = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_WatchIsWatchdogTriggered_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  WATCHISWATCHDOGTRIGGERED result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_WatchIsWatchdogTriggered_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (WATCHISWATCHDOGTRIGGERED) ((arg1)->WatchIsWatchdogTriggered);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_int__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemIsCodePage_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MEMISCODEPAGE arg2 = (MEMISCODEPAGE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemIsCodePage_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemIsCodePage_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_bool__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_MemIsCodePage_set" "', argument " "2"" of type '" "MEMISCODEPAGE""'"); 
    }
  }
  if (arg1) (arg1)->MemIsCodePage = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemIsCodePage_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMISCODEPAGE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemIsCodePage_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemIsCodePage_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MEMISCODEPAGE) ((arg1)->MemIsCodePage);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_bool__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_AnimateCommand_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ANIMATECOMMAND arg2 = (ANIMATECOMMAND) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_AnimateCommand_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_AnimateCommand_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_AnimateCommand_set" "', argument " "2"" of type '" "ANIMATECOMMAND""'"); 
    }
  }
  if (arg1) (arg1)->AnimateCommand = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_AnimateCommand_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ANIMATECOMMAND result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_AnimateCommand_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_AnimateCommand_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ANIMATECOMMAND) ((arg1)->AnimateCommand);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbgSetDebuggeeInitScript_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGSETDEBUGGEEINITSCRIPT arg2 = (DBGSETDEBUGGEEINITSCRIPT) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbgSetDebuggeeInitScript_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_DbgSetDebuggeeInitScript_set" "', argument " "2"" of type '" "DBGSETDEBUGGEEINITSCRIPT""'"); 
    }
  }
  if (arg1) (arg1)->DbgSetDebuggeeInitScript = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbgSetDebuggeeInitScript_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DBGSETDEBUGGEEINITSCRIPT result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbgSetDebuggeeInitScript_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (DBGSETDEBUGGEEINITSCRIPT) ((arg1)->DbgSetDebuggeeInitScript);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbgGetDebuggeeInitScript_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGGETDEBUGGEEINITSCRIPT arg2 = (DBGGETDEBUGGEEINITSCRIPT) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbgGetDebuggeeInitScript_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f___p_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_DbgGetDebuggeeInitScript_set" "', argument " "2"" of type '" "DBGGETDEBUGGEEINITSCRIPT""'"); 
    }
  }
  if (arg1) (arg1)->DbgGetDebuggeeInitScript = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbgGetDebuggeeInitScript_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DBGGETDEBUGGEEINITSCRIPT result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbgGetDebuggeeInitScript_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (DBGGETDEBUGGEEINITSCRIPT) ((arg1)->DbgGetDebuggeeInitScript);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f___p_char);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumWindows_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  HANDLESENUMWINDOWS arg2 = (HANDLESENUMWINDOWS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumWindows_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumWindows_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_ListInfo__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_EnumWindows_set" "', argument " "2"" of type '" "HANDLESENUMWINDOWS""'"); 
    }
  }
  if (arg1) (arg1)->EnumWindows = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumWindows_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  HANDLESENUMWINDOWS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumWindows_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumWindows_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (HANDLESENUMWINDOWS) ((arg1)->EnumWindows);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_ListInfo__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumHeaps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  HANDLESENUMHEAPS arg2 = (HANDLESENUMHEAPS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumHeaps_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumHeaps_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_ListInfo__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_EnumHeaps_set" "', argument " "2"" of type '" "HANDLESENUMHEAPS""'"); 
    }
  }
  if (arg1) (arg1)->EnumHeaps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumHeaps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  HANDLESENUMHEAPS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumHeaps_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumHeaps_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (HANDLESENUMHEAPS) ((arg1)->EnumHeaps);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_ListInfo__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ThreadGetName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  THREADGETNAME arg2 = (THREADGETNAME) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ThreadGetName_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ThreadGetName_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ThreadGetName_set" "', argument " "2"" of type '" "THREADGETNAME""'"); 
    }
  }
  if (arg1) (arg1)->ThreadGetName = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ThreadGetName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  THREADGETNAME result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ThreadGetName_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ThreadGetName_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (THREADGETNAME) ((arg1)->ThreadGetName);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_IsDepEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ISDEPENABLED arg2 = (ISDEPENABLED) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_IsDepEnabled_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_IsDepEnabled_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f___bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_IsDepEnabled_set" "', argument " "2"" of type '" "ISDEPENABLED""'"); 
    }
  }
  if (arg1) (arg1)->IsDepEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_IsDepEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ISDEPENABLED result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_IsDepEnabled_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_IsDepEnabled_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ISDEPENABLED) ((arg1)->IsDepEnabled);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f___bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCallStackEx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETCALLSTACKEX arg2 = (GETCALLSTACKEX) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCallStackEx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCallStackEx_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_DBGCALLSTACK_bool__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetCallStackEx_set" "', argument " "2"" of type '" "GETCALLSTACKEX""'"); 
    }
  }
  if (arg1) (arg1)->GetCallStackEx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCallStackEx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETCALLSTACKEX result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCallStackEx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCallStackEx_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETCALLSTACKEX) ((arg1)->GetCallStackEx);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_DBGCALLSTACK_bool__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetUserComment_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETUSERCOMMENT arg2 = (GETUSERCOMMENT) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetUserComment_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetUserComment_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_char__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetUserComment_set" "', argument " "2"" of type '" "GETUSERCOMMENT""'"); 
    }
  }
  if (arg1) (arg1)->GetUserComment = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetUserComment_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETUSERCOMMENT result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetUserComment_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetUserComment_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETUSERCOMMENT) ((arg1)->GetUserComment);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_char__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumConstants_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ENUMCONSTANTS arg2 = (ENUMCONSTANTS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumConstants_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumConstants_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_ListInfo__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_EnumConstants_set" "', argument " "2"" of type '" "ENUMCONSTANTS""'"); 
    }
  }
  if (arg1) (arg1)->EnumConstants = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumConstants_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ENUMCONSTANTS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumConstants_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumConstants_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ENUMCONSTANTS) ((arg1)->EnumConstants);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_ListInfo__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumErrorCodes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ENUMCONSTANTS arg2 = (ENUMCONSTANTS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumErrorCodes_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumErrorCodes_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_ListInfo__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_EnumErrorCodes_set" "', argument " "2"" of type '" "ENUMCONSTANTS""'"); 
    }
  }
  if (arg1) (arg1)->EnumErrorCodes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumErrorCodes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ENUMCONSTANTS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumErrorCodes_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumErrorCodes_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ENUMCONSTANTS) ((arg1)->EnumErrorCodes);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_ListInfo__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumExceptions_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ENUMCONSTANTS arg2 = (ENUMCONSTANTS) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumExceptions_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumExceptions_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_ListInfo__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_EnumExceptions_set" "', argument " "2"" of type '" "ENUMCONSTANTS""'"); 
    }
  }
  if (arg1) (arg1)->EnumExceptions = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumExceptions_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ENUMCONSTANTS result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumExceptions_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumExceptions_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (ENUMCONSTANTS) ((arg1)->EnumExceptions);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_ListInfo__void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemBpSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MEMBPSIZE arg2 = (MEMBPSIZE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemBpSize_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemBpSize_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_MemBpSize_set" "', argument " "2"" of type '" "MEMBPSIZE""'"); 
    }
  }
  if (arg1) (arg1)->MemBpSize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemBpSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MEMBPSIZE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemBpSize_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemBpSize_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MEMBPSIZE) ((arg1)->MemBpSize);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationsFromAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODRELOCATIONSFROMADDR arg2 = (MODRELOCATIONSFROMADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationsFromAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationsFromAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_ListInfo__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModRelocationsFromAddr_set" "', argument " "2"" of type '" "MODRELOCATIONSFROMADDR""'"); 
    }
  }
  if (arg1) (arg1)->ModRelocationsFromAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationsFromAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODRELOCATIONSFROMADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationsFromAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationsFromAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODRELOCATIONSFROMADDR) ((arg1)->ModRelocationsFromAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_ListInfo__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationAtAddr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODRELOCATIONATADDR arg2 = (MODRELOCATIONATADDR) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationAtAddr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationAtAddr_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModRelocationAtAddr_set" "', argument " "2"" of type '" "MODRELOCATIONATADDR""'"); 
    }
  }
  if (arg1) (arg1)->ModRelocationAtAddr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationAtAddr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODRELOCATIONATADDR result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationAtAddr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationAtAddr_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODRELOCATIONATADDR) ((arg1)->ModRelocationAtAddr);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationsInRange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  MODRELOCATIONSINRANGE arg2 = (MODRELOCATIONSINRANGE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationsInRange_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationsInRange_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_ModRelocationsInRange_set" "', argument " "2"" of type '" "MODRELOCATIONSINRANGE""'"); 
    }
  }
  if (arg1) (arg1)->ModRelocationsInRange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationsInRange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  MODRELOCATIONSINRANGE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationsInRange_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationsInRange_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (MODRELOCATIONSINRANGE) ((arg1)->ModRelocationsInRange);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbGetHash_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGETHASH arg2 = (DBGETHASH) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbGetHash_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbGetHash_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f___unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_DbGetHash_set" "', argument " "2"" of type '" "DBGETHASH""'"); 
    }
  }
  if (arg1) (arg1)->DbGetHash = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbGetHash_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  DBGETHASH result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbGetHash_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbGetHash_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (DBGETHASH) ((arg1)->DbGetHash);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f___unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SymAutoComplete_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  SYMAUTOCOMPLETE arg2 = (SYMAUTOCOMPLETE) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SymAutoComplete_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SymAutoComplete_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_q_const__char_p_p_char_int__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_SymAutoComplete_set" "', argument " "2"" of type '" "SYMAUTOCOMPLETE""'"); 
    }
  }
  if (arg1) (arg1)->SymAutoComplete = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SymAutoComplete_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SYMAUTOCOMPLETE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SymAutoComplete_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SymAutoComplete_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (SYMAUTOCOMPLETE) ((arg1)->SymAutoComplete);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_q_const__char_p_p_char_int__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_RefreshModuleList_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  REFRESHMODULELIST arg2 = (REFRESHMODULELIST) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_RefreshModuleList_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_RefreshModuleList_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f___void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_RefreshModuleList_set" "', argument " "2"" of type '" "REFRESHMODULELIST""'"); 
    }
  }
  if (arg1) (arg1)->RefreshModuleList = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_RefreshModuleList_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  REFRESHMODULELIST result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_RefreshModuleList_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_RefreshModuleList_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (REFRESHMODULELIST) ((arg1)->RefreshModuleList);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f___void);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetAddrFromLineEx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  GETADDRFROMLINEEX arg2 = (GETADDRFROMLINEEX) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetAddrFromLineEx_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetAddrFromLineEx_set" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "DBGFUNCTIONS_GetAddrFromLineEx_set" "', argument " "2"" of type '" "GETADDRFROMLINEEX""'"); 
    }
  }
  if (arg1) (arg1)->GetAddrFromLineEx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetAddrFromLineEx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  GETADDRFROMLINEEX result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetAddrFromLineEx_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetAddrFromLineEx_get" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (GETADDRFROMLINEEX) ((arg1)->GetAddrFromLineEx);
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_AssembleAtEx_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  Py_ssize_t size4 = 0 ;
  void *buf4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_AssembleAtEx_",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_AssembleAtEx_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_AssembleAtEx_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_AssembleAtEx_" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  {
    res4 = PyObject_AsWriteBuffer(obj3, &buf4, &size4);
    if (res4<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_AssembleAtEx_" "', argument " "4"" of type '" "(char* error, SIZE)""'");
    }
    arg4 = (char *) buf4;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "DBGFUNCTIONS_AssembleAtEx_" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)DBGFUNCTIONS__AssembleAtEx_(arg1,arg2,(char const *)arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SectionFromAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SectionFromAddr_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SectionFromAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_SectionFromAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_SectionFromAddr_" "', argument " "3"" of type '" "(char* section, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  result = (bool)DBGFUNCTIONS__SectionFromAddr_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModNameFromAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModNameFromAddr_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModNameFromAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModNameFromAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_ModNameFromAddr_" "', argument " "3"" of type '" "(char* modname, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DBGFUNCTIONS_ModNameFromAddr_" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  result = (bool)DBGFUNCTIONS__ModNameFromAddr_(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModBaseFromAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModBaseFromAddr_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModBaseFromAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModBaseFromAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (duint)DBGFUNCTIONS__ModBaseFromAddr_(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModBaseFromName_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModBaseFromName_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModBaseFromName_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_ModBaseFromName_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (duint)DBGFUNCTIONS__ModBaseFromName_(arg1,(char const *)arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModSizeFromAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModSizeFromAddr_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModSizeFromAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModSizeFromAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (duint)DBGFUNCTIONS__ModSizeFromAddr_(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_Assemble_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  int *arg4 = (int *) 0 ;
  char *arg5 = (char *) 0 ;
  char *arg6 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int res5 ;
  char *buf5 = 0 ;
  int alloc5 = 0 ;
  int res6 ;
  Py_ssize_t size6 = 0 ;
  void *buf6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_Assemble_",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_Assemble_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_Assemble_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_Assemble_" "', argument " "3"" of type '" "unsigned char *""'"); 
  }
  arg3 = reinterpret_cast< unsigned char * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_Assemble_" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  res5 = SWIG_AsCharPtrAndSize(obj4, &buf5, NULL, &alloc5);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DBGFUNCTIONS_Assemble_" "', argument " "5"" of type '" "char const *""'");
  }
  arg5 = reinterpret_cast< char * >(buf5);
  {
    res6 = PyObject_AsWriteBuffer(obj5, &buf6, &size6);
    if (res6<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "DBGFUNCTIONS_Assemble_" "', argument " "6"" of type '" "(char* error, SIZE)""'");
    }
    arg6 = (char *) buf6;
  }
  result = (bool)DBGFUNCTIONS__Assemble_(arg1,arg2,arg3,arg4,(char const *)arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return resultobj;
fail:
  if (alloc5 == SWIG_NEWOBJ) delete[] buf5;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchGet_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchGet_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchGet_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_PatchGet_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DBGFUNCTIONS__PatchGet_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchInRange_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  duint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchInRange_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchInRange_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_PatchInRange_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_PatchInRange_" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  result = (bool)DBGFUNCTIONS__PatchInRange_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemPatch_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ;
  duint arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  unsigned long long val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemPatch_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemPatch_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_MemPatch_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_MemPatch_" "', argument " "3"" of type '" "(const unsigned char* src, SIZE)""'");
    }
    arg3 = (unsigned char *) buf3;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DBGFUNCTIONS_MemPatch_" "', argument " "4"" of type '" "duint""'");
  } 
  arg4 = static_cast< duint >(val4);
  result = (bool)DBGFUNCTIONS__MemPatch_(arg1,arg2,(unsigned char const *)arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchRestoreRange_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  duint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchRestoreRange_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchRestoreRange_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_PatchRestoreRange_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_PatchRestoreRange_" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  DBGFUNCTIONS__PatchRestoreRange_(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchEnum_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGPATCHINFO *arg2 = (DBGPATCHINFO *) 0 ;
  size_t *arg3 = (size_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchEnum_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchEnum_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_PatchEnum_" "', argument " "2"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg2 = reinterpret_cast< DBGPATCHINFO * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_PatchEnum_" "', argument " "3"" of type '" "size_t *""'"); 
  }
  arg3 = reinterpret_cast< size_t * >(argp3);
  result = (bool)DBGFUNCTIONS__PatchEnum_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchRestore_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchRestore_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchRestore_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_PatchRestore_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)DBGFUNCTIONS__PatchRestore_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchFile_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGPATCHINFO *arg2 = (DBGPATCHINFO *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  Py_ssize_t size5 = 0 ;
  void *buf5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchFile_",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchFile_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_PatchFile_" "', argument " "2"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg2 = reinterpret_cast< DBGPATCHINFO * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_PatchFile_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_PatchFile_" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  {
    res5 = PyObject_AsWriteBuffer(obj4, &buf5, &size5);
    if (res5<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DBGFUNCTIONS_PatchFile_" "', argument " "5"" of type '" "(char* error, SIZE)""'");
    }
    arg5 = (char *) buf5;
  }
  result = (int)DBGFUNCTIONS__PatchFile_(arg1,arg2,arg3,(char const *)arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModPathFromAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModPathFromAddr_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModPathFromAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModPathFromAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_ModPathFromAddr_" "', argument " "3"" of type '" "(char* path, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DBGFUNCTIONS_ModPathFromAddr_" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)DBGFUNCTIONS__ModPathFromAddr_(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModPathFromName_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModPathFromName_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModPathFromName_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_ModPathFromName_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_ModPathFromName_" "', argument " "3"" of type '" "(char* path, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DBGFUNCTIONS_ModPathFromName_" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)DBGFUNCTIONS__ModPathFromName_(arg1,(char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DisasmFast_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  duint arg3 ;
  BASIC_INSTRUCTION_INFO *arg4 = (BASIC_INSTRUCTION_INFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void *buf2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DisasmFast_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DisasmFast_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    res2 = PyObject_AsWriteBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_DisasmFast_" "', argument " "2"" of type '" "(const unsigned char* data, SIZE)""'");
    }
    arg2 = (unsigned char *) buf2;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_DisasmFast_" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_BASIC_INSTRUCTION_INFO, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_DisasmFast_" "', argument " "4"" of type '" "BASIC_INSTRUCTION_INFO *""'"); 
  }
  arg4 = reinterpret_cast< BASIC_INSTRUCTION_INFO * >(argp4);
  result = (bool)DBGFUNCTIONS__DisasmFast_(arg1,(unsigned char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemUpdateMap_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemUpdateMap_",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemUpdateMap_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  DBGFUNCTIONS__MemUpdateMap_(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCallStack_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGCALLSTACK *arg2 = (DBGCALLSTACK *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCallStack_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCallStack_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DBGCALLSTACK, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetCallStack_" "', argument " "2"" of type '" "DBGCALLSTACK *""'"); 
  }
  arg2 = reinterpret_cast< DBGCALLSTACK * >(argp2);
  DBGFUNCTIONS__GetCallStack_(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SymbolDownloadAllSymbols_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SymbolDownloadAllSymbols_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_SymbolDownloadAllSymbols_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  DBGFUNCTIONS__SymbolDownloadAllSymbols_(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetJit_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetJit_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetJit_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetJit_" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_GetJit_" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)DBGFUNCTIONS__GetJit_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetJitAuto_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  bool *arg2 = (bool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetJitAuto_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetJitAuto_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_bool, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetJitAuto_" "', argument " "2"" of type '" "bool *""'"); 
  }
  arg2 = reinterpret_cast< bool * >(argp2);
  result = (bool)DBGFUNCTIONS__GetJitAuto_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetDefJit_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetDefJit_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetDefJit_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetDefJit_" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DBGFUNCTIONS__GetDefJit_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetProcessList_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGPROCESSINFO **arg2 = (DBGPROCESSINFO **) 0 ;
  int *arg3 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetProcessList_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetProcessList_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_DBGPROCESSINFO, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetProcessList_" "', argument " "2"" of type '" "DBGPROCESSINFO **""'"); 
  }
  arg2 = reinterpret_cast< DBGPROCESSINFO ** >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_GetProcessList_" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  result = (bool)DBGFUNCTIONS__GetProcessList_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetPageRights_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetPageRights_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetPageRights_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetPageRights_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_GetPageRights_" "', argument " "3"" of type '" "(char* rights, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  result = (bool)DBGFUNCTIONS__GetPageRights_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetPageRights_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetPageRights_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetPageRights_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_SetPageRights_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_SetPageRights_" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (bool)DBGFUNCTIONS__SetPageRights_(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PageRightsToString_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DWORD arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PageRightsToString_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PageRightsToString_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_PageRightsToString_" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_PageRightsToString_" "', argument " "3"" of type '" "(char* rights, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  result = (bool)DBGFUNCTIONS__PageRightsToString_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_IsProcessElevated_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_IsProcessElevated_",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_IsProcessElevated_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (bool)DBGFUNCTIONS__IsProcessElevated_(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCmdline_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t *arg3 = (size_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void *buf2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCmdline_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCmdline_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  {
    res2 = PyObject_AsWriteBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetCmdline_" "', argument " "2"" of type '" "(char* cmdline, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_size_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_GetCmdline_" "', argument " "3"" of type '" "size_t *""'"); 
  }
  arg3 = reinterpret_cast< size_t * >(argp3);
  result = (bool)DBGFUNCTIONS__GetCmdline_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetCmdline_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetCmdline_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetCmdline_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_SetCmdline_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DBGFUNCTIONS__SetCmdline_(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_FileOffsetToVa_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  duint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_FileOffsetToVa_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_FileOffsetToVa_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_FileOffsetToVa_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_FileOffsetToVa_" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  result = (duint)DBGFUNCTIONS__FileOffsetToVa_(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_VaToFileOffset_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_VaToFileOffset_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_VaToFileOffset_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_VaToFileOffset_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (duint)DBGFUNCTIONS__VaToFileOffset_(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetAddrFromLine_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  duint *arg4 = (duint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetAddrFromLine_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetAddrFromLine_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetAddrFromLine_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_GetAddrFromLine_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_GetAddrFromLine_" "', argument " "4"" of type '" "duint *""'"); 
  }
  arg4 = reinterpret_cast< duint * >(argp4);
  result = (duint)DBGFUNCTIONS__GetAddrFromLine_(arg1,(char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetSourceFromAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  int *arg4 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetSourceFromAddr_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetSourceFromAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetSourceFromAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_GetSourceFromAddr_" "', argument " "3"" of type '" "(char* szSourceFile, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_GetSourceFromAddr_" "', argument " "4"" of type '" "int *""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  result = (bool)DBGFUNCTIONS__GetSourceFromAddr_(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ValFromString_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  duint *arg3 = (duint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ValFromString_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ValFromString_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_ValFromString_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_ValFromString_" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  result = (bool)DBGFUNCTIONS__ValFromString_(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_PatchGetEx_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  DBGPATCHINFO *arg3 = (DBGPATCHINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_PatchGetEx_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_PatchGetEx_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_PatchGetEx_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_DBGPATCHINFO, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_PatchGetEx_" "', argument " "3"" of type '" "DBGPATCHINFO *""'"); 
  }
  arg3 = reinterpret_cast< DBGPATCHINFO * >(argp3);
  result = (bool)DBGFUNCTIONS__PatchGetEx_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetBridgeBp_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  BPXTYPE arg2 ;
  duint arg3 ;
  BRIDGEBP *arg4 = (BRIDGEBP *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetBridgeBp_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetBridgeBp_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetBridgeBp_" "', argument " "2"" of type '" "BPXTYPE""'");
  } 
  arg2 = static_cast< BPXTYPE >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_GetBridgeBp_" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_BRIDGEBP, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_GetBridgeBp_" "', argument " "4"" of type '" "BRIDGEBP *""'"); 
  }
  arg4 = reinterpret_cast< BRIDGEBP * >(argp4);
  result = (bool)DBGFUNCTIONS__GetBridgeBp_(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_StringFormatInline_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 ;
  Py_ssize_t size4 = 0 ;
  void *buf4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_StringFormatInline_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_StringFormatInline_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_StringFormatInline_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_StringFormatInline_" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  {
    res4 = PyObject_AsWriteBuffer(obj3, &buf4, &size4);
    if (res4<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_StringFormatInline_" "', argument " "4"" of type '" "(char* result, SIZE)""'");
    }
    arg4 = (char *) buf4;
  }
  result = (bool)DBGFUNCTIONS__StringFormatInline_(arg1,(char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetMnemonicBrief_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  char *arg4 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 ;
  Py_ssize_t size4 = 0 ;
  void *buf4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetMnemonicBrief_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetMnemonicBrief_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetMnemonicBrief_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_GetMnemonicBrief_" "', argument " "3"" of type '" "size_t""'");
  } 
  arg3 = static_cast< size_t >(val3);
  {
    res4 = PyObject_AsWriteBuffer(obj3, &buf4, &size4);
    if (res4<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_GetMnemonicBrief_" "', argument " "4"" of type '" "(char* result, SIZE)""'");
    }
    arg4 = (char *) buf4;
  }
  DBGFUNCTIONS__GetMnemonicBrief_(arg1,(char const *)arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordHitCount_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordHitCount_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordHitCount_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetTraceRecordHitCount_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (unsigned int)DBGFUNCTIONS__GetTraceRecordHitCount_(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordByteType_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  TRACERECORDBYTETYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordByteType_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordByteType_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetTraceRecordByteType_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (TRACERECORDBYTETYPE)DBGFUNCTIONS__GetTraceRecordByteType_(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SetTraceRecordType_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  TRACERECORDTYPE arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SetTraceRecordType_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SetTraceRecordType_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_SetTraceRecordType_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_SetTraceRecordType_" "', argument " "3"" of type '" "TRACERECORDTYPE""'");
  } 
  arg3 = static_cast< TRACERECORDTYPE >(val3);
  result = (bool)DBGFUNCTIONS__SetTraceRecordType_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetTraceRecordType_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  TRACERECORDTYPE result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetTraceRecordType_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetTraceRecordType_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetTraceRecordType_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (TRACERECORDTYPE)DBGFUNCTIONS__GetTraceRecordType_(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumHandles_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumHandles_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumHandles_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_EnumHandles_" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  result = (bool)DBGFUNCTIONS__EnumHandles_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetHandleName_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  size_t arg4 ;
  char *arg5 = (char *) 0 ;
  size_t arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  size_t val4 ;
  int ecode4 = 0 ;
  int res5 ;
  Py_ssize_t size5 = 0 ;
  void *buf5 = 0 ;
  size_t val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetHandleName_",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetHandleName_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetHandleName_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_GetHandleName_" "', argument " "3"" of type '" "(char* DBGFUNCTIONS_GetHandleName_, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  ecode4 = SWIG_AsVal_size_t(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DBGFUNCTIONS_GetHandleName_" "', argument " "4"" of type '" "size_t""'");
  } 
  arg4 = static_cast< size_t >(val4);
  {
    res5 = PyObject_AsWriteBuffer(obj4, &buf5, &size5);
    if (res5<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "DBGFUNCTIONS_GetHandleName_" "', argument " "5"" of type '" "(char* typeName, SIZE)""'");
    }
    arg5 = (char *) buf5;
  }
  ecode6 = SWIG_AsVal_size_t(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "DBGFUNCTIONS_GetHandleName_" "', argument " "6"" of type '" "size_t""'");
  } 
  arg6 = static_cast< size_t >(val6);
  result = (bool)DBGFUNCTIONS__GetHandleName_(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumTcpConnections_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumTcpConnections_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumTcpConnections_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_EnumTcpConnections_" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  result = (bool)DBGFUNCTIONS__EnumTcpConnections_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetDbgEvents_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetDbgEvents_",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetDbgEvents_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (duint)DBGFUNCTIONS__GetDbgEvents_(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModGetParty_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModGetParty_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModGetParty_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModGetParty_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (int)DBGFUNCTIONS__ModGetParty_(arg1,arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModSetParty_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModSetParty_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModSetParty_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModSetParty_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_ModSetParty_" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  DBGFUNCTIONS__ModSetParty_(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_WatchIsWatchdogTriggered_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_WatchIsWatchdogTriggered_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_WatchIsWatchdogTriggered_" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)DBGFUNCTIONS__WatchIsWatchdogTriggered_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemIsCodePage_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemIsCodePage_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemIsCodePage_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_MemIsCodePage_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_MemIsCodePage_" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)DBGFUNCTIONS__MemIsCodePage_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_AnimateCommand_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_AnimateCommand_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_AnimateCommand_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_AnimateCommand_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)DBGFUNCTIONS__AnimateCommand_(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbgSetDebuggeeInitScript_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbgSetDebuggeeInitScript_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_DbgSetDebuggeeInitScript_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  DBGFUNCTIONS__DbgSetDebuggeeInitScript_(arg1,(char const *)arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbgGetDebuggeeInitScript_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbgGetDebuggeeInitScript_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (char *)DBGFUNCTIONS__DbgGetDebuggeeInitScript_(arg1);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumWindows_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumWindows_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumWindows_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_EnumWindows_" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  result = (bool)DBGFUNCTIONS__EnumWindows_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumHeaps_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumHeaps_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumHeaps_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_EnumHeaps_" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  result = (bool)DBGFUNCTIONS__EnumHeaps_(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ThreadGetName_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DWORD arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ThreadGetName_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ThreadGetName_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ThreadGetName_" "', argument " "2"" of type '" "DWORD""'");
  } 
  arg2 = static_cast< DWORD >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_ThreadGetName_" "', argument " "3"" of type '" "(char* DBGFUNCTIONS_ThreadGetName_, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  result = (bool)DBGFUNCTIONS__ThreadGetName_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_IsDepEnabled_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_IsDepEnabled_",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_IsDepEnabled_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (bool)DBGFUNCTIONS__IsDepEnabled_(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetCallStackEx_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  DBGCALLSTACK *arg2 = (DBGCALLSTACK *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetCallStackEx_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetCallStackEx_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_DBGCALLSTACK, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_GetCallStackEx_" "', argument " "2"" of type '" "DBGCALLSTACK *""'"); 
  }
  arg2 = reinterpret_cast< DBGCALLSTACK * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_GetCallStackEx_" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  DBGFUNCTIONS__GetCallStackEx_(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetUserComment_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  Py_ssize_t size3 = 0 ;
  void *buf3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetUserComment_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetUserComment_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetUserComment_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  {
    res3 = PyObject_AsWriteBuffer(obj2, &buf3, &size3);
    if (res3<0) {
      PyErr_Clear();
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_GetUserComment_" "', argument " "3"" of type '" "(char* comment, SIZE)""'");
    }
    arg3 = (char *) buf3;
  }
  result = (bool)DBGFUNCTIONS__GetUserComment_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumConstants_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumConstants_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumConstants_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_EnumConstants_" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  DBGFUNCTIONS__EnumConstants_(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumErrorCodes_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumErrorCodes_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumErrorCodes_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_EnumErrorCodes_" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  DBGFUNCTIONS__EnumErrorCodes_(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_EnumExceptions_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_EnumExceptions_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_EnumExceptions_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_EnumExceptions_" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  DBGFUNCTIONS__EnumExceptions_(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_MemBpSize_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_MemBpSize_",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_MemBpSize_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_MemBpSize_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (duint)DBGFUNCTIONS__MemBpSize_(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationsFromAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  ListInfo *arg3 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationsFromAddr_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationsFromAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModRelocationsFromAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_ModRelocationsFromAddr_" "', argument " "3"" of type '" "ListInfo *""'"); 
  }
  arg3 = reinterpret_cast< ListInfo * >(argp3);
  result = (bool)DBGFUNCTIONS__ModRelocationsFromAddr_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationAtAddr_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  DBGRELOCATIONINFO *arg3 = (DBGRELOCATIONINFO *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationAtAddr_",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationAtAddr_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModRelocationAtAddr_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_DBGRELOCATIONINFO, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_ModRelocationAtAddr_" "', argument " "3"" of type '" "DBGRELOCATIONINFO *""'"); 
  }
  arg3 = reinterpret_cast< DBGRELOCATIONINFO * >(argp3);
  result = (bool)DBGFUNCTIONS__ModRelocationAtAddr_(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_ModRelocationsInRange_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  duint arg3 ;
  ListInfo *arg4 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_ModRelocationsInRange_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_ModRelocationsInRange_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_ModRelocationsInRange_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DBGFUNCTIONS_ModRelocationsInRange_" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DBGFUNCTIONS_ModRelocationsInRange_" "', argument " "4"" of type '" "ListInfo *""'"); 
  }
  arg4 = reinterpret_cast< ListInfo * >(argp4);
  result = (bool)DBGFUNCTIONS__ModRelocationsInRange_(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_DbGetHash_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_DbGetHash_",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_DbGetHash_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  result = (duint)DBGFUNCTIONS__DbGetHash_(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_SymAutoComplete_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_SymAutoComplete_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_SymAutoComplete_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DBGFUNCTIONS_SymAutoComplete_" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_p_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_SymAutoComplete_" "', argument " "3"" of type '" "char **""'"); 
  }
  arg3 = reinterpret_cast< char ** >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DBGFUNCTIONS_SymAutoComplete_" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (int)DBGFUNCTIONS__SymAutoComplete_(arg1,(char const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_RefreshModuleList_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_RefreshModuleList_",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_RefreshModuleList_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  DBGFUNCTIONS__RefreshModuleList_(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_DBGFUNCTIONS_GetAddrFromLineEx_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"DBGFUNCTIONS_GetAddrFromLineEx_",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DBGFUNCTIONS_GetAddrFromLineEx_" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DBGFUNCTIONS_GetAddrFromLineEx_" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DBGFUNCTIONS_GetAddrFromLineEx_" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "DBGFUNCTIONS_GetAddrFromLineEx_" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (duint)DBGFUNCTIONS__GetAddrFromLineEx_(arg1,arg2,(char const *)arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_DBGFUNCTIONS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_DBGFUNCTIONS",0,0)) SWIG_fail;
  result = (DBGFUNCTIONS_ *)new DBGFUNCTIONS_();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_DBGFUNCTIONS_, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_DBGFUNCTIONS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  DBGFUNCTIONS_ *arg1 = (DBGFUNCTIONS_ *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_DBGFUNCTIONS",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_DBGFUNCTIONS_, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_DBGFUNCTIONS" "', argument " "1"" of type '" "DBGFUNCTIONS_ *""'"); 
  }
  arg1 = reinterpret_cast< DBGFUNCTIONS_ * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *DBGFUNCTIONS_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_DBGFUNCTIONS_, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap__plugin_logprintf__varargs__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *varargs) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_plugin_logprintf",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_plugin_logprintf" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  _plugin_logprintf((char const *)arg1,arg2);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap__plugin_logprintf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj;
  PyObject *varargs;
  PyObject *newargs;
  
  newargs = PyTuple_GetSlice(args,0,1);
  varargs = PyTuple_GetSlice(args,1,PyTuple_Size(args));
  resultobj = _wrap__plugin_logprintf__varargs__(NULL,newargs,varargs);
  Py_XDECREF(newargs);
  Py_XDECREF(varargs);
  return resultobj;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_mod_set" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArgumentInfo_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_mod_get" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_rvaStart_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_rvaStart_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_rvaStart_set" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArgumentInfo_rvaStart_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rvaStart = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_rvaStart_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_rvaStart_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_rvaStart_get" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  result = (duint) ((arg1)->rvaStart);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_rvaEnd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_rvaEnd_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_rvaEnd_set" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArgumentInfo_rvaEnd_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rvaEnd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_rvaEnd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_rvaEnd_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_rvaEnd_get" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  result = (duint) ((arg1)->rvaEnd);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_manual_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_manual_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_manual_set" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArgumentInfo_manual_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->manual = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_manual_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_manual_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_manual_get" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  result = (bool) ((arg1)->manual);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_instructioncount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_instructioncount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_instructioncount_set" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArgumentInfo_instructioncount_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->instructioncount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfo_instructioncount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfo_instructioncount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfo_instructioncount_get" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  result = (duint) ((arg1)->instructioncount);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArgumentInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ArgumentInfo",0,0)) SWIG_fail;
  result = (Script::Argument::ArgumentInfo *)new Script::Argument::ArgumentInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Argument__ArgumentInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArgumentInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ArgumentInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArgumentInfo" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArgumentInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Argument__ArgumentInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Argument_Add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  bool arg3 ;
  duint arg4 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long long val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Add",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Add" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Argument_Add" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Argument_Add" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Argument_Add" "', argument " "4"" of type '" "duint""'");
  } 
  arg4 = static_cast< duint >(val4);
  result = (bool)Script::Argument::Add(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Add",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Add" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Argument_Add" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Argument_Add" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)Script::Argument::Add(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Add(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Argument_Add__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Argument_Add__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Argument_Add'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Argument::Add(duint,duint,bool,duint)\n"
    "    Script::Argument::Add(duint,duint,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Argument_AddByArgumentInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_AddByArgumentInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Argument_AddByArgumentInfo" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo const *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  result = (bool)Script::Argument::Add((Script::Argument::ArgumentInfo const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  duint *arg3 = (duint *) 0 ;
  duint *arg4 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Get",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Argument_Get" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Argument_Get" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Argument_Get" "', argument " "4"" of type '" "duint *""'"); 
  }
  arg4 = reinterpret_cast< duint * >(argp4);
  result = (bool)Script::Argument::Get(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  duint *arg3 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Get",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Argument_Get" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Argument_Get" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  result = (bool)Script::Argument::Get(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Get__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Get",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Argument_Get" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Argument::Get(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Get__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Get",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Argument::Get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Argument_Get__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Argument_Get__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Argument_Get__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Argument_Get__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Argument_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Argument::Get(duint,duint *,duint *,duint *)\n"
    "    Script::Argument::Get(duint,duint *,duint *)\n"
    "    Script::Argument::Get(duint,duint *)\n"
    "    Script::Argument::Get(duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Argument_GetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  Script::Argument::ArgumentInfo *arg2 = (Script::Argument::ArgumentInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_GetInfo",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_GetInfo" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Argument_GetInfo" "', argument " "2"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg2 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp2);
  result = (bool)Script::Argument::GetInfo(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Overlaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Overlaps",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Overlaps" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Argument_Overlaps" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)Script::Argument::Overlaps(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Delete",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_Delete" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Argument::Delete(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_DeleteRange__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_DeleteRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Argument_DeleteRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Argument_DeleteRange" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  Script::Argument::DeleteRange(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_DeleteRange__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_DeleteRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Argument_DeleteRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Argument_DeleteRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  Script::Argument::DeleteRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_DeleteRange(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Argument_DeleteRange__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Argument_DeleteRange__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Argument_DeleteRange'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Argument::DeleteRange(duint,duint,bool)\n"
    "    Script::Argument::DeleteRange(duint,duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Argument_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_Clear",0,0)) SWIG_fail;
  Script::Argument::Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Argument_GetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Argument_GetList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Argument_GetList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Argument::GetList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Assembler_Assemble(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  int *arg3 = (int *) 0 ;
  char *arg4 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Assembler_Assemble",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Assembler_Assemble" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Assembler_Assemble" "', argument " "2"" of type '" "(unsigned char* dest, SIZE)""'");
    }
    arg2 = (unsigned char *) buf2;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Assembler_Assemble" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Assembler_Assemble" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)Script::Assembler::Assemble(arg1,arg2,arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Assembler_AssembleEx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  int *arg3 = (int *) 0 ;
  char *arg4 = (char *) 0 ;
  char *arg5 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  int res5 ;
  Py_ssize_t size5 = 0 ;
  void const *buf5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Assembler_AssembleEx",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Assembler_AssembleEx" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Assembler_AssembleEx" "', argument " "2"" of type '" "(unsigned char* dest, SIZE)""'");
    }
    arg2 = (unsigned char *) buf2;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Assembler_AssembleEx" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Assembler_AssembleEx" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  {
    res5 = PyObject_AsReadBuffer(obj4, &buf5, &size5);
    if (res5<0) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Assembler_AssembleEx" "', argument " "5"" of type '" "(char* error, SIZE)""'");
    }
    arg5 = (char *) buf5;
  }
  result = (bool)Script::Assembler::AssembleEx(arg1,arg2,arg3,(char const *)arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Assembler_AssembleMem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Assembler_AssembleMem",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Assembler_AssembleMem" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Assembler_AssembleMem" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)Script::Assembler::AssembleMem(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Assembler_AssembleMemEx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  int *arg3 = (int *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int res4 ;
  Py_ssize_t size4 = 0 ;
  void const *buf4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Assembler_AssembleMemEx",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Assembler_AssembleMemEx" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Assembler_AssembleMemEx" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Assembler_AssembleMemEx" "', argument " "3"" of type '" "int *""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  {
    res4 = PyObject_AsReadBuffer(obj3, &buf4, &size4);
    if (res4<0) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Assembler_AssembleMemEx" "', argument " "4"" of type '" "(char* error, SIZE)""'");
    }
    arg4 = (char *) buf4;
  }
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Assembler_AssembleMemEx" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  result = (bool)Script::Assembler::AssembleMemEx(arg1,(char const *)arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfo_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfo_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfo_mod_set" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BookmarkInfo_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfo_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfo_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfo_mod_get" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfo_rva_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfo_rva_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfo_rva_set" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BookmarkInfo_rva_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rva = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfo_rva_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfo_rva_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfo_rva_get" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  result = (duint) ((arg1)->rva);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfo_manual_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfo_manual_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfo_manual_set" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BookmarkInfo_manual_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->manual = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfo_manual_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfo_manual_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfo_manual_get" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  result = (bool) ((arg1)->manual);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BookmarkInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_BookmarkInfo",0,0)) SWIG_fail;
  result = (Script::Bookmark::BookmarkInfo *)new Script::Bookmark::BookmarkInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Bookmark__BookmarkInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BookmarkInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_BookmarkInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BookmarkInfo" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BookmarkInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Bookmark__BookmarkInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Bookmark_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_Set",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Bookmark_Set" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bookmark_Set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)Script::Bookmark::Set(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_Set",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Bookmark_Set" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Bookmark::Set(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Bookmark_Set__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Bookmark_Set__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Bookmark_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Bookmark::Set(duint,bool)\n"
    "    Script::Bookmark::Set(duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Bookmark_SetByBookmarkInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_SetByBookmarkInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bookmark_SetByBookmarkInfo" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo const *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  result = (bool)Script::Bookmark::Set((Script::Bookmark::BookmarkInfo const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_Get",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Bookmark_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Bookmark::Get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_GetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  Script::Bookmark::BookmarkInfo *arg2 = (Script::Bookmark::BookmarkInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_GetInfo",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Bookmark_GetInfo" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Bookmark_GetInfo" "', argument " "2"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg2 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp2);
  result = (bool)Script::Bookmark::GetInfo(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_Delete",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Bookmark_Delete" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Bookmark::Delete(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_DeleteRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Bookmark_DeleteRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Bookmark_DeleteRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  Script::Bookmark::DeleteRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_Clear",0,0)) SWIG_fail;
  Script::Bookmark::Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Bookmark_GetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Bookmark_GetList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Bookmark_GetList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Bookmark::GetList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_mod_set" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CommentInfo_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_mod_get" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_rva_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_rva_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_rva_set" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommentInfo_rva_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rva = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_rva_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_rva_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_rva_get" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  result = (duint) ((arg1)->rva);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_text_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_text_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_text_set" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CommentInfo_text_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->text,arg2,256*sizeof(char));
  else memset(arg1->text,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_text_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_text_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_text_get" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  result = (char *)(char *) ((arg1)->text);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_manual_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_manual_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_manual_set" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommentInfo_manual_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->manual = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfo_manual_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfo_manual_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfo_manual_get" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  result = (bool) ((arg1)->manual);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CommentInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_CommentInfo",0,0)) SWIG_fail;
  result = (Script::Comment::CommentInfo *)new Script::Comment::CommentInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Comment__CommentInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CommentInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_CommentInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CommentInfo" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CommentInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Comment__CommentInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Comment_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Comment_Set" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Comment_Set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Comment_Set" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)Script::Comment::Set(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_Set",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Comment_Set" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Comment_Set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)Script::Comment::Set(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Comment_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Comment_Set__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Comment_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Comment::Set(duint,char const *,bool)\n"
    "    Script::Comment::Set(duint,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Comment_ByCommentInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_ByCommentInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comment_ByCommentInfo" "', argument " "1"" of type '" "Script::Comment::CommentInfo const *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  result = (bool)Script::Comment::Set((Script::Comment::CommentInfo const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_Get",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Comment_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Comment_Get" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)Script::Comment::Get(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_GetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  Script::Comment::CommentInfo *arg2 = (Script::Comment::CommentInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_GetInfo",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Comment_GetInfo" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Comment_GetInfo" "', argument " "2"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg2 = reinterpret_cast< Script::Comment::CommentInfo * >(argp2);
  result = (bool)Script::Comment::GetInfo(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_Delete",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Comment_Delete" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Comment::Delete(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_DeleteRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Comment_DeleteRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Comment_DeleteRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  Script::Comment::DeleteRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_Clear",0,0)) SWIG_fail;
  Script::Comment::Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Comment_GetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Comment_GetList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Comment_GetList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Comment::GetList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_Wait(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_Wait",0,0)) SWIG_fail;
  Script::Debug::Wait();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_Run(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_Run",0,0)) SWIG_fail;
  Script::Debug::Run();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_Pause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_Pause",0,0)) SWIG_fail;
  Script::Debug::Pause();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_Stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_Stop",0,0)) SWIG_fail;
  Script::Debug::Stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_StepIn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_StepIn",0,0)) SWIG_fail;
  Script::Debug::StepIn();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_StepOver(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_StepOver",0,0)) SWIG_fail;
  Script::Debug::StepOver();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_StepOut(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_StepOut",0,0)) SWIG_fail;
  Script::Debug::StepOut();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_SetBreakpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_SetBreakpoint",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Debug_SetBreakpoint" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Debug::SetBreakpoint(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_DeleteBreakpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_DeleteBreakpoint",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Debug_DeleteBreakpoint" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Debug::DeleteBreakpoint(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_DisableBreakpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_DisableBreakpoint",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Debug_DisableBreakpoint" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Debug::DisableBreakpoint(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_SetHardwareBreakpoint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  Script::Debug::HardwareType arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_SetHardwareBreakpoint",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Debug_SetHardwareBreakpoint" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Debug_SetHardwareBreakpoint" "', argument " "2"" of type '" "Script::Debug::HardwareType""'");
  } 
  arg2 = static_cast< Script::Debug::HardwareType >(val2);
  result = (bool)Script::Debug::SetHardwareBreakpoint(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_SetHardwareBreakpoint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_SetHardwareBreakpoint",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Debug_SetHardwareBreakpoint" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Debug::SetHardwareBreakpoint(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Debug_SetHardwareBreakpoint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Debug_SetHardwareBreakpoint__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Debug_SetHardwareBreakpoint__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Debug_SetHardwareBreakpoint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Debug::SetHardwareBreakpoint(duint,Script::Debug::HardwareType)\n"
    "    Script::Debug::SetHardwareBreakpoint(duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Debug_DeleteHardwareBreakpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Debug_DeleteHardwareBreakpoint",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Debug_DeleteHardwareBreakpoint" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Debug::DeleteHardwareBreakpoint(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Flag::FlagEnum arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_Get",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_Get" "', argument " "1"" of type '" "Script::Flag::FlagEnum""'");
  } 
  arg1 = static_cast< Script::Flag::FlagEnum >(val1);
  result = (bool)Script::Flag::Get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Flag::FlagEnum arg1 ;
  bool arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_Set",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_Set" "', argument " "1"" of type '" "Script::Flag::FlagEnum""'");
  } 
  arg1 = static_cast< Script::Flag::FlagEnum >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Flag_Set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (bool)Script::Flag::Set(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetZF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetZF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetZF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetZF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetZF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetZF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetZF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetOF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetOF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetOF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetOF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetOF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetOF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetOF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetCF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetCF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetCF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetCF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetCF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetCF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetCF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetPF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetPF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetPF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetPF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetPF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetPF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetPF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetSF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetSF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetSF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetSF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetSF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetSF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetSF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetTF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetTF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetTF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetTF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetTF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetTF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetTF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetAF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetAF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetAF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetAF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetAF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetAF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetAF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetDF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetDF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetDF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetDF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetDF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetDF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetDF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_GetIF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_GetIF",0,0)) SWIG_fail;
  result = (bool)Script::Flag::GetIF();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Flag_SetIF(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Flag_SetIF",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Flag_SetIF" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (bool)Script::Flag::SetIF(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_mod_set" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FunctionInfo_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_mod_get" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_rvaStart_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_rvaStart_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_rvaStart_set" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FunctionInfo_rvaStart_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rvaStart = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_rvaStart_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_rvaStart_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_rvaStart_get" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  result = (duint) ((arg1)->rvaStart);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_rvaEnd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_rvaEnd_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_rvaEnd_set" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FunctionInfo_rvaEnd_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rvaEnd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_rvaEnd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_rvaEnd_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_rvaEnd_get" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  result = (duint) ((arg1)->rvaEnd);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_manual_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_manual_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_manual_set" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FunctionInfo_manual_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->manual = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_manual_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_manual_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_manual_get" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  result = (bool) ((arg1)->manual);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_instructioncount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_instructioncount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_instructioncount_set" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FunctionInfo_instructioncount_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->instructioncount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfo_instructioncount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfo_instructioncount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfo_instructioncount_get" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  result = (duint) ((arg1)->instructioncount);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FunctionInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_FunctionInfo",0,0)) SWIG_fail;
  result = (Script::Function::FunctionInfo *)new Script::Function::FunctionInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Function__FunctionInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FunctionInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FunctionInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FunctionInfo" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FunctionInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Function__FunctionInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Function_Add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  bool arg3 ;
  duint arg4 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  unsigned long long val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Add",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Add" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Function_Add" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Function_Add" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_long_SS_long(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Function_Add" "', argument " "4"" of type '" "duint""'");
  } 
  arg4 = static_cast< duint >(val4);
  result = (bool)Script::Function::Add(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Add",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Add" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Function_Add" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Function_Add" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)Script::Function::Add(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Add(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Function_Add__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_Function_Add__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Function_Add'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Function::Add(duint,duint,bool,duint)\n"
    "    Script::Function::Add(duint,duint,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Function_AddByFuncInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_AddByFuncInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Function_AddByFuncInfo" "', argument " "1"" of type '" "Script::Function::FunctionInfo const *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  result = (bool)Script::Function::Add((Script::Function::FunctionInfo const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  duint *arg3 = (duint *) 0 ;
  duint *arg4 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Get",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Function_Get" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Function_Get" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Function_Get" "', argument " "4"" of type '" "duint *""'"); 
  }
  arg4 = reinterpret_cast< duint * >(argp4);
  result = (bool)Script::Function::Get(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  duint *arg3 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Get",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Function_Get" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Function_Get" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  result = (bool)Script::Function::Get(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Get__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint *arg2 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Get",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Function_Get" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Function::Get(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Get__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Get",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Function::Get(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Get(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Function_Get__SWIG_3(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Function_Get__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Function_Get__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_unsigned_long_long, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Function_Get__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Function_Get'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Function::Get(duint,duint *,duint *,duint *)\n"
    "    Script::Function::Get(duint,duint *,duint *)\n"
    "    Script::Function::Get(duint,duint *)\n"
    "    Script::Function::Get(duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Function_GetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  Script::Function::FunctionInfo *arg2 = (Script::Function::FunctionInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_GetInfo",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_GetInfo" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Function_GetInfo" "', argument " "2"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg2 = reinterpret_cast< Script::Function::FunctionInfo * >(argp2);
  result = (bool)Script::Function::GetInfo(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Overlaps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Overlaps",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Overlaps" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Function_Overlaps" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)Script::Function::Overlaps(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Delete",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_Delete" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Function::Delete(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_DeleteRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_DeleteRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Function_DeleteRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Function_DeleteRange" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  Script::Function::DeleteRange(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_DeleteRangeAuto(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_DeleteRangeAuto",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Function_DeleteRangeAuto" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Function_DeleteRangeAuto" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  Script::Function::DeleteRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_Clear",0,0)) SWIG_fail;
  Script::Function::Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Function_GetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Function_GetList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Function_GetList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Function::GetList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Disassembly_SelectionGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint *arg1 = (duint *) 0 ;
  duint *arg2 = (duint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Disassembly_SelectionGet",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_Disassembly_SelectionGet" "', argument " "1"" of type '" "duint *""'"); 
  }
  arg1 = reinterpret_cast< duint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Gui_Disassembly_SelectionGet" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Gui::Disassembly::SelectionGet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Disassembly_SelectionSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Disassembly_SelectionSet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Gui_Disassembly_SelectionSet" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Gui_Disassembly_SelectionSet" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)Script::Gui::Disassembly::SelectionSet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Disassembly_SelectionGetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Disassembly_SelectionGetStart",0,0)) SWIG_fail;
  result = (duint)Script::Gui::Disassembly::SelectionGetStart();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Disassembly_SelectionGetEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Disassembly_SelectionGetEnd",0,0)) SWIG_fail;
  result = (duint)Script::Gui::Disassembly::SelectionGetEnd();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Dump_SelectionGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint *arg1 = (duint *) 0 ;
  duint *arg2 = (duint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Dump_SelectionGet",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_Dump_SelectionGet" "', argument " "1"" of type '" "duint *""'"); 
  }
  arg1 = reinterpret_cast< duint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Gui_Dump_SelectionGet" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Gui::Dump::SelectionGet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Dump_SelectionSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Dump_SelectionSet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Gui_Dump_SelectionSet" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Gui_Dump_SelectionSet" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)Script::Gui::Dump::SelectionSet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Dump_SelectionGetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Dump_SelectionGetStart",0,0)) SWIG_fail;
  result = (duint)Script::Gui::Dump::SelectionGetStart();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Dump_SelectionGetEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Dump_SelectionGetEnd",0,0)) SWIG_fail;
  result = (duint)Script::Gui::Dump::SelectionGetEnd();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Stack_SelectionGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint *arg1 = (duint *) 0 ;
  duint *arg2 = (duint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Stack_SelectionGet",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_Stack_SelectionGet" "', argument " "1"" of type '" "duint *""'"); 
  }
  arg1 = reinterpret_cast< duint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Gui_Stack_SelectionGet" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Gui::Stack::SelectionGet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Stack_SelectionSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Stack_SelectionSet",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Gui_Stack_SelectionSet" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Gui_Stack_SelectionSet" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)Script::Gui::Stack::SelectionSet(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Stack_SelectionGetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Stack_SelectionGetStart",0,0)) SWIG_fail;
  result = (duint)Script::Gui::Stack::SelectionGetStart();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Stack_SelectionGetEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Stack_SelectionGetEnd",0,0)) SWIG_fail;
  result = (duint)Script::Gui::Stack::SelectionGetEnd();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Graph_SelectionGetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Graph_SelectionGetStart",0,0)) SWIG_fail;
  result = (duint)Script::Gui::Graph::SelectionGetStart();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_MemMap_SelectionGetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_MemMap_SelectionGetStart",0,0)) SWIG_fail;
  result = (duint)Script::Gui::MemMap::SelectionGetStart();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_SymMod_SelectionGetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_SymMod_SelectionGetStart",0,0)) SWIG_fail;
  result = (duint)Script::Gui::SymMod::SelectionGetStart();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_SelectionGet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Gui::Window arg1 ;
  duint *arg2 = (duint *) 0 ;
  duint *arg3 = (duint *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_SelectionGet",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Gui_SelectionGet" "', argument " "1"" of type '" "Script::Gui::Window""'");
  } 
  arg1 = static_cast< Script::Gui::Window >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Gui_SelectionGet" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Gui_SelectionGet" "', argument " "3"" of type '" "duint *""'"); 
  }
  arg3 = reinterpret_cast< duint * >(argp3);
  result = (bool)Script::Gui::SelectionGet(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_SelectionSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Gui::Window arg1 ;
  duint arg2 ;
  duint arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_SelectionSet",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Gui_SelectionSet" "', argument " "1"" of type '" "Script::Gui::Window""'");
  } 
  arg1 = static_cast< Script::Gui::Window >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Gui_SelectionSet" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Gui_SelectionSet" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  result = (bool)Script::Gui::SelectionSet(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_SelectionGetStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Gui::Window arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_SelectionGetStart",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Gui_SelectionGetStart" "', argument " "1"" of type '" "Script::Gui::Window""'");
  } 
  arg1 = static_cast< Script::Gui::Window >(val1);
  result = (duint)Script::Gui::SelectionGetStart(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_SelectionGetEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Gui::Window arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_SelectionGetEnd",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Gui_SelectionGetEnd" "', argument " "1"" of type '" "Script::Gui::Window""'");
  } 
  arg1 = static_cast< Script::Gui::Window >(val1);
  result = (duint)Script::Gui::SelectionGetEnd(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Message(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Message",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_Message" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  Script::Gui::Message((char const *)arg1);
  resultobj = SWIG_Py_Void();
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_MessageYesNo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_MessageYesNo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_MessageYesNo" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (bool)Script::Gui::MessageYesNo((char const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_InputLine(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_InputLine",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_InputLine" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Gui_InputLine" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)Script::Gui::InputLine((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_InputValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  duint *arg2 = (duint *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_InputValue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_InputValue" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Gui_InputValue" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Gui::InputValue((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_Refresh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_Refresh",0,0)) SWIG_fail;
  Script::Gui::Refresh();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_AddQWidgetTab(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_AddQWidgetTab",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_AddQWidgetTab" "', argument " "1"" of type '" "void *""'"); 
  }
  Script::Gui::AddQWidgetTab(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_ShowQWidgetTab(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_ShowQWidgetTab",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_ShowQWidgetTab" "', argument " "1"" of type '" "void *""'"); 
  }
  Script::Gui::ShowQWidgetTab(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Gui_CloseQWidgetTab(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Gui_CloseQWidgetTab",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Gui_CloseQWidgetTab" "', argument " "1"" of type '" "void *""'"); 
  }
  Script::Gui::CloseQWidgetTab(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_mod_set" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LabelInfo_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_mod_get" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_rva_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_rva_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_rva_set" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LabelInfo_rva_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rva = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_rva_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_rva_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_rva_get" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  result = (duint) ((arg1)->rva);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_text_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_text_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_text_set" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LabelInfo_text_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->text,arg2,256*sizeof(char));
  else memset(arg1->text,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_text_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_text_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_text_get" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  result = (char *)(char *) ((arg1)->text);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_manual_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_manual_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_manual_set" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LabelInfo_manual_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->manual = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfo_manual_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfo_manual_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfo_manual_get" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  result = (bool) ((arg1)->manual);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LabelInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_LabelInfo",0,0)) SWIG_fail;
  result = (Script::Label::LabelInfo *)new Script::Label::LabelInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Label__LabelInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LabelInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_LabelInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LabelInfo" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LabelInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Label__LabelInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Label_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_Set",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Label_Set" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Label_Set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Label_Set" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (bool)Script::Label::Set(arg1,(char const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_Set",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Label_Set" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Label_Set" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (bool)Script::Label::Set(arg1,(char const *)arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Label_Set__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Label_Set__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Label_Set'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Label::Set(duint,char const *,bool)\n"
    "    Script::Label::Set(duint,char const *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Label_SetByLabelInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_SetByLabelInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Label_SetByLabelInfo" "', argument " "1"" of type '" "Script::Label::LabelInfo const *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  result = (bool)Script::Label::Set((Script::Label::LabelInfo const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_FromString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  duint *arg2 = (duint *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_FromString",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Label_FromString" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Label_FromString" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Label::FromString((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_Get",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Label_Get" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Label_Get" "', argument " "2"" of type '" "(char* text, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)Script::Label::Get(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_GetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  Script::Label::LabelInfo *arg2 = (Script::Label::LabelInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_GetInfo",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Label_GetInfo" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Label_GetInfo" "', argument " "2"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg2 = reinterpret_cast< Script::Label::LabelInfo * >(argp2);
  result = (bool)Script::Label::GetInfo(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_Delete",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Label_Delete" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Label::Delete(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_DeleteRange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_DeleteRange",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Label_DeleteRange" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Label_DeleteRange" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  Script::Label::DeleteRange(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_Clear",0,0)) SWIG_fail;
  Script::Label::Clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Label_GetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Label_GetList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Label_GetList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Label::GetList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_Read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  void *arg2 = (void *) 0 ;
  duint arg3 ;
  duint *arg4 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_Read",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_Read" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Memory_Read" "', argument " "2"" of type '" "void *""'"); 
  }
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Memory_Read" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Memory_Read" "', argument " "4"" of type '" "duint *""'"); 
  }
  arg4 = reinterpret_cast< duint * >(argp4);
  result = (bool)Script::Memory::Read(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_Write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  void *arg2 = (void *) 0 ;
  duint arg3 ;
  duint *arg4 = (duint *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  unsigned long long val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_Write",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_Write" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Memory_Write" "', argument " "2"" of type '" "void const *""'"); 
  }
  ecode3 = SWIG_AsVal_unsigned_SS_long_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Memory_Write" "', argument " "3"" of type '" "duint""'");
  } 
  arg3 = static_cast< duint >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Memory_Write" "', argument " "4"" of type '" "duint *""'"); 
  }
  arg4 = reinterpret_cast< duint * >(argp4);
  result = (bool)Script::Memory::Write(arg1,(void const *)arg2,arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_IsValidPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_IsValidPtr",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_IsValidPtr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Memory::IsValidPtr(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_RemoteAlloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_RemoteAlloc",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_RemoteAlloc" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_RemoteAlloc" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (duint)Script::Memory::RemoteAlloc(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_RemoteFree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_RemoteFree",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_RemoteFree" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Memory::RemoteFree(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetProtect__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetProtect",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetProtect" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_GetProtect" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Memory_GetProtect" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (unsigned int)Script::Memory::GetProtect(arg1,arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetProtect__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetProtect",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetProtect" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_GetProtect" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (unsigned int)Script::Memory::GetProtect(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetProtect__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetProtect",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetProtect" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (unsigned int)Script::Memory::GetProtect(arg1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetProtect(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Memory_GetProtect__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Memory_GetProtect__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Memory_GetProtect__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Memory_GetProtect'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Memory::GetProtect(duint,bool,bool)\n"
    "    Script::Memory::GetProtect(duint,bool)\n"
    "    Script::Memory::GetProtect(duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Memory_GetBase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetBase",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetBase" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_GetBase" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Memory_GetBase" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (duint)Script::Memory::GetBase(arg1,arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetBase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetBase",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetBase" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_GetBase" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (duint)Script::Memory::GetBase(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetBase__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetBase",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetBase" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)Script::Memory::GetBase(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetBase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Memory_GetBase__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Memory_GetBase__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Memory_GetBase__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Memory_GetBase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Memory::GetBase(duint,bool,bool)\n"
    "    Script::Memory::GetBase(duint,bool)\n"
    "    Script::Memory::GetBase(duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Memory_GetSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  bool arg3 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetSize" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_GetSize" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Memory_GetSize" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  result = (duint)Script::Memory::GetSize(arg1,arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  bool arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetSize",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetSize" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_GetSize" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (duint)Script::Memory::GetSize(arg1,arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetSize__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_GetSize",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_GetSize" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)Script::Memory::GetSize(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_GetSize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Memory_GetSize__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Memory_GetSize__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Memory_GetSize__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Memory_GetSize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Memory::GetSize(duint,bool,bool)\n"
    "    Script::Memory::GetSize(duint,bool)\n"
    "    Script::Memory::GetSize(duint)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Memory_ReadByte(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_ReadByte",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_ReadByte" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (unsigned char)Script::Memory::ReadByte(arg1);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_WriteByte(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned char arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_WriteByte",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_WriteByte" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_WriteByte" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  result = (bool)Script::Memory::WriteByte(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_ReadWord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_ReadWord",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_ReadWord" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (unsigned short)Script::Memory::ReadWord(arg1);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_WriteWord(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned short arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_WriteWord",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_WriteWord" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_WriteWord" "', argument " "2"" of type '" "unsigned short""'");
  } 
  arg2 = static_cast< unsigned short >(val2);
  result = (bool)Script::Memory::WriteWord(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_ReadDword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_ReadDword",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_ReadDword" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (unsigned int)Script::Memory::ReadDword(arg1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_WriteDword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned int arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_WriteDword",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_WriteDword" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_WriteDword" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (bool)Script::Memory::WriteDword(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_ReadQword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_ReadQword",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_ReadQword" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (unsigned long long)Script::Memory::ReadQword(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_WriteQword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_WriteQword",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_WriteQword" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_WriteQword" "', argument " "2"" of type '" "unsigned long long""'");
  } 
  arg2 = static_cast< unsigned long long >(val2);
  result = (bool)Script::Memory::WriteQword(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_ReadPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_ReadPtr",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_ReadPtr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)Script::Memory::ReadPtr(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Memory_WritePtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Memory_WritePtr",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Memory_WritePtr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Memory_WritePtr" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)Script::Memory::WritePtr(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Misc_ParseExpression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  duint *arg2 = (duint *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Misc_ParseExpression",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Misc_ParseExpression" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Misc_ParseExpression" "', argument " "2"" of type '" "duint *""'"); 
  }
  arg2 = reinterpret_cast< duint * >(argp2);
  result = (bool)Script::Misc::ParseExpression((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Misc_RemoteGetProcAddress(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Misc_RemoteGetProcAddress",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Misc_RemoteGetProcAddress" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Misc_RemoteGetProcAddress" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (duint)Script::Misc::RemoteGetProcAddress((char const *)arg1,(char const *)arg2);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Misc_ResolveLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Misc_ResolveLabel",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Misc_ResolveLabel" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (duint)Script::Misc::ResolveLabel((char const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Misc_Alloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Misc_Alloc",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Misc_Alloc" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (void *)Script::Misc::Alloc(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Misc_Free(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  void *arg1 = (void *) 0 ;
  int res1 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Misc_Free",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0,SWIG_as_voidptrptr(&arg1), 0, 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Misc_Free" "', argument " "1"" of type '" "void *""'"); 
  }
  Script::Misc::Free(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_base_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_base_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_base_set" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleInfo_base_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->base = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_base_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_base_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_base_get" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (duint) ((arg1)->base);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_size_set" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleInfo_size_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_size_get" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (duint) ((arg1)->size);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_entry_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_entry_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_entry_set" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleInfo_entry_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->entry = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_entry_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_entry_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_entry_get" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (duint) ((arg1)->entry);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_sectionCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_sectionCount_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_sectionCount_set" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleInfo_sectionCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sectionCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_sectionCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_sectionCount_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_sectionCount_get" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (int) ((arg1)->sectionCount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_name_set" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ModuleInfo_name_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,256*sizeof(char));
  else memset(arg1->name,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_name_get" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_path_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[MAX_PATH] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_path_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_path_set" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, MAX_PATH);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ModuleInfo_path_set" "', argument " "2"" of type '" "char [MAX_PATH]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->path,arg2,MAX_PATH*sizeof(char));
  else memset(arg1->path,0,MAX_PATH*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfo_path_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfo_path_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfo_path_get" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (char *)(char *) ((arg1)->path);
  {
    size_t size = SWIG_strnlen(result, MAX_PATH);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ModuleInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ModuleInfo",0,0)) SWIG_fail;
  result = (Script::Module::ModuleInfo *)new Script::Module::ModuleInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Module__ModuleInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ModuleInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ModuleInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ModuleInfo" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ModuleInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Module__ModuleInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ModuleSectionInfo_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfo_addr_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfo_addr_set" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleSectionInfo_addr_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->addr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfo_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfo_addr_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfo_addr_get" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  result = (duint) ((arg1)->addr);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfo_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfo_size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfo_size_set" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleSectionInfo_size_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfo_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfo_size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfo_size_get" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  result = (duint) ((arg1)->size);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfo_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[10*5] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfo_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfo_name_set" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 10*5);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ModuleSectionInfo_name_set" "', argument " "2"" of type '" "char [10*5]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,10*5*sizeof(char));
  else memset(arg1->name,0,10*5*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfo_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfo_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfo_name_get" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 10*5);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ModuleSectionInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ModuleSectionInfo",0,0)) SWIG_fail;
  result = (Script::Module::ModuleSectionInfo *)new Script::Module::ModuleSectionInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Module__ModuleSectionInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ModuleSectionInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ModuleSectionInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ModuleSectionInfo" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ModuleSectionInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Module__ModuleSectionInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Module_InfoFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  Script::Module::ModuleInfo *arg2 = (Script::Module::ModuleInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_InfoFromAddr",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_InfoFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Module_InfoFromAddr" "', argument " "2"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg2 = reinterpret_cast< Script::Module::ModuleInfo * >(argp2);
  result = (bool)Script::Module::InfoFromAddr(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_InfoFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  Script::Module::ModuleInfo *arg2 = (Script::Module::ModuleInfo *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_InfoFromName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_InfoFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Module_InfoFromName" "', argument " "2"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg2 = reinterpret_cast< Script::Module::ModuleInfo * >(argp2);
  result = (bool)Script::Module::InfoFromName((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_BaseFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_BaseFromAddr",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_BaseFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)Script::Module::BaseFromAddr(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_BaseFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_BaseFromName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_BaseFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (duint)Script::Module::BaseFromName((char const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SizeFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SizeFromAddr",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_SizeFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)Script::Module::SizeFromAddr(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SizeFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SizeFromName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_SizeFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (duint)Script::Module::SizeFromName((char const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_NameFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_NameFromAddr",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_NameFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Module_NameFromAddr" "', argument " "2"" of type '" "(char* Module_NameFromAddr, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)Script::Module::NameFromAddr(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_PathFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  char *arg2 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_PathFromAddr",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_PathFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Module_PathFromAddr" "', argument " "2"" of type '" "(char* path, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)Script::Module::PathFromAddr(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_PathFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int res2 ;
  Py_ssize_t size2 = 0 ;
  void const *buf2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_PathFromName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_PathFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  {
    res2 = PyObject_AsReadBuffer(obj1, &buf2, &size2);
    if (res2<0) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Module_PathFromName" "', argument " "2"" of type '" "(char* path, SIZE)""'");
    }
    arg2 = (char *) buf2;
  }
  result = (bool)Script::Module::PathFromName((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_EntryFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_EntryFromAddr",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_EntryFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)Script::Module::EntryFromAddr(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_EntryFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_EntryFromName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_EntryFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (duint)Script::Module::EntryFromName((char const *)arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SectionCountFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SectionCountFromAddr",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_SectionCountFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (int)Script::Module::SectionCountFromAddr(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SectionCountFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SectionCountFromName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_SectionCountFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (int)Script::Module::SectionCountFromName((char const *)arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SectionFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  int arg2 ;
  Script::Module::ModuleSectionInfo *arg3 = (Script::Module::ModuleSectionInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SectionFromAddr",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_SectionFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Module_SectionFromAddr" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Module_SectionFromAddr" "', argument " "3"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg3 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp3);
  result = (bool)Script::Module::SectionFromAddr(arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SectionFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  Script::Module::ModuleSectionInfo *arg3 = (Script::Module::ModuleSectionInfo *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SectionFromName",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_SectionFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Module_SectionFromName" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Module_SectionFromName" "', argument " "3"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg3 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp3);
  result = (bool)Script::Module::SectionFromName((char const *)arg1,arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SectionListFromAddr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SectionListFromAddr",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Module_SectionListFromAddr" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Module_SectionListFromAddr" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  result = (bool)Script::Module::SectionListFromAddr(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_SectionListFromName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  ListInfo *arg2 = (ListInfo *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_SectionListFromName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_SectionListFromName" "', argument " "1"" of type '" "char const *""'");
  }
  arg1 = reinterpret_cast< char * >(buf1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Module_SectionListFromName" "', argument " "2"" of type '" "ListInfo *""'"); 
  }
  arg2 = reinterpret_cast< ListInfo * >(argp2);
  result = (bool)Script::Module::SectionListFromName((char const *)arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return resultobj;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModuleInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModuleInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_GetMainModuleInfo" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (bool)Script::Module::GetMainModuleInfo(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModuleBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModuleBase",0,0)) SWIG_fail;
  result = (duint)Script::Module::GetMainModuleBase();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModuleSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModuleSize",0,0)) SWIG_fail;
  result = (duint)Script::Module::GetMainModuleSize();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModuleEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModuleEntry",0,0)) SWIG_fail;
  result = (duint)Script::Module::GetMainModuleEntry();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModuleSectionCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModuleSectionCount",0,0)) SWIG_fail;
  result = (int)Script::Module::GetMainModuleSectionCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModuleName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  Py_ssize_t size1 = 0 ;
  void const *buf1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModuleName",1,1,&obj0)) SWIG_fail;
  {
    res1 = PyObject_AsReadBuffer(obj0, &buf1, &size1);
    if (res1<0) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_GetMainModuleName" "', argument " "1"" of type '" "(char* Module_GetMainModuleName, SIZE)""'");
    }
    arg1 = (char *) buf1;
  }
  result = (bool)Script::Module::GetMainModuleName(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModulePath(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ;
  int res1 ;
  Py_ssize_t size1 = 0 ;
  void const *buf1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModulePath",1,1,&obj0)) SWIG_fail;
  {
    res1 = PyObject_AsReadBuffer(obj0, &buf1, &size1);
    if (res1<0) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_GetMainModulePath" "', argument " "1"" of type '" "(char* path, SIZE)""'");
    }
    arg1 = (char *) buf1;
  }
  result = (bool)Script::Module::GetMainModulePath(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetMainModuleSectionList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetMainModuleSectionList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_GetMainModuleSectionList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Module::GetMainModuleSectionList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Module_GetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Module_GetList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Module_GetList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Module::GetList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pattern_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  Py_ssize_t size1 = 0 ;
  void const *buf1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pattern_Find",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = PyObject_AsReadBuffer(obj0, &buf1, &size1);
    if (res1<0) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pattern_Find" "', argument " "1"" of type '" "(unsigned char* data, SIZE)""'");
    }
    arg1 = (unsigned char *) buf1;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Pattern_Find" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Pattern_Find" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (duint)Script::Pattern::Find(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pattern_FindMem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pattern_FindMem",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Pattern_FindMem" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Pattern_FindMem" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Pattern_FindMem" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  result = (duint)Script::Pattern::FindMem(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pattern_Write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  int res1 ;
  Py_ssize_t size1 = 0 ;
  void const *buf1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pattern_Write",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    res1 = PyObject_AsReadBuffer(obj0, &buf1, &size1);
    if (res1<0) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pattern_Write" "', argument " "1"" of type '" "(unsigned char* data, SIZE)""'");
    }
    arg1 = (unsigned char *) buf1;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Pattern_Write" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Pattern_Write" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  Script::Pattern::Write(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pattern_WriteMem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pattern_WriteMem",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Pattern_WriteMem" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Pattern_WriteMem" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Pattern_WriteMem" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  Script::Pattern::WriteMem(arg1,arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pattern_SearchAndReplace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  int res1 ;
  Py_ssize_t size1 = 0 ;
  void const *buf1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pattern_SearchAndReplace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    res1 = PyObject_AsReadBuffer(obj0, &buf1, &size1);
    if (res1<0) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pattern_SearchAndReplace" "', argument " "1"" of type '" "(unsigned char* data, SIZE)""'");
    }
    arg1 = (unsigned char *) buf1;
  }
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Pattern_SearchAndReplace" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Pattern_SearchAndReplace" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Pattern_SearchAndReplace" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)Script::Pattern::SearchAndReplace(arg1,arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pattern_SearchAndReplaceMem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  duint arg2 ;
  char *arg3 = (char *) 0 ;
  char *arg4 = (char *) 0 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  int res4 ;
  char *buf4 = 0 ;
  int alloc4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Pattern_SearchAndReplaceMem",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Pattern_SearchAndReplaceMem" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Pattern_SearchAndReplaceMem" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Pattern_SearchAndReplaceMem" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  res4 = SWIG_AsCharPtrAndSize(obj3, &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Pattern_SearchAndReplaceMem" "', argument " "4"" of type '" "char const *""'");
  }
  arg4 = reinterpret_cast< char * >(buf4);
  result = (bool)Script::Pattern::SearchAndReplaceMem(arg1,arg2,(char const *)arg3,(char const *)arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Register::RegisterEnum arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_Get",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_Get" "', argument " "1"" of type '" "Script::Register::RegisterEnum""'");
  } 
  arg1 = static_cast< Script::Register::RegisterEnum >(val1);
  result = (duint)Script::Register::Get(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Register::RegisterEnum arg1 ;
  duint arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_Set",2,2,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_Set" "', argument " "1"" of type '" "Script::Register::RegisterEnum""'");
  } 
  arg1 = static_cast< Script::Register::RegisterEnum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Register_Set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  result = (bool)Script::Register::Set(arg1,arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_Size",0,0)) SWIG_fail;
  result = (int)Script::Register::Size();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDR0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDR0",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetDR0();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDR0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDR0",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDR0" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetDR0(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDR1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDR1",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetDR1();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDR1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDR1",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDR1" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetDR1(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDR2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDR2",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetDR2();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDR2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDR2",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDR2" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetDR2(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDR3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDR3",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetDR3();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDR3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDR3",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDR3" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetDR3(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDR6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDR6",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetDR6();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDR6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDR6",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDR6" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetDR6(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDR7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDR7",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetDR7();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDR7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDR7",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDR7" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetDR7(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetEAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetEAX",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetEAX();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetEAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetEAX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetEAX" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetEAX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetAX",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetAX();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetAX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetAX" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetAX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetAH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetAH",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetAH();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetAH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetAH",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetAH" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetAH(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetAL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetAL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetAL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetAL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetAL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetAL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetAL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetEBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetEBX",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetEBX();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetEBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetEBX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetEBX" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetEBX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetBX",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetBX();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetBX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetBX" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetBX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetBH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetBH",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetBH();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetBH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetBH",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetBH" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetBH(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetBL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetBL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetBL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetBL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetBL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetBL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetBL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetECX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetECX",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetECX();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetECX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetECX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetECX" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetECX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCX",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetCX();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCX" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetCX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCH",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetCH();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCH",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCH" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetCH(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetCL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetCL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetEDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetEDX",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetEDX();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetEDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetEDX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetEDX" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetEDX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDX",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetDX();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDX" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetDX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDH",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetDH();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDH",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDH" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetDH(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetDL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetDL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetEDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetEDI",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetEDI();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetEDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetEDI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetEDI" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetEDI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDI",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetDI();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDI" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetDI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetESI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetESI",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetESI();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetESI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetESI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetESI" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetESI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetSI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetSI",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetSI();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetSI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetSI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetSI" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetSI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetEBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetEBP",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetEBP();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetEBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetEBP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetEBP" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetEBP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetBP",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetBP();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetBP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetBP" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetBP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetESP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetESP",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetESP();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetESP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetESP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetESP" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetESP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetSP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetSP",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetSP();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetSP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetSP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetSP" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetSP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetEIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetEIP",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetEIP();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetEIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetEIP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetEIP" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetEIP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRAX",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRAX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRAX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRAX" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRAX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRBX",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRBX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRBX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRBX" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRBX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRCX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRCX",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRCX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRCX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRCX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRCX" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRCX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRDX",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRDX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRDX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRDX" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRDX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRSI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRSI",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRSI();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRSI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRSI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRSI" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRSI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetSIL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetSIL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetSIL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetSIL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetSIL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetSIL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetSIL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRDI",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRDI();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRDI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRDI" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRDI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetDIL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetDIL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetDIL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetDIL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetDIL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetDIL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetDIL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRBP",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRBP();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRBP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRBP" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRBP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetBPL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetBPL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetBPL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetBPL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetBPL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetBPL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetBPL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRSP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRSP",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRSP();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRSP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRSP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRSP" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRSP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetSPL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetSPL",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetSPL();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetSPL(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetSPL",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetSPL" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetSPL(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetRIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetRIP",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetRIP();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetRIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetRIP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetRIP" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetRIP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR8",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR8();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR8",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR8" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR8(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR8D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR8D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR8D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR8D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR8D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR8D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR8D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR8W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR8W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR8W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR8W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR8W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR8W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR8W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR8B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR8B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR8B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR8B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR8B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR8B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR8B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR9",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR9();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR9",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR9" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR9(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR9D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR9D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR9D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR9D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR9D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR9D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR9D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR9W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR9W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR9W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR9W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR9W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR9W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR9W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR9B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR9B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR9B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR9B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR9B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR9B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR9B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR10",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR10();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR10",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR10" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR10(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR10D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR10D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR10D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR10D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR10D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR10D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR10D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR10W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR10W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR10W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR10W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR10W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR10W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR10W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR10B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR10B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR10B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR10B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR10B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR10B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR10B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR11",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR11();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR11",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR11" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR11(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR11D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR11D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR11D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR11D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR11D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR11D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR11D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR11W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR11W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR11W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR11W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR11W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR11W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR11W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR11B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR11B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR11B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR11B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR11B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR11B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR11B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR12",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR12();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR12",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR12" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR12(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR12D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR12D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR12D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR12D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR12D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR12D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR12D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR12W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR12W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR12W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR12W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR12W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR12W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR12W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR12B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR12B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR12B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR12B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR12B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR12B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR12B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR13",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR13();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR13",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR13" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR13(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR13D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR13D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR13D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR13D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR13D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR13D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR13D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR13W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR13W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR13W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR13W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR13W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR13W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR13W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR13B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR13B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR13B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR13B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR13B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR13B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR13B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR14",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR14();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR14",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR14" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR14(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR14D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR14D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR14D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR14D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR14D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR14D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR14D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR14W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR14W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR14W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR14W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR14W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR14W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR14W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR14B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR14B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR14B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR14B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR14B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR14B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR14B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR15",0,0)) SWIG_fail;
  result = (unsigned long long)Script::Register::GetR15();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned long long arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR15",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR15" "', argument " "1"" of type '" "unsigned long long""'");
  } 
  arg1 = static_cast< unsigned long long >(val1);
  result = (bool)Script::Register::SetR15(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR15D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR15D",0,0)) SWIG_fail;
  result = (unsigned int)Script::Register::GetR15D();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR15D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR15D",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR15D" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (bool)Script::Register::SetR15D(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR15W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR15W",0,0)) SWIG_fail;
  result = (unsigned short)Script::Register::GetR15W();
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR15W(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned short arg1 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR15W",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR15W" "', argument " "1"" of type '" "unsigned short""'");
  } 
  arg1 = static_cast< unsigned short >(val1);
  result = (bool)Script::Register::SetR15W(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetR15B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetR15B",0,0)) SWIG_fail;
  result = (unsigned char)Script::Register::GetR15B();
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetR15B(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetR15B",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetR15B" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  result = (bool)Script::Register::SetR15B(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCAX",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCAX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCAX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCAX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCAX" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCAX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCBX",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCBX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCBX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCBX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCBX" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCBX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCCX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCCX",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCCX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCCX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCCX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCCX" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCCX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCDX",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCDX();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCDX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCDX",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCDX" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCDX(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCDI",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCDI();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCDI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCDI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCDI" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCDI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCSI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCSI",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCSI();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCSI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCSI",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCSI" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCSI(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCBP",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCBP();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCBP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCBP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCBP" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCBP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCSP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCSP",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCSP();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCSP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCSP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCSP" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCSP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCIP",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCIP();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCIP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCIP",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCIP" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCIP(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_GetCFLAGS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_GetCFLAGS",0,0)) SWIG_fail;
  result = (duint)Script::Register::GetCFLAGS();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Register_SetCFLAGS(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Register_SetCFLAGS",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Register_SetCFLAGS" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (bool)Script::Register::SetCFLAGS(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stack_Pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Stack_Pop",0,0)) SWIG_fail;
  result = (duint)Script::Stack::Pop();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stack_Push(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Stack_Push",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Stack_Push" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint)Script::Stack::Push(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stack_Peek__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Stack_Peek",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Stack_Peek" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (duint)Script::Stack::Peek(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stack_Peek__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Stack_Peek",0,0)) SWIG_fail;
  result = (duint)Script::Stack::Peek();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Stack_Peek(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_Stack_Peek__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_Stack_Peek__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Stack_Peek'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    Script::Stack::Peek(int)\n"
    "    Script::Stack::Peek()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_mod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_mod_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_mod_set" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SymbolInfo_mod_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->mod,arg2,256*sizeof(char));
  else memset(arg1->mod,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_mod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_mod_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_mod_get" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  result = (char *)(char *) ((arg1)->mod);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_rva_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_rva_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_rva_set" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SymbolInfo_rva_set" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  if (arg1) (arg1)->rva = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_rva_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_rva_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_rva_get" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  result = (duint) ((arg1)->rva);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_name_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_name_set" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  res2 = SWIG_AsCharArray(obj1, temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SymbolInfo_name_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->name,arg2,256*sizeof(char));
  else memset(arg1->name,0,256*sizeof(char));
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_name_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_name_get" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  result = (char *)(char *) ((arg1)->name);
  {
    size_t size = SWIG_strnlen(result, 256);
    
    
    
    resultobj = SWIG_FromCharPtrAndSize(result, size);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_manual_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_manual_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_manual_set" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SymbolInfo_manual_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->manual = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_manual_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_manual_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_manual_get" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  result = (bool) ((arg1)->manual);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  Script::Symbol::SymbolType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_type_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_type_set" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SymbolInfo_type_set" "', argument " "2"" of type '" "Script::Symbol::SymbolType""'");
  } 
  arg2 = static_cast< Script::Symbol::SymbolType >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfo_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Symbol::SymbolType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfo_type_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfo_type_get" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  result = (Script::Symbol::SymbolType) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SymbolInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SymbolInfo",0,0)) SWIG_fail;
  result = (Script::Symbol::SymbolInfo *)new Script::Symbol::SymbolInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Symbol__SymbolInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SymbolInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SymbolInfo",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SymbolInfo" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SymbolInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Script__Symbol__SymbolInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Symbol_GetList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ListInfo *arg1 = (ListInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"Symbol_GetList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ListInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Symbol_GetList" "', argument " "1"" of type '" "ListInfo *""'"); 
  }
  arg1 = reinterpret_cast< ListInfo * >(argp1);
  result = (bool)Script::Symbol::GetList(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ArgumentInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  ArgumentInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ArgumentInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ArgumentInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (ArgumentInfoArray *)new_ArgumentInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArgumentInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArgumentInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArgumentInfoArray *arg1 = (ArgumentInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ArgumentInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArgumentInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArgumentInfoArray" "', argument " "1"" of type '" "ArgumentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ArgumentInfoArray * >(argp1);
  delete_ArgumentInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArgumentInfoArray *arg1 = (ArgumentInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Argument::ArgumentInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArgumentInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfoArray___getitem__" "', argument " "1"" of type '" "ArgumentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ArgumentInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArgumentInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = ArgumentInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Argument::ArgumentInfo(static_cast< const Script::Argument::ArgumentInfo& >(result))), SWIGTYPE_p_Script__Argument__ArgumentInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArgumentInfoArray *arg1 = (ArgumentInfoArray *) 0 ;
  size_t arg2 ;
  Script::Argument::ArgumentInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArgumentInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfoArray___setitem__" "', argument " "1"" of type '" "ArgumentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ArgumentInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ArgumentInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Argument__ArgumentInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArgumentInfoArray___setitem__" "', argument " "3"" of type '" "Script::Argument::ArgumentInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArgumentInfoArray___setitem__" "', argument " "3"" of type '" "Script::Argument::ArgumentInfo""'");
    } else {
      Script::Argument::ArgumentInfo * temp = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ArgumentInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ArgumentInfoArray *arg1 = (ArgumentInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Argument::ArgumentInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ArgumentInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfoArray_cast" "', argument " "1"" of type '" "ArgumentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ArgumentInfoArray * >(argp1);
  result = (Script::Argument::ArgumentInfo *)ArgumentInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArgumentInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Argument::ArgumentInfo *arg1 = (Script::Argument::ArgumentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ArgumentInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ArgumentInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Argument__ArgumentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArgumentInfoArray_frompointer" "', argument " "1"" of type '" "Script::Argument::ArgumentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Argument::ArgumentInfo * >(argp1);
  result = (ArgumentInfoArray *)ArgumentInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ArgumentInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ArgumentInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ArgumentInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_BookmarkInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  BookmarkInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_BookmarkInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BookmarkInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (BookmarkInfoArray *)new_BookmarkInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BookmarkInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BookmarkInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BookmarkInfoArray *arg1 = (BookmarkInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_BookmarkInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BookmarkInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BookmarkInfoArray" "', argument " "1"" of type '" "BookmarkInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< BookmarkInfoArray * >(argp1);
  delete_BookmarkInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BookmarkInfoArray *arg1 = (BookmarkInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Bookmark::BookmarkInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BookmarkInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfoArray___getitem__" "', argument " "1"" of type '" "BookmarkInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< BookmarkInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BookmarkInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = BookmarkInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Bookmark::BookmarkInfo(static_cast< const Script::Bookmark::BookmarkInfo& >(result))), SWIGTYPE_p_Script__Bookmark__BookmarkInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BookmarkInfoArray *arg1 = (BookmarkInfoArray *) 0 ;
  size_t arg2 ;
  Script::Bookmark::BookmarkInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BookmarkInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfoArray___setitem__" "', argument " "1"" of type '" "BookmarkInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< BookmarkInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BookmarkInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Bookmark__BookmarkInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BookmarkInfoArray___setitem__" "', argument " "3"" of type '" "Script::Bookmark::BookmarkInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BookmarkInfoArray___setitem__" "', argument " "3"" of type '" "Script::Bookmark::BookmarkInfo""'");
    } else {
      Script::Bookmark::BookmarkInfo * temp = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  BookmarkInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  BookmarkInfoArray *arg1 = (BookmarkInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Bookmark::BookmarkInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_BookmarkInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfoArray_cast" "', argument " "1"" of type '" "BookmarkInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< BookmarkInfoArray * >(argp1);
  result = (Script::Bookmark::BookmarkInfo *)BookmarkInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BookmarkInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Bookmark::BookmarkInfo *arg1 = (Script::Bookmark::BookmarkInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  BookmarkInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"BookmarkInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Bookmark__BookmarkInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BookmarkInfoArray_frompointer" "', argument " "1"" of type '" "Script::Bookmark::BookmarkInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Bookmark::BookmarkInfo * >(argp1);
  result = (BookmarkInfoArray *)BookmarkInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_BookmarkInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BookmarkInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_BookmarkInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_CommentInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  CommentInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_CommentInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CommentInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (CommentInfoArray *)new_CommentInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CommentInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CommentInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CommentInfoArray *arg1 = (CommentInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_CommentInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CommentInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CommentInfoArray" "', argument " "1"" of type '" "CommentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< CommentInfoArray * >(argp1);
  delete_CommentInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CommentInfoArray *arg1 = (CommentInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Comment::CommentInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CommentInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfoArray___getitem__" "', argument " "1"" of type '" "CommentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< CommentInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommentInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = CommentInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Comment::CommentInfo(static_cast< const Script::Comment::CommentInfo& >(result))), SWIGTYPE_p_Script__Comment__CommentInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CommentInfoArray *arg1 = (CommentInfoArray *) 0 ;
  size_t arg2 ;
  Script::Comment::CommentInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CommentInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfoArray___setitem__" "', argument " "1"" of type '" "CommentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< CommentInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CommentInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Comment__CommentInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CommentInfoArray___setitem__" "', argument " "3"" of type '" "Script::Comment::CommentInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CommentInfoArray___setitem__" "', argument " "3"" of type '" "Script::Comment::CommentInfo""'");
    } else {
      Script::Comment::CommentInfo * temp = reinterpret_cast< Script::Comment::CommentInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  CommentInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CommentInfoArray *arg1 = (CommentInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Comment::CommentInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CommentInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfoArray_cast" "', argument " "1"" of type '" "CommentInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< CommentInfoArray * >(argp1);
  result = (Script::Comment::CommentInfo *)CommentInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CommentInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Comment::CommentInfo *arg1 = (Script::Comment::CommentInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CommentInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"CommentInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Comment__CommentInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CommentInfoArray_frompointer" "', argument " "1"" of type '" "Script::Comment::CommentInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Comment::CommentInfo * >(argp1);
  result = (CommentInfoArray *)CommentInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CommentInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CommentInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CommentInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_FunctionInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  FunctionInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_FunctionInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_FunctionInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (FunctionInfoArray *)new_FunctionInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FunctionInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FunctionInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FunctionInfoArray *arg1 = (FunctionInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_FunctionInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FunctionInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FunctionInfoArray" "', argument " "1"" of type '" "FunctionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< FunctionInfoArray * >(argp1);
  delete_FunctionInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FunctionInfoArray *arg1 = (FunctionInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Function::FunctionInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FunctionInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfoArray___getitem__" "', argument " "1"" of type '" "FunctionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< FunctionInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FunctionInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = FunctionInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Function::FunctionInfo(static_cast< const Script::Function::FunctionInfo& >(result))), SWIGTYPE_p_Script__Function__FunctionInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FunctionInfoArray *arg1 = (FunctionInfoArray *) 0 ;
  size_t arg2 ;
  Script::Function::FunctionInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FunctionInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfoArray___setitem__" "', argument " "1"" of type '" "FunctionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< FunctionInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FunctionInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Function__FunctionInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FunctionInfoArray___setitem__" "', argument " "3"" of type '" "Script::Function::FunctionInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FunctionInfoArray___setitem__" "', argument " "3"" of type '" "Script::Function::FunctionInfo""'");
    } else {
      Script::Function::FunctionInfo * temp = reinterpret_cast< Script::Function::FunctionInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  FunctionInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  FunctionInfoArray *arg1 = (FunctionInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Function::FunctionInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_FunctionInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfoArray_cast" "', argument " "1"" of type '" "FunctionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< FunctionInfoArray * >(argp1);
  result = (Script::Function::FunctionInfo *)FunctionInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FunctionInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Function::FunctionInfo *arg1 = (Script::Function::FunctionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  FunctionInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"FunctionInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Function__FunctionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FunctionInfoArray_frompointer" "', argument " "1"" of type '" "Script::Function::FunctionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Function::FunctionInfo * >(argp1);
  result = (FunctionInfoArray *)FunctionInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_FunctionInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FunctionInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_FunctionInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LabelInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  LabelInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_LabelInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_LabelInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (LabelInfoArray *)new_LabelInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LabelInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LabelInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LabelInfoArray *arg1 = (LabelInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_LabelInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LabelInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LabelInfoArray" "', argument " "1"" of type '" "LabelInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< LabelInfoArray * >(argp1);
  delete_LabelInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LabelInfoArray *arg1 = (LabelInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Label::LabelInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LabelInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfoArray___getitem__" "', argument " "1"" of type '" "LabelInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< LabelInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LabelInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = LabelInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Label::LabelInfo(static_cast< const Script::Label::LabelInfo& >(result))), SWIGTYPE_p_Script__Label__LabelInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LabelInfoArray *arg1 = (LabelInfoArray *) 0 ;
  size_t arg2 ;
  Script::Label::LabelInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LabelInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfoArray___setitem__" "', argument " "1"" of type '" "LabelInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< LabelInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LabelInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Label__LabelInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LabelInfoArray___setitem__" "', argument " "3"" of type '" "Script::Label::LabelInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LabelInfoArray___setitem__" "', argument " "3"" of type '" "Script::Label::LabelInfo""'");
    } else {
      Script::Label::LabelInfo * temp = reinterpret_cast< Script::Label::LabelInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  LabelInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  LabelInfoArray *arg1 = (LabelInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Label::LabelInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_LabelInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfoArray_cast" "', argument " "1"" of type '" "LabelInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< LabelInfoArray * >(argp1);
  result = (Script::Label::LabelInfo *)LabelInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Label::LabelInfo *arg1 = (Script::Label::LabelInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  LabelInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"LabelInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Label__LabelInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelInfoArray_frompointer" "', argument " "1"" of type '" "Script::Label::LabelInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Label::LabelInfo * >(argp1);
  result = (LabelInfoArray *)LabelInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_LabelInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LabelInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_LabelInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ModuleInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  ModuleInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ModuleInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ModuleInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (ModuleInfoArray *)new_ModuleInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ModuleInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ModuleInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleInfoArray *arg1 = (ModuleInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ModuleInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ModuleInfoArray" "', argument " "1"" of type '" "ModuleInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleInfoArray * >(argp1);
  delete_ModuleInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleInfoArray *arg1 = (ModuleInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Module::ModuleInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfoArray___getitem__" "', argument " "1"" of type '" "ModuleInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = ModuleInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Module::ModuleInfo(static_cast< const Script::Module::ModuleInfo& >(result))), SWIGTYPE_p_Script__Module__ModuleInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleInfoArray *arg1 = (ModuleInfoArray *) 0 ;
  size_t arg2 ;
  Script::Module::ModuleInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfoArray___setitem__" "', argument " "1"" of type '" "ModuleInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Module__ModuleInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ModuleInfoArray___setitem__" "', argument " "3"" of type '" "Script::Module::ModuleInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ModuleInfoArray___setitem__" "', argument " "3"" of type '" "Script::Module::ModuleInfo""'");
    } else {
      Script::Module::ModuleInfo * temp = reinterpret_cast< Script::Module::ModuleInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ModuleInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleInfoArray *arg1 = (ModuleInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Module::ModuleInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfoArray_cast" "', argument " "1"" of type '" "ModuleInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleInfoArray * >(argp1);
  result = (Script::Module::ModuleInfo *)ModuleInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleInfo *arg1 = (Script::Module::ModuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ModuleInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleInfoArray_frompointer" "', argument " "1"" of type '" "Script::Module::ModuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleInfo * >(argp1);
  result = (ModuleInfoArray *)ModuleInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ModuleInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ModuleInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ModuleInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ModuleSectionInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  ModuleSectionInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_ModuleSectionInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ModuleSectionInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (ModuleSectionInfoArray *)new_ModuleSectionInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ModuleSectionInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ModuleSectionInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleSectionInfoArray *arg1 = (ModuleSectionInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_ModuleSectionInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleSectionInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ModuleSectionInfoArray" "', argument " "1"" of type '" "ModuleSectionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleSectionInfoArray * >(argp1);
  delete_ModuleSectionInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleSectionInfoArray *arg1 = (ModuleSectionInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Module::ModuleSectionInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleSectionInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfoArray___getitem__" "', argument " "1"" of type '" "ModuleSectionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleSectionInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleSectionInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = ModuleSectionInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Module::ModuleSectionInfo(static_cast< const Script::Module::ModuleSectionInfo& >(result))), SWIGTYPE_p_Script__Module__ModuleSectionInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleSectionInfoArray *arg1 = (ModuleSectionInfoArray *) 0 ;
  size_t arg2 ;
  Script::Module::ModuleSectionInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleSectionInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfoArray___setitem__" "', argument " "1"" of type '" "ModuleSectionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleSectionInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ModuleSectionInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Module__ModuleSectionInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ModuleSectionInfoArray___setitem__" "', argument " "3"" of type '" "Script::Module::ModuleSectionInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ModuleSectionInfoArray___setitem__" "', argument " "3"" of type '" "Script::Module::ModuleSectionInfo""'");
    } else {
      Script::Module::ModuleSectionInfo * temp = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ModuleSectionInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ModuleSectionInfoArray *arg1 = (ModuleSectionInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Module::ModuleSectionInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_ModuleSectionInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfoArray_cast" "', argument " "1"" of type '" "ModuleSectionInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< ModuleSectionInfoArray * >(argp1);
  result = (Script::Module::ModuleSectionInfo *)ModuleSectionInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ModuleSectionInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Module::ModuleSectionInfo *arg1 = (Script::Module::ModuleSectionInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  ModuleSectionInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"ModuleSectionInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Module__ModuleSectionInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ModuleSectionInfoArray_frompointer" "', argument " "1"" of type '" "Script::Module::ModuleSectionInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Module::ModuleSectionInfo * >(argp1);
  result = (ModuleSectionInfoArray *)ModuleSectionInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ModuleSectionInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ModuleSectionInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ModuleSectionInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_SymbolInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  SymbolInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_SymbolInfoArray",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SymbolInfoArray" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  result = (SymbolInfoArray *)new_SymbolInfoArray(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SymbolInfoArray, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SymbolInfoArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SymbolInfoArray *arg1 = (SymbolInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SymbolInfoArray",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SymbolInfoArray, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SymbolInfoArray" "', argument " "1"" of type '" "SymbolInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< SymbolInfoArray * >(argp1);
  delete_SymbolInfoArray(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfoArray___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SymbolInfoArray *arg1 = (SymbolInfoArray *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Script::Symbol::SymbolInfo result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfoArray___getitem__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SymbolInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfoArray___getitem__" "', argument " "1"" of type '" "SymbolInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< SymbolInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SymbolInfoArray___getitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = SymbolInfoArray___getitem__(arg1,arg2);
  resultobj = SWIG_NewPointerObj((new Script::Symbol::SymbolInfo(static_cast< const Script::Symbol::SymbolInfo& >(result))), SWIGTYPE_p_Script__Symbol__SymbolInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfoArray___setitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SymbolInfoArray *arg1 = (SymbolInfoArray *) 0 ;
  size_t arg2 ;
  Script::Symbol::SymbolInfo arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfoArray___setitem__",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SymbolInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfoArray___setitem__" "', argument " "1"" of type '" "SymbolInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< SymbolInfoArray * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SymbolInfoArray___setitem__" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Script__Symbol__SymbolInfo,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SymbolInfoArray___setitem__" "', argument " "3"" of type '" "Script::Symbol::SymbolInfo""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SymbolInfoArray___setitem__" "', argument " "3"" of type '" "Script::Symbol::SymbolInfo""'");
    } else {
      Script::Symbol::SymbolInfo * temp = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  SymbolInfoArray___setitem__(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfoArray_cast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SymbolInfoArray *arg1 = (SymbolInfoArray *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Script::Symbol::SymbolInfo *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfoArray_cast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_SymbolInfoArray, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfoArray_cast" "', argument " "1"" of type '" "SymbolInfoArray *""'"); 
  }
  arg1 = reinterpret_cast< SymbolInfoArray * >(argp1);
  result = (Script::Symbol::SymbolInfo *)SymbolInfoArray_cast(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SymbolInfoArray_frompointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Script::Symbol::SymbolInfo *arg1 = (Script::Symbol::SymbolInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SymbolInfoArray *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SymbolInfoArray_frompointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Script__Symbol__SymbolInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SymbolInfoArray_frompointer" "', argument " "1"" of type '" "Script::Symbol::SymbolInfo *""'"); 
  }
  arg1 = reinterpret_cast< Script::Symbol::SymbolInfo * >(argp1);
  result = (SymbolInfoArray *)SymbolInfoArray_frompointer(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_SymbolInfoArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SymbolInfoArray_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_SymbolInfoArray, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_intp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_intp",0,0)) SWIG_fail;
  result = (int *)new_intp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_copy_intp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"copy_intp",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "copy_intp" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int *)copy_intp(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_intp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_intp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_intp" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  delete_intp(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intp_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"intp_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intp_assign" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "intp_assign" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  intp_assign(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_intp_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int *arg1 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"intp_value",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "intp_value" "', argument " "1"" of type '" "int *""'"); 
  }
  arg1 = reinterpret_cast< int * >(argp1);
  result = (int)intp_value(arg1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_uintp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_uintp",0,0)) SWIG_fail;
  result = (unsigned int *)new_uintp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_copy_uintp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"copy_uintp",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "copy_uintp" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = (unsigned int *)copy_uintp(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_uintp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_uintp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_uintp" "', argument " "1"" of type '" "unsigned int *""'"); 
  }
  arg1 = reinterpret_cast< unsigned int * >(argp1);
  delete_uintp(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_uintp_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"uintp_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "uintp_assign" "', argument " "1"" of type '" "unsigned int *""'"); 
  }
  arg1 = reinterpret_cast< unsigned int * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "uintp_assign" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  uintp_assign(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_uintp_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"uintp_value",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "uintp_value" "', argument " "1"" of type '" "unsigned int *""'"); 
  }
  arg1 = reinterpret_cast< unsigned int * >(argp1);
  result = (unsigned int)uintp_value(arg1);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_duintp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_duintp",0,0)) SWIG_fail;
  result = (duint *)new_duintp();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_copy_duintp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint arg1 ;
  unsigned long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  duint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"copy_duintp",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "copy_duintp" "', argument " "1"" of type '" "duint""'");
  } 
  arg1 = static_cast< duint >(val1);
  result = (duint *)copy_duintp(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_duintp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint *arg1 = (duint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_duintp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_duintp" "', argument " "1"" of type '" "duint *""'"); 
  }
  arg1 = reinterpret_cast< duint * >(argp1);
  delete_duintp(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_duintp_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint *arg1 = (duint *) 0 ;
  duint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"duintp_assign",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "duintp_assign" "', argument " "1"" of type '" "duint *""'"); 
  }
  arg1 = reinterpret_cast< duint * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "duintp_assign" "', argument " "2"" of type '" "duint""'");
  } 
  arg2 = static_cast< duint >(val2);
  duintp_assign(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_duintp_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  duint *arg1 = (duint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  duint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"duintp_value",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_long_long, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "duintp_value" "', argument " "1"" of type '" "duint *""'"); 
  }
  arg1 = reinterpret_cast< duint * >(argp1);
  result = (duint)duintp_value(arg1);
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"cdata", _wrap_cdata, METH_VARARGS, (char *)"cdata(void * ptr, size_t nelements=1) -> SWIGCDATA"},
	 { (char *)"memmove", _wrap_memmove, METH_VARARGS, (char *)"memmove(void * data, void const * indata)"},
	 { (char *)"ListInfo_count_set", _wrap_ListInfo_count_set, METH_VARARGS, (char *)"ListInfo_count_set(ListInfo self, int count)"},
	 { (char *)"ListInfo_count_get", _wrap_ListInfo_count_get, METH_VARARGS, (char *)"ListInfo_count_get(ListInfo self) -> int"},
	 { (char *)"ListInfo_size_set", _wrap_ListInfo_size_set, METH_VARARGS, (char *)"ListInfo_size_set(ListInfo self, size_t size)"},
	 { (char *)"ListInfo_size_get", _wrap_ListInfo_size_get, METH_VARARGS, (char *)"ListInfo_size_get(ListInfo self) -> size_t"},
	 { (char *)"ListInfo_data_set", _wrap_ListInfo_data_set, METH_VARARGS, (char *)"ListInfo_data_set(ListInfo self, void * data)"},
	 { (char *)"ListInfo_data_get", _wrap_ListInfo_data_get, METH_VARARGS, (char *)"ListInfo_data_get(ListInfo self) -> void *"},
	 { (char *)"new_ListInfo", _wrap_new_ListInfo, METH_VARARGS, (char *)"new_ListInfo() -> ListInfo"},
	 { (char *)"delete_ListInfo", _wrap_delete_ListInfo, METH_VARARGS, (char *)"delete_ListInfo(ListInfo self)"},
	 { (char *)"ListInfo_swigregister", ListInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"BridgeInit", _wrap_BridgeInit, METH_VARARGS, (char *)"BridgeInit() -> wchar_t const *"},
	 { (char *)"BridgeStart", _wrap_BridgeStart, METH_VARARGS, (char *)"BridgeStart() -> wchar_t const *"},
	 { (char *)"BridgeAlloc", _wrap_BridgeAlloc, METH_VARARGS, (char *)"BridgeAlloc(size_t size) -> void *"},
	 { (char *)"BridgeFree", _wrap_BridgeFree, METH_VARARGS, (char *)"BridgeFree(void * ptr)"},
	 { (char *)"BridgeSettingGet", _wrap_BridgeSettingGet, METH_VARARGS, (char *)"BridgeSettingGet(char const * section, char const * key, char * value) -> bool"},
	 { (char *)"BridgeSettingGetUint", _wrap_BridgeSettingGetUint, METH_VARARGS, (char *)"BridgeSettingGetUint(char const * section, char const * key, duint * value) -> bool"},
	 { (char *)"BridgeSettingSet", _wrap_BridgeSettingSet, METH_VARARGS, (char *)"BridgeSettingSet(char const * section, char const * key, char const * value) -> bool"},
	 { (char *)"BridgeSettingSetUint", _wrap_BridgeSettingSetUint, METH_VARARGS, (char *)"BridgeSettingSetUint(char const * section, char const * key, duint value) -> bool"},
	 { (char *)"BridgeSettingFlush", _wrap_BridgeSettingFlush, METH_VARARGS, (char *)"BridgeSettingFlush() -> bool"},
	 { (char *)"BridgeSettingRead", _wrap_BridgeSettingRead, METH_VARARGS, (char *)"BridgeSettingRead(int * errorLine) -> bool"},
	 { (char *)"BridgeGetDbgVersion", _wrap_BridgeGetDbgVersion, METH_VARARGS, (char *)"BridgeGetDbgVersion() -> int"},
	 { (char *)"MEMORY_BASIC_INFORMATION_BaseAddress_set", _wrap_MEMORY_BASIC_INFORMATION_BaseAddress_set, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_BaseAddress_set(MEMORY_BASIC_INFORMATION self, PVOID BaseAddress)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_BaseAddress_get", _wrap_MEMORY_BASIC_INFORMATION_BaseAddress_get, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_BaseAddress_get(MEMORY_BASIC_INFORMATION self) -> PVOID"},
	 { (char *)"MEMORY_BASIC_INFORMATION_AllocationBase_set", _wrap_MEMORY_BASIC_INFORMATION_AllocationBase_set, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_AllocationBase_set(MEMORY_BASIC_INFORMATION self, PVOID AllocationBase)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_AllocationBase_get", _wrap_MEMORY_BASIC_INFORMATION_AllocationBase_get, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_AllocationBase_get(MEMORY_BASIC_INFORMATION self) -> PVOID"},
	 { (char *)"MEMORY_BASIC_INFORMATION_AllocationProtect_set", _wrap_MEMORY_BASIC_INFORMATION_AllocationProtect_set, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_AllocationProtect_set(MEMORY_BASIC_INFORMATION self, DWORD AllocationProtect)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_AllocationProtect_get", _wrap_MEMORY_BASIC_INFORMATION_AllocationProtect_get, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_AllocationProtect_get(MEMORY_BASIC_INFORMATION self) -> DWORD"},
	 { (char *)"MEMORY_BASIC_INFORMATION_RegionSize_set", _wrap_MEMORY_BASIC_INFORMATION_RegionSize_set, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_RegionSize_set(MEMORY_BASIC_INFORMATION self, duint RegionSize)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_RegionSize_get", _wrap_MEMORY_BASIC_INFORMATION_RegionSize_get, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_RegionSize_get(MEMORY_BASIC_INFORMATION self) -> duint"},
	 { (char *)"MEMORY_BASIC_INFORMATION_State_set", _wrap_MEMORY_BASIC_INFORMATION_State_set, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_State_set(MEMORY_BASIC_INFORMATION self, DWORD State)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_State_get", _wrap_MEMORY_BASIC_INFORMATION_State_get, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_State_get(MEMORY_BASIC_INFORMATION self) -> DWORD"},
	 { (char *)"MEMORY_BASIC_INFORMATION_Protect_set", _wrap_MEMORY_BASIC_INFORMATION_Protect_set, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_Protect_set(MEMORY_BASIC_INFORMATION self, DWORD Protect)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_Protect_get", _wrap_MEMORY_BASIC_INFORMATION_Protect_get, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_Protect_get(MEMORY_BASIC_INFORMATION self) -> DWORD"},
	 { (char *)"MEMORY_BASIC_INFORMATION_Type_set", _wrap_MEMORY_BASIC_INFORMATION_Type_set, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_Type_set(MEMORY_BASIC_INFORMATION self, DWORD Type)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_Type_get", _wrap_MEMORY_BASIC_INFORMATION_Type_get, METH_VARARGS, (char *)"MEMORY_BASIC_INFORMATION_Type_get(MEMORY_BASIC_INFORMATION self) -> DWORD"},
	 { (char *)"new_MEMORY_BASIC_INFORMATION", _wrap_new_MEMORY_BASIC_INFORMATION, METH_VARARGS, (char *)"new_MEMORY_BASIC_INFORMATION() -> MEMORY_BASIC_INFORMATION"},
	 { (char *)"delete_MEMORY_BASIC_INFORMATION", _wrap_delete_MEMORY_BASIC_INFORMATION, METH_VARARGS, (char *)"delete_MEMORY_BASIC_INFORMATION(MEMORY_BASIC_INFORMATION self)"},
	 { (char *)"MEMORY_BASIC_INFORMATION_swigregister", MEMORY_BASIC_INFORMATION_swigregister, METH_VARARGS, NULL},
	 { (char *)"MEMPAGE_mbi_set", _wrap_MEMPAGE_mbi_set, METH_VARARGS, (char *)"MEMPAGE_mbi_set(MEMPAGE self, MEMORY_BASIC_INFORMATION mbi)"},
	 { (char *)"MEMPAGE_mbi_get", _wrap_MEMPAGE_mbi_get, METH_VARARGS, (char *)"MEMPAGE_mbi_get(MEMPAGE self) -> MEMORY_BASIC_INFORMATION"},
	 { (char *)"MEMPAGE_info_set", _wrap_MEMPAGE_info_set, METH_VARARGS, (char *)"MEMPAGE_info_set(MEMPAGE self, char [256] info)"},
	 { (char *)"MEMPAGE_info_get", _wrap_MEMPAGE_info_get, METH_VARARGS, (char *)"MEMPAGE_info_get(MEMPAGE self) -> char [256]"},
	 { (char *)"new_MEMPAGE", _wrap_new_MEMPAGE, METH_VARARGS, (char *)"new_MEMPAGE() -> MEMPAGE"},
	 { (char *)"delete_MEMPAGE", _wrap_delete_MEMPAGE, METH_VARARGS, (char *)"delete_MEMPAGE(MEMPAGE self)"},
	 { (char *)"MEMPAGE_swigregister", MEMPAGE_swigregister, METH_VARARGS, NULL},
	 { (char *)"MEMMAP_count_set", _wrap_MEMMAP_count_set, METH_VARARGS, (char *)"MEMMAP_count_set(MEMMAP self, int count)"},
	 { (char *)"MEMMAP_count_get", _wrap_MEMMAP_count_get, METH_VARARGS, (char *)"MEMMAP_count_get(MEMMAP self) -> int"},
	 { (char *)"MEMMAP_page_set", _wrap_MEMMAP_page_set, METH_VARARGS, (char *)"MEMMAP_page_set(MEMMAP self, MEMPAGE page)"},
	 { (char *)"MEMMAP_page_get", _wrap_MEMMAP_page_get, METH_VARARGS, (char *)"MEMMAP_page_get(MEMMAP self) -> MEMPAGE"},
	 { (char *)"new_MEMMAP", _wrap_new_MEMMAP, METH_VARARGS, (char *)"new_MEMMAP() -> MEMMAP"},
	 { (char *)"delete_MEMMAP", _wrap_delete_MEMMAP, METH_VARARGS, (char *)"delete_MEMMAP(MEMMAP self)"},
	 { (char *)"MEMMAP_swigregister", MEMMAP_swigregister, METH_VARARGS, NULL},
	 { (char *)"BRIDGEBP_type_set", _wrap_BRIDGEBP_type_set, METH_VARARGS, (char *)"BRIDGEBP_type_set(BRIDGEBP self, BPXTYPE type)"},
	 { (char *)"BRIDGEBP_type_get", _wrap_BRIDGEBP_type_get, METH_VARARGS, (char *)"BRIDGEBP_type_get(BRIDGEBP self) -> BPXTYPE"},
	 { (char *)"BRIDGEBP_addr_set", _wrap_BRIDGEBP_addr_set, METH_VARARGS, (char *)"BRIDGEBP_addr_set(BRIDGEBP self, duint addr)"},
	 { (char *)"BRIDGEBP_addr_get", _wrap_BRIDGEBP_addr_get, METH_VARARGS, (char *)"BRIDGEBP_addr_get(BRIDGEBP self) -> duint"},
	 { (char *)"BRIDGEBP_enabled_set", _wrap_BRIDGEBP_enabled_set, METH_VARARGS, (char *)"BRIDGEBP_enabled_set(BRIDGEBP self, bool enabled)"},
	 { (char *)"BRIDGEBP_enabled_get", _wrap_BRIDGEBP_enabled_get, METH_VARARGS, (char *)"BRIDGEBP_enabled_get(BRIDGEBP self) -> bool"},
	 { (char *)"BRIDGEBP_singleshoot_set", _wrap_BRIDGEBP_singleshoot_set, METH_VARARGS, (char *)"BRIDGEBP_singleshoot_set(BRIDGEBP self, bool singleshoot)"},
	 { (char *)"BRIDGEBP_singleshoot_get", _wrap_BRIDGEBP_singleshoot_get, METH_VARARGS, (char *)"BRIDGEBP_singleshoot_get(BRIDGEBP self) -> bool"},
	 { (char *)"BRIDGEBP_active_set", _wrap_BRIDGEBP_active_set, METH_VARARGS, (char *)"BRIDGEBP_active_set(BRIDGEBP self, bool active)"},
	 { (char *)"BRIDGEBP_active_get", _wrap_BRIDGEBP_active_get, METH_VARARGS, (char *)"BRIDGEBP_active_get(BRIDGEBP self) -> bool"},
	 { (char *)"BRIDGEBP_name_set", _wrap_BRIDGEBP_name_set, METH_VARARGS, (char *)"BRIDGEBP_name_set(BRIDGEBP self, char [256] name)"},
	 { (char *)"BRIDGEBP_name_get", _wrap_BRIDGEBP_name_get, METH_VARARGS, (char *)"BRIDGEBP_name_get(BRIDGEBP self) -> char [256]"},
	 { (char *)"BRIDGEBP_mod_set", _wrap_BRIDGEBP_mod_set, METH_VARARGS, (char *)"BRIDGEBP_mod_set(BRIDGEBP self, char [256] mod)"},
	 { (char *)"BRIDGEBP_mod_get", _wrap_BRIDGEBP_mod_get, METH_VARARGS, (char *)"BRIDGEBP_mod_get(BRIDGEBP self) -> char [256]"},
	 { (char *)"BRIDGEBP_slot_set", _wrap_BRIDGEBP_slot_set, METH_VARARGS, (char *)"BRIDGEBP_slot_set(BRIDGEBP self, unsigned short slot)"},
	 { (char *)"BRIDGEBP_slot_get", _wrap_BRIDGEBP_slot_get, METH_VARARGS, (char *)"BRIDGEBP_slot_get(BRIDGEBP self) -> unsigned short"},
	 { (char *)"BRIDGEBP_typeEx_set", _wrap_BRIDGEBP_typeEx_set, METH_VARARGS, (char *)"BRIDGEBP_typeEx_set(BRIDGEBP self, unsigned char typeEx)"},
	 { (char *)"BRIDGEBP_typeEx_get", _wrap_BRIDGEBP_typeEx_get, METH_VARARGS, (char *)"BRIDGEBP_typeEx_get(BRIDGEBP self) -> unsigned char"},
	 { (char *)"BRIDGEBP_hwSize_set", _wrap_BRIDGEBP_hwSize_set, METH_VARARGS, (char *)"BRIDGEBP_hwSize_set(BRIDGEBP self, unsigned char hwSize)"},
	 { (char *)"BRIDGEBP_hwSize_get", _wrap_BRIDGEBP_hwSize_get, METH_VARARGS, (char *)"BRIDGEBP_hwSize_get(BRIDGEBP self) -> unsigned char"},
	 { (char *)"BRIDGEBP_hitCount_set", _wrap_BRIDGEBP_hitCount_set, METH_VARARGS, (char *)"BRIDGEBP_hitCount_set(BRIDGEBP self, unsigned int hitCount)"},
	 { (char *)"BRIDGEBP_hitCount_get", _wrap_BRIDGEBP_hitCount_get, METH_VARARGS, (char *)"BRIDGEBP_hitCount_get(BRIDGEBP self) -> unsigned int"},
	 { (char *)"BRIDGEBP_fastResume_set", _wrap_BRIDGEBP_fastResume_set, METH_VARARGS, (char *)"BRIDGEBP_fastResume_set(BRIDGEBP self, bool fastResume)"},
	 { (char *)"BRIDGEBP_fastResume_get", _wrap_BRIDGEBP_fastResume_get, METH_VARARGS, (char *)"BRIDGEBP_fastResume_get(BRIDGEBP self) -> bool"},
	 { (char *)"BRIDGEBP_silent_set", _wrap_BRIDGEBP_silent_set, METH_VARARGS, (char *)"BRIDGEBP_silent_set(BRIDGEBP self, bool silent)"},
	 { (char *)"BRIDGEBP_silent_get", _wrap_BRIDGEBP_silent_get, METH_VARARGS, (char *)"BRIDGEBP_silent_get(BRIDGEBP self) -> bool"},
	 { (char *)"BRIDGEBP_breakCondition_set", _wrap_BRIDGEBP_breakCondition_set, METH_VARARGS, (char *)"BRIDGEBP_breakCondition_set(BRIDGEBP self, char [256] breakCondition)"},
	 { (char *)"BRIDGEBP_breakCondition_get", _wrap_BRIDGEBP_breakCondition_get, METH_VARARGS, (char *)"BRIDGEBP_breakCondition_get(BRIDGEBP self) -> char [256]"},
	 { (char *)"BRIDGEBP_logText_set", _wrap_BRIDGEBP_logText_set, METH_VARARGS, (char *)"BRIDGEBP_logText_set(BRIDGEBP self, char [256] logText)"},
	 { (char *)"BRIDGEBP_logText_get", _wrap_BRIDGEBP_logText_get, METH_VARARGS, (char *)"BRIDGEBP_logText_get(BRIDGEBP self) -> char [256]"},
	 { (char *)"BRIDGEBP_logCondition_set", _wrap_BRIDGEBP_logCondition_set, METH_VARARGS, (char *)"BRIDGEBP_logCondition_set(BRIDGEBP self, char [256] logCondition)"},
	 { (char *)"BRIDGEBP_logCondition_get", _wrap_BRIDGEBP_logCondition_get, METH_VARARGS, (char *)"BRIDGEBP_logCondition_get(BRIDGEBP self) -> char [256]"},
	 { (char *)"BRIDGEBP_commandText_set", _wrap_BRIDGEBP_commandText_set, METH_VARARGS, (char *)"BRIDGEBP_commandText_set(BRIDGEBP self, char [256] commandText)"},
	 { (char *)"BRIDGEBP_commandText_get", _wrap_BRIDGEBP_commandText_get, METH_VARARGS, (char *)"BRIDGEBP_commandText_get(BRIDGEBP self) -> char [256]"},
	 { (char *)"BRIDGEBP_commandCondition_set", _wrap_BRIDGEBP_commandCondition_set, METH_VARARGS, (char *)"BRIDGEBP_commandCondition_set(BRIDGEBP self, char [256] commandCondition)"},
	 { (char *)"BRIDGEBP_commandCondition_get", _wrap_BRIDGEBP_commandCondition_get, METH_VARARGS, (char *)"BRIDGEBP_commandCondition_get(BRIDGEBP self) -> char [256]"},
	 { (char *)"new_BRIDGEBP", _wrap_new_BRIDGEBP, METH_VARARGS, (char *)"new_BRIDGEBP() -> BRIDGEBP"},
	 { (char *)"delete_BRIDGEBP", _wrap_delete_BRIDGEBP, METH_VARARGS, (char *)"delete_BRIDGEBP(BRIDGEBP self)"},
	 { (char *)"BRIDGEBP_swigregister", BRIDGEBP_swigregister, METH_VARARGS, NULL},
	 { (char *)"BPMAP_count_set", _wrap_BPMAP_count_set, METH_VARARGS, (char *)"BPMAP_count_set(BPMAP self, int count)"},
	 { (char *)"BPMAP_count_get", _wrap_BPMAP_count_get, METH_VARARGS, (char *)"BPMAP_count_get(BPMAP self) -> int"},
	 { (char *)"BPMAP_bp_set", _wrap_BPMAP_bp_set, METH_VARARGS, (char *)"BPMAP_bp_set(BPMAP self, BRIDGEBP bp)"},
	 { (char *)"BPMAP_bp_get", _wrap_BPMAP_bp_get, METH_VARARGS, (char *)"BPMAP_bp_get(BPMAP self) -> BRIDGEBP"},
	 { (char *)"new_BPMAP", _wrap_new_BPMAP, METH_VARARGS, (char *)"new_BPMAP() -> BPMAP"},
	 { (char *)"delete_BPMAP", _wrap_delete_BPMAP, METH_VARARGS, (char *)"delete_BPMAP(BPMAP self)"},
	 { (char *)"BPMAP_swigregister", BPMAP_swigregister, METH_VARARGS, NULL},
	 { (char *)"WATCHINFO_WatchName_set", _wrap_WATCHINFO_WatchName_set, METH_VARARGS, (char *)"WATCHINFO_WatchName_set(WATCHINFO self, char [256] WatchName)"},
	 { (char *)"WATCHINFO_WatchName_get", _wrap_WATCHINFO_WatchName_get, METH_VARARGS, (char *)"WATCHINFO_WatchName_get(WATCHINFO self) -> char [256]"},
	 { (char *)"WATCHINFO_Expression_set", _wrap_WATCHINFO_Expression_set, METH_VARARGS, (char *)"WATCHINFO_Expression_set(WATCHINFO self, char [256] Expression)"},
	 { (char *)"WATCHINFO_Expression_get", _wrap_WATCHINFO_Expression_get, METH_VARARGS, (char *)"WATCHINFO_Expression_get(WATCHINFO self) -> char [256]"},
	 { (char *)"WATCHINFO_window_set", _wrap_WATCHINFO_window_set, METH_VARARGS, (char *)"WATCHINFO_window_set(WATCHINFO self, unsigned int window)"},
	 { (char *)"WATCHINFO_window_get", _wrap_WATCHINFO_window_get, METH_VARARGS, (char *)"WATCHINFO_window_get(WATCHINFO self) -> unsigned int"},
	 { (char *)"WATCHINFO_id_set", _wrap_WATCHINFO_id_set, METH_VARARGS, (char *)"WATCHINFO_id_set(WATCHINFO self, unsigned int id)"},
	 { (char *)"WATCHINFO_id_get", _wrap_WATCHINFO_id_get, METH_VARARGS, (char *)"WATCHINFO_id_get(WATCHINFO self) -> unsigned int"},
	 { (char *)"WATCHINFO_varType_set", _wrap_WATCHINFO_varType_set, METH_VARARGS, (char *)"WATCHINFO_varType_set(WATCHINFO self, WATCHVARTYPE varType)"},
	 { (char *)"WATCHINFO_varType_get", _wrap_WATCHINFO_varType_get, METH_VARARGS, (char *)"WATCHINFO_varType_get(WATCHINFO self) -> WATCHVARTYPE"},
	 { (char *)"WATCHINFO_watchdogMode_set", _wrap_WATCHINFO_watchdogMode_set, METH_VARARGS, (char *)"WATCHINFO_watchdogMode_set(WATCHINFO self, WATCHDOGMODE watchdogMode)"},
	 { (char *)"WATCHINFO_watchdogMode_get", _wrap_WATCHINFO_watchdogMode_get, METH_VARARGS, (char *)"WATCHINFO_watchdogMode_get(WATCHINFO self) -> WATCHDOGMODE"},
	 { (char *)"WATCHINFO_value_set", _wrap_WATCHINFO_value_set, METH_VARARGS, (char *)"WATCHINFO_value_set(WATCHINFO self, duint value)"},
	 { (char *)"WATCHINFO_value_get", _wrap_WATCHINFO_value_get, METH_VARARGS, (char *)"WATCHINFO_value_get(WATCHINFO self) -> duint"},
	 { (char *)"WATCHINFO_watchdogTriggered_set", _wrap_WATCHINFO_watchdogTriggered_set, METH_VARARGS, (char *)"WATCHINFO_watchdogTriggered_set(WATCHINFO self, bool watchdogTriggered)"},
	 { (char *)"WATCHINFO_watchdogTriggered_get", _wrap_WATCHINFO_watchdogTriggered_get, METH_VARARGS, (char *)"WATCHINFO_watchdogTriggered_get(WATCHINFO self) -> bool"},
	 { (char *)"new_WATCHINFO", _wrap_new_WATCHINFO, METH_VARARGS, (char *)"new_WATCHINFO() -> WATCHINFO"},
	 { (char *)"delete_WATCHINFO", _wrap_delete_WATCHINFO, METH_VARARGS, (char *)"delete_WATCHINFO(WATCHINFO self)"},
	 { (char *)"WATCHINFO_swigregister", WATCHINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"FUNCTION_start_set", _wrap_FUNCTION_start_set, METH_VARARGS, (char *)"FUNCTION_start_set(FUNCTION self, duint start)"},
	 { (char *)"FUNCTION_start_get", _wrap_FUNCTION_start_get, METH_VARARGS, (char *)"FUNCTION_start_get(FUNCTION self) -> duint"},
	 { (char *)"FUNCTION_end_set", _wrap_FUNCTION_end_set, METH_VARARGS, (char *)"FUNCTION_end_set(FUNCTION self, duint end)"},
	 { (char *)"FUNCTION_end_get", _wrap_FUNCTION_end_get, METH_VARARGS, (char *)"FUNCTION_end_get(FUNCTION self) -> duint"},
	 { (char *)"FUNCTION_instrcount_set", _wrap_FUNCTION_instrcount_set, METH_VARARGS, (char *)"FUNCTION_instrcount_set(FUNCTION self, duint instrcount)"},
	 { (char *)"FUNCTION_instrcount_get", _wrap_FUNCTION_instrcount_get, METH_VARARGS, (char *)"FUNCTION_instrcount_get(FUNCTION self) -> duint"},
	 { (char *)"new_FUNCTION", _wrap_new_FUNCTION, METH_VARARGS, (char *)"new_FUNCTION() -> FUNCTION"},
	 { (char *)"delete_FUNCTION", _wrap_delete_FUNCTION, METH_VARARGS, (char *)"delete_FUNCTION(FUNCTION self)"},
	 { (char *)"FUNCTION_swigregister", FUNCTION_swigregister, METH_VARARGS, NULL},
	 { (char *)"LOOP_depth_set", _wrap_LOOP_depth_set, METH_VARARGS, (char *)"LOOP_depth_set(LOOP self, int depth)"},
	 { (char *)"LOOP_depth_get", _wrap_LOOP_depth_get, METH_VARARGS, (char *)"LOOP_depth_get(LOOP self) -> int"},
	 { (char *)"LOOP_start_set", _wrap_LOOP_start_set, METH_VARARGS, (char *)"LOOP_start_set(LOOP self, duint start)"},
	 { (char *)"LOOP_start_get", _wrap_LOOP_start_get, METH_VARARGS, (char *)"LOOP_start_get(LOOP self) -> duint"},
	 { (char *)"LOOP_end_set", _wrap_LOOP_end_set, METH_VARARGS, (char *)"LOOP_end_set(LOOP self, duint end)"},
	 { (char *)"LOOP_end_get", _wrap_LOOP_end_get, METH_VARARGS, (char *)"LOOP_end_get(LOOP self) -> duint"},
	 { (char *)"LOOP_instrcount_set", _wrap_LOOP_instrcount_set, METH_VARARGS, (char *)"LOOP_instrcount_set(LOOP self, duint instrcount)"},
	 { (char *)"LOOP_instrcount_get", _wrap_LOOP_instrcount_get, METH_VARARGS, (char *)"LOOP_instrcount_get(LOOP self) -> duint"},
	 { (char *)"new_LOOP", _wrap_new_LOOP, METH_VARARGS, (char *)"new_LOOP() -> LOOP"},
	 { (char *)"delete_LOOP", _wrap_delete_LOOP, METH_VARARGS, (char *)"delete_LOOP(LOOP self)"},
	 { (char *)"LOOP_swigregister", LOOP_swigregister, METH_VARARGS, NULL},
	 { (char *)"BRIDGE_ADDRINFO_flags_set", _wrap_BRIDGE_ADDRINFO_flags_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_flags_set(BRIDGE_ADDRINFO self, int flags)"},
	 { (char *)"BRIDGE_ADDRINFO_flags_get", _wrap_BRIDGE_ADDRINFO_flags_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_flags_get(BRIDGE_ADDRINFO self) -> int"},
	 { (char *)"BRIDGE_ADDRINFO_module_set", _wrap_BRIDGE_ADDRINFO_module_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_module_set(BRIDGE_ADDRINFO self, char [256] module)"},
	 { (char *)"BRIDGE_ADDRINFO_module_get", _wrap_BRIDGE_ADDRINFO_module_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_module_get(BRIDGE_ADDRINFO self) -> char [256]"},
	 { (char *)"BRIDGE_ADDRINFO_label_set", _wrap_BRIDGE_ADDRINFO_label_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_label_set(BRIDGE_ADDRINFO self, char [256] label)"},
	 { (char *)"BRIDGE_ADDRINFO_label_get", _wrap_BRIDGE_ADDRINFO_label_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_label_get(BRIDGE_ADDRINFO self) -> char [256]"},
	 { (char *)"BRIDGE_ADDRINFO_comment_set", _wrap_BRIDGE_ADDRINFO_comment_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_comment_set(BRIDGE_ADDRINFO self, char [512] comment)"},
	 { (char *)"BRIDGE_ADDRINFO_comment_get", _wrap_BRIDGE_ADDRINFO_comment_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_comment_get(BRIDGE_ADDRINFO self) -> char [512]"},
	 { (char *)"BRIDGE_ADDRINFO_isbookmark_set", _wrap_BRIDGE_ADDRINFO_isbookmark_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_isbookmark_set(BRIDGE_ADDRINFO self, bool isbookmark)"},
	 { (char *)"BRIDGE_ADDRINFO_isbookmark_get", _wrap_BRIDGE_ADDRINFO_isbookmark_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_isbookmark_get(BRIDGE_ADDRINFO self) -> bool"},
	 { (char *)"BRIDGE_ADDRINFO_function_set", _wrap_BRIDGE_ADDRINFO_function_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_function_set(BRIDGE_ADDRINFO self, FUNCTION function)"},
	 { (char *)"BRIDGE_ADDRINFO_function_get", _wrap_BRIDGE_ADDRINFO_function_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_function_get(BRIDGE_ADDRINFO self) -> FUNCTION"},
	 { (char *)"BRIDGE_ADDRINFO_loop_set", _wrap_BRIDGE_ADDRINFO_loop_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_loop_set(BRIDGE_ADDRINFO self, LOOP loop)"},
	 { (char *)"BRIDGE_ADDRINFO_loop_get", _wrap_BRIDGE_ADDRINFO_loop_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_loop_get(BRIDGE_ADDRINFO self) -> LOOP"},
	 { (char *)"BRIDGE_ADDRINFO_args_set", _wrap_BRIDGE_ADDRINFO_args_set, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_args_set(BRIDGE_ADDRINFO self, FUNCTION args)"},
	 { (char *)"BRIDGE_ADDRINFO_args_get", _wrap_BRIDGE_ADDRINFO_args_get, METH_VARARGS, (char *)"BRIDGE_ADDRINFO_args_get(BRIDGE_ADDRINFO self) -> FUNCTION"},
	 { (char *)"new_BRIDGE_ADDRINFO", _wrap_new_BRIDGE_ADDRINFO, METH_VARARGS, (char *)"new_BRIDGE_ADDRINFO() -> BRIDGE_ADDRINFO"},
	 { (char *)"delete_BRIDGE_ADDRINFO", _wrap_delete_BRIDGE_ADDRINFO, METH_VARARGS, (char *)"delete_BRIDGE_ADDRINFO(BRIDGE_ADDRINFO self)"},
	 { (char *)"BRIDGE_ADDRINFO_swigregister", BRIDGE_ADDRINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"SYMBOLINFO_addr_set", _wrap_SYMBOLINFO_addr_set, METH_VARARGS, (char *)"SYMBOLINFO_addr_set(SYMBOLINFO self, duint addr)"},
	 { (char *)"SYMBOLINFO_addr_get", _wrap_SYMBOLINFO_addr_get, METH_VARARGS, (char *)"SYMBOLINFO_addr_get(SYMBOLINFO self) -> duint"},
	 { (char *)"SYMBOLINFO_decoratedSymbol_set", _wrap_SYMBOLINFO_decoratedSymbol_set, METH_VARARGS, (char *)"SYMBOLINFO_decoratedSymbol_set(SYMBOLINFO self, char * decoratedSymbol)"},
	 { (char *)"SYMBOLINFO_decoratedSymbol_get", _wrap_SYMBOLINFO_decoratedSymbol_get, METH_VARARGS, (char *)"SYMBOLINFO_decoratedSymbol_get(SYMBOLINFO self) -> char *"},
	 { (char *)"SYMBOLINFO_undecoratedSymbol_set", _wrap_SYMBOLINFO_undecoratedSymbol_set, METH_VARARGS, (char *)"SYMBOLINFO_undecoratedSymbol_set(SYMBOLINFO self, char * undecoratedSymbol)"},
	 { (char *)"SYMBOLINFO_undecoratedSymbol_get", _wrap_SYMBOLINFO_undecoratedSymbol_get, METH_VARARGS, (char *)"SYMBOLINFO_undecoratedSymbol_get(SYMBOLINFO self) -> char *"},
	 { (char *)"SYMBOLINFO_type_set", _wrap_SYMBOLINFO_type_set, METH_VARARGS, (char *)"SYMBOLINFO_type_set(SYMBOLINFO self, SYMBOLTYPE type)"},
	 { (char *)"SYMBOLINFO_type_get", _wrap_SYMBOLINFO_type_get, METH_VARARGS, (char *)"SYMBOLINFO_type_get(SYMBOLINFO self) -> SYMBOLTYPE"},
	 { (char *)"SYMBOLINFO_freeDecorated_set", _wrap_SYMBOLINFO_freeDecorated_set, METH_VARARGS, (char *)"SYMBOLINFO_freeDecorated_set(SYMBOLINFO self, bool freeDecorated)"},
	 { (char *)"SYMBOLINFO_freeDecorated_get", _wrap_SYMBOLINFO_freeDecorated_get, METH_VARARGS, (char *)"SYMBOLINFO_freeDecorated_get(SYMBOLINFO self) -> bool"},
	 { (char *)"SYMBOLINFO_freeUndecorated_set", _wrap_SYMBOLINFO_freeUndecorated_set, METH_VARARGS, (char *)"SYMBOLINFO_freeUndecorated_set(SYMBOLINFO self, bool freeUndecorated)"},
	 { (char *)"SYMBOLINFO_freeUndecorated_get", _wrap_SYMBOLINFO_freeUndecorated_get, METH_VARARGS, (char *)"SYMBOLINFO_freeUndecorated_get(SYMBOLINFO self) -> bool"},
	 { (char *)"new_SYMBOLINFO", _wrap_new_SYMBOLINFO, METH_VARARGS, (char *)"new_SYMBOLINFO() -> SYMBOLINFO"},
	 { (char *)"delete_SYMBOLINFO", _wrap_delete_SYMBOLINFO, METH_VARARGS, (char *)"delete_SYMBOLINFO(SYMBOLINFO self)"},
	 { (char *)"SYMBOLINFO_swigregister", SYMBOLINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"SYMBOLMODULEINFO_base_set", _wrap_SYMBOLMODULEINFO_base_set, METH_VARARGS, (char *)"SYMBOLMODULEINFO_base_set(SYMBOLMODULEINFO self, duint base)"},
	 { (char *)"SYMBOLMODULEINFO_base_get", _wrap_SYMBOLMODULEINFO_base_get, METH_VARARGS, (char *)"SYMBOLMODULEINFO_base_get(SYMBOLMODULEINFO self) -> duint"},
	 { (char *)"SYMBOLMODULEINFO_name_set", _wrap_SYMBOLMODULEINFO_name_set, METH_VARARGS, (char *)"SYMBOLMODULEINFO_name_set(SYMBOLMODULEINFO self, char [256] name)"},
	 { (char *)"SYMBOLMODULEINFO_name_get", _wrap_SYMBOLMODULEINFO_name_get, METH_VARARGS, (char *)"SYMBOLMODULEINFO_name_get(SYMBOLMODULEINFO self) -> char [256]"},
	 { (char *)"new_SYMBOLMODULEINFO", _wrap_new_SYMBOLMODULEINFO, METH_VARARGS, (char *)"new_SYMBOLMODULEINFO() -> SYMBOLMODULEINFO"},
	 { (char *)"delete_SYMBOLMODULEINFO", _wrap_delete_SYMBOLMODULEINFO, METH_VARARGS, (char *)"delete_SYMBOLMODULEINFO(SYMBOLMODULEINFO self)"},
	 { (char *)"SYMBOLMODULEINFO_swigregister", SYMBOLMODULEINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"SYMBOLCBINFO_base_set", _wrap_SYMBOLCBINFO_base_set, METH_VARARGS, (char *)"SYMBOLCBINFO_base_set(SYMBOLCBINFO self, duint base)"},
	 { (char *)"SYMBOLCBINFO_base_get", _wrap_SYMBOLCBINFO_base_get, METH_VARARGS, (char *)"SYMBOLCBINFO_base_get(SYMBOLCBINFO self) -> duint"},
	 { (char *)"SYMBOLCBINFO_cbSymbolEnum_set", _wrap_SYMBOLCBINFO_cbSymbolEnum_set, METH_VARARGS, (char *)"SYMBOLCBINFO_cbSymbolEnum_set(SYMBOLCBINFO self, CBSYMBOLENUM cbSymbolEnum)"},
	 { (char *)"SYMBOLCBINFO_cbSymbolEnum_get", _wrap_SYMBOLCBINFO_cbSymbolEnum_get, METH_VARARGS, (char *)"SYMBOLCBINFO_cbSymbolEnum_get(SYMBOLCBINFO self) -> CBSYMBOLENUM"},
	 { (char *)"SYMBOLCBINFO_user_set", _wrap_SYMBOLCBINFO_user_set, METH_VARARGS, (char *)"SYMBOLCBINFO_user_set(SYMBOLCBINFO self, void * user)"},
	 { (char *)"SYMBOLCBINFO_user_get", _wrap_SYMBOLCBINFO_user_get, METH_VARARGS, (char *)"SYMBOLCBINFO_user_get(SYMBOLCBINFO self) -> void *"},
	 { (char *)"new_SYMBOLCBINFO", _wrap_new_SYMBOLCBINFO, METH_VARARGS, (char *)"new_SYMBOLCBINFO() -> SYMBOLCBINFO"},
	 { (char *)"delete_SYMBOLCBINFO", _wrap_delete_SYMBOLCBINFO, METH_VARARGS, (char *)"delete_SYMBOLCBINFO(SYMBOLCBINFO self)"},
	 { (char *)"SYMBOLCBINFO_swigregister", SYMBOLCBINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"FLAGS_c_set", _wrap_FLAGS_c_set, METH_VARARGS, (char *)"FLAGS_c_set(FLAGS self, bool c)"},
	 { (char *)"FLAGS_c_get", _wrap_FLAGS_c_get, METH_VARARGS, (char *)"FLAGS_c_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_p_set", _wrap_FLAGS_p_set, METH_VARARGS, (char *)"FLAGS_p_set(FLAGS self, bool p)"},
	 { (char *)"FLAGS_p_get", _wrap_FLAGS_p_get, METH_VARARGS, (char *)"FLAGS_p_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_a_set", _wrap_FLAGS_a_set, METH_VARARGS, (char *)"FLAGS_a_set(FLAGS self, bool a)"},
	 { (char *)"FLAGS_a_get", _wrap_FLAGS_a_get, METH_VARARGS, (char *)"FLAGS_a_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_z_set", _wrap_FLAGS_z_set, METH_VARARGS, (char *)"FLAGS_z_set(FLAGS self, bool z)"},
	 { (char *)"FLAGS_z_get", _wrap_FLAGS_z_get, METH_VARARGS, (char *)"FLAGS_z_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_s_set", _wrap_FLAGS_s_set, METH_VARARGS, (char *)"FLAGS_s_set(FLAGS self, bool s)"},
	 { (char *)"FLAGS_s_get", _wrap_FLAGS_s_get, METH_VARARGS, (char *)"FLAGS_s_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_t_set", _wrap_FLAGS_t_set, METH_VARARGS, (char *)"FLAGS_t_set(FLAGS self, bool t)"},
	 { (char *)"FLAGS_t_get", _wrap_FLAGS_t_get, METH_VARARGS, (char *)"FLAGS_t_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_i_set", _wrap_FLAGS_i_set, METH_VARARGS, (char *)"FLAGS_i_set(FLAGS self, bool i)"},
	 { (char *)"FLAGS_i_get", _wrap_FLAGS_i_get, METH_VARARGS, (char *)"FLAGS_i_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_d_set", _wrap_FLAGS_d_set, METH_VARARGS, (char *)"FLAGS_d_set(FLAGS self, bool d)"},
	 { (char *)"FLAGS_d_get", _wrap_FLAGS_d_get, METH_VARARGS, (char *)"FLAGS_d_get(FLAGS self) -> bool"},
	 { (char *)"FLAGS_o_set", _wrap_FLAGS_o_set, METH_VARARGS, (char *)"FLAGS_o_set(FLAGS self, bool o)"},
	 { (char *)"FLAGS_o_get", _wrap_FLAGS_o_get, METH_VARARGS, (char *)"FLAGS_o_get(FLAGS self) -> bool"},
	 { (char *)"new_FLAGS", _wrap_new_FLAGS, METH_VARARGS, (char *)"new_FLAGS() -> FLAGS"},
	 { (char *)"delete_FLAGS", _wrap_delete_FLAGS, METH_VARARGS, (char *)"delete_FLAGS(FLAGS self)"},
	 { (char *)"FLAGS_swigregister", FLAGS_swigregister, METH_VARARGS, NULL},
	 { (char *)"MXCSRFIELDS_FZ_set", _wrap_MXCSRFIELDS_FZ_set, METH_VARARGS, (char *)"MXCSRFIELDS_FZ_set(MXCSRFIELDS self, bool FZ)"},
	 { (char *)"MXCSRFIELDS_FZ_get", _wrap_MXCSRFIELDS_FZ_get, METH_VARARGS, (char *)"MXCSRFIELDS_FZ_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_PM_set", _wrap_MXCSRFIELDS_PM_set, METH_VARARGS, (char *)"MXCSRFIELDS_PM_set(MXCSRFIELDS self, bool PM)"},
	 { (char *)"MXCSRFIELDS_PM_get", _wrap_MXCSRFIELDS_PM_get, METH_VARARGS, (char *)"MXCSRFIELDS_PM_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_UM_set", _wrap_MXCSRFIELDS_UM_set, METH_VARARGS, (char *)"MXCSRFIELDS_UM_set(MXCSRFIELDS self, bool UM)"},
	 { (char *)"MXCSRFIELDS_UM_get", _wrap_MXCSRFIELDS_UM_get, METH_VARARGS, (char *)"MXCSRFIELDS_UM_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_OM_set", _wrap_MXCSRFIELDS_OM_set, METH_VARARGS, (char *)"MXCSRFIELDS_OM_set(MXCSRFIELDS self, bool OM)"},
	 { (char *)"MXCSRFIELDS_OM_get", _wrap_MXCSRFIELDS_OM_get, METH_VARARGS, (char *)"MXCSRFIELDS_OM_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_ZM_set", _wrap_MXCSRFIELDS_ZM_set, METH_VARARGS, (char *)"MXCSRFIELDS_ZM_set(MXCSRFIELDS self, bool ZM)"},
	 { (char *)"MXCSRFIELDS_ZM_get", _wrap_MXCSRFIELDS_ZM_get, METH_VARARGS, (char *)"MXCSRFIELDS_ZM_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_IM_set", _wrap_MXCSRFIELDS_IM_set, METH_VARARGS, (char *)"MXCSRFIELDS_IM_set(MXCSRFIELDS self, bool IM)"},
	 { (char *)"MXCSRFIELDS_IM_get", _wrap_MXCSRFIELDS_IM_get, METH_VARARGS, (char *)"MXCSRFIELDS_IM_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_DM_set", _wrap_MXCSRFIELDS_DM_set, METH_VARARGS, (char *)"MXCSRFIELDS_DM_set(MXCSRFIELDS self, bool DM)"},
	 { (char *)"MXCSRFIELDS_DM_get", _wrap_MXCSRFIELDS_DM_get, METH_VARARGS, (char *)"MXCSRFIELDS_DM_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_DAZ_set", _wrap_MXCSRFIELDS_DAZ_set, METH_VARARGS, (char *)"MXCSRFIELDS_DAZ_set(MXCSRFIELDS self, bool DAZ)"},
	 { (char *)"MXCSRFIELDS_DAZ_get", _wrap_MXCSRFIELDS_DAZ_get, METH_VARARGS, (char *)"MXCSRFIELDS_DAZ_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_PE_set", _wrap_MXCSRFIELDS_PE_set, METH_VARARGS, (char *)"MXCSRFIELDS_PE_set(MXCSRFIELDS self, bool PE)"},
	 { (char *)"MXCSRFIELDS_PE_get", _wrap_MXCSRFIELDS_PE_get, METH_VARARGS, (char *)"MXCSRFIELDS_PE_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_UE_set", _wrap_MXCSRFIELDS_UE_set, METH_VARARGS, (char *)"MXCSRFIELDS_UE_set(MXCSRFIELDS self, bool UE)"},
	 { (char *)"MXCSRFIELDS_UE_get", _wrap_MXCSRFIELDS_UE_get, METH_VARARGS, (char *)"MXCSRFIELDS_UE_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_OE_set", _wrap_MXCSRFIELDS_OE_set, METH_VARARGS, (char *)"MXCSRFIELDS_OE_set(MXCSRFIELDS self, bool OE)"},
	 { (char *)"MXCSRFIELDS_OE_get", _wrap_MXCSRFIELDS_OE_get, METH_VARARGS, (char *)"MXCSRFIELDS_OE_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_ZE_set", _wrap_MXCSRFIELDS_ZE_set, METH_VARARGS, (char *)"MXCSRFIELDS_ZE_set(MXCSRFIELDS self, bool ZE)"},
	 { (char *)"MXCSRFIELDS_ZE_get", _wrap_MXCSRFIELDS_ZE_get, METH_VARARGS, (char *)"MXCSRFIELDS_ZE_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_DE_set", _wrap_MXCSRFIELDS_DE_set, METH_VARARGS, (char *)"MXCSRFIELDS_DE_set(MXCSRFIELDS self, bool DE)"},
	 { (char *)"MXCSRFIELDS_DE_get", _wrap_MXCSRFIELDS_DE_get, METH_VARARGS, (char *)"MXCSRFIELDS_DE_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_IE_set", _wrap_MXCSRFIELDS_IE_set, METH_VARARGS, (char *)"MXCSRFIELDS_IE_set(MXCSRFIELDS self, bool IE)"},
	 { (char *)"MXCSRFIELDS_IE_get", _wrap_MXCSRFIELDS_IE_get, METH_VARARGS, (char *)"MXCSRFIELDS_IE_get(MXCSRFIELDS self) -> bool"},
	 { (char *)"MXCSRFIELDS_RC_set", _wrap_MXCSRFIELDS_RC_set, METH_VARARGS, (char *)"MXCSRFIELDS_RC_set(MXCSRFIELDS self, unsigned short RC)"},
	 { (char *)"MXCSRFIELDS_RC_get", _wrap_MXCSRFIELDS_RC_get, METH_VARARGS, (char *)"MXCSRFIELDS_RC_get(MXCSRFIELDS self) -> unsigned short"},
	 { (char *)"new_MXCSRFIELDS", _wrap_new_MXCSRFIELDS, METH_VARARGS, (char *)"new_MXCSRFIELDS() -> MXCSRFIELDS"},
	 { (char *)"delete_MXCSRFIELDS", _wrap_delete_MXCSRFIELDS, METH_VARARGS, (char *)"delete_MXCSRFIELDS(MXCSRFIELDS self)"},
	 { (char *)"MXCSRFIELDS_swigregister", MXCSRFIELDS_swigregister, METH_VARARGS, NULL},
	 { (char *)"X87STATUSWORDFIELDS_B_set", _wrap_X87STATUSWORDFIELDS_B_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_B_set(X87STATUSWORDFIELDS self, bool B)"},
	 { (char *)"X87STATUSWORDFIELDS_B_get", _wrap_X87STATUSWORDFIELDS_B_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_B_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_C3_set", _wrap_X87STATUSWORDFIELDS_C3_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C3_set(X87STATUSWORDFIELDS self, bool C3)"},
	 { (char *)"X87STATUSWORDFIELDS_C3_get", _wrap_X87STATUSWORDFIELDS_C3_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C3_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_C2_set", _wrap_X87STATUSWORDFIELDS_C2_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C2_set(X87STATUSWORDFIELDS self, bool C2)"},
	 { (char *)"X87STATUSWORDFIELDS_C2_get", _wrap_X87STATUSWORDFIELDS_C2_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C2_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_C1_set", _wrap_X87STATUSWORDFIELDS_C1_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C1_set(X87STATUSWORDFIELDS self, bool C1)"},
	 { (char *)"X87STATUSWORDFIELDS_C1_get", _wrap_X87STATUSWORDFIELDS_C1_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C1_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_C0_set", _wrap_X87STATUSWORDFIELDS_C0_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C0_set(X87STATUSWORDFIELDS self, bool C0)"},
	 { (char *)"X87STATUSWORDFIELDS_C0_get", _wrap_X87STATUSWORDFIELDS_C0_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_C0_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_ES_set", _wrap_X87STATUSWORDFIELDS_ES_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_ES_set(X87STATUSWORDFIELDS self, bool ES)"},
	 { (char *)"X87STATUSWORDFIELDS_ES_get", _wrap_X87STATUSWORDFIELDS_ES_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_ES_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_SF_set", _wrap_X87STATUSWORDFIELDS_SF_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_SF_set(X87STATUSWORDFIELDS self, bool SF)"},
	 { (char *)"X87STATUSWORDFIELDS_SF_get", _wrap_X87STATUSWORDFIELDS_SF_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_SF_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_P_set", _wrap_X87STATUSWORDFIELDS_P_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_P_set(X87STATUSWORDFIELDS self, bool P)"},
	 { (char *)"X87STATUSWORDFIELDS_P_get", _wrap_X87STATUSWORDFIELDS_P_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_P_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_U_set", _wrap_X87STATUSWORDFIELDS_U_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_U_set(X87STATUSWORDFIELDS self, bool U)"},
	 { (char *)"X87STATUSWORDFIELDS_U_get", _wrap_X87STATUSWORDFIELDS_U_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_U_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_O_set", _wrap_X87STATUSWORDFIELDS_O_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_O_set(X87STATUSWORDFIELDS self, bool O)"},
	 { (char *)"X87STATUSWORDFIELDS_O_get", _wrap_X87STATUSWORDFIELDS_O_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_O_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_Z_set", _wrap_X87STATUSWORDFIELDS_Z_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_Z_set(X87STATUSWORDFIELDS self, bool Z)"},
	 { (char *)"X87STATUSWORDFIELDS_Z_get", _wrap_X87STATUSWORDFIELDS_Z_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_Z_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_D_set", _wrap_X87STATUSWORDFIELDS_D_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_D_set(X87STATUSWORDFIELDS self, bool D)"},
	 { (char *)"X87STATUSWORDFIELDS_D_get", _wrap_X87STATUSWORDFIELDS_D_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_D_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_I_set", _wrap_X87STATUSWORDFIELDS_I_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_I_set(X87STATUSWORDFIELDS self, bool I)"},
	 { (char *)"X87STATUSWORDFIELDS_I_get", _wrap_X87STATUSWORDFIELDS_I_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_I_get(X87STATUSWORDFIELDS self) -> bool"},
	 { (char *)"X87STATUSWORDFIELDS_TOP_set", _wrap_X87STATUSWORDFIELDS_TOP_set, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_TOP_set(X87STATUSWORDFIELDS self, unsigned short TOP)"},
	 { (char *)"X87STATUSWORDFIELDS_TOP_get", _wrap_X87STATUSWORDFIELDS_TOP_get, METH_VARARGS, (char *)"X87STATUSWORDFIELDS_TOP_get(X87STATUSWORDFIELDS self) -> unsigned short"},
	 { (char *)"new_X87STATUSWORDFIELDS", _wrap_new_X87STATUSWORDFIELDS, METH_VARARGS, (char *)"new_X87STATUSWORDFIELDS() -> X87STATUSWORDFIELDS"},
	 { (char *)"delete_X87STATUSWORDFIELDS", _wrap_delete_X87STATUSWORDFIELDS, METH_VARARGS, (char *)"delete_X87STATUSWORDFIELDS(X87STATUSWORDFIELDS self)"},
	 { (char *)"X87STATUSWORDFIELDS_swigregister", X87STATUSWORDFIELDS_swigregister, METH_VARARGS, NULL},
	 { (char *)"X87CONTROLWORDFIELDS_IC_set", _wrap_X87CONTROLWORDFIELDS_IC_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_IC_set(X87CONTROLWORDFIELDS self, bool IC)"},
	 { (char *)"X87CONTROLWORDFIELDS_IC_get", _wrap_X87CONTROLWORDFIELDS_IC_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_IC_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_IEM_set", _wrap_X87CONTROLWORDFIELDS_IEM_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_IEM_set(X87CONTROLWORDFIELDS self, bool IEM)"},
	 { (char *)"X87CONTROLWORDFIELDS_IEM_get", _wrap_X87CONTROLWORDFIELDS_IEM_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_IEM_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_PM_set", _wrap_X87CONTROLWORDFIELDS_PM_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_PM_set(X87CONTROLWORDFIELDS self, bool PM)"},
	 { (char *)"X87CONTROLWORDFIELDS_PM_get", _wrap_X87CONTROLWORDFIELDS_PM_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_PM_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_UM_set", _wrap_X87CONTROLWORDFIELDS_UM_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_UM_set(X87CONTROLWORDFIELDS self, bool UM)"},
	 { (char *)"X87CONTROLWORDFIELDS_UM_get", _wrap_X87CONTROLWORDFIELDS_UM_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_UM_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_OM_set", _wrap_X87CONTROLWORDFIELDS_OM_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_OM_set(X87CONTROLWORDFIELDS self, bool OM)"},
	 { (char *)"X87CONTROLWORDFIELDS_OM_get", _wrap_X87CONTROLWORDFIELDS_OM_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_OM_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_ZM_set", _wrap_X87CONTROLWORDFIELDS_ZM_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_ZM_set(X87CONTROLWORDFIELDS self, bool ZM)"},
	 { (char *)"X87CONTROLWORDFIELDS_ZM_get", _wrap_X87CONTROLWORDFIELDS_ZM_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_ZM_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_DM_set", _wrap_X87CONTROLWORDFIELDS_DM_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_DM_set(X87CONTROLWORDFIELDS self, bool DM)"},
	 { (char *)"X87CONTROLWORDFIELDS_DM_get", _wrap_X87CONTROLWORDFIELDS_DM_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_DM_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_IM_set", _wrap_X87CONTROLWORDFIELDS_IM_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_IM_set(X87CONTROLWORDFIELDS self, bool IM)"},
	 { (char *)"X87CONTROLWORDFIELDS_IM_get", _wrap_X87CONTROLWORDFIELDS_IM_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_IM_get(X87CONTROLWORDFIELDS self) -> bool"},
	 { (char *)"X87CONTROLWORDFIELDS_RC_set", _wrap_X87CONTROLWORDFIELDS_RC_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_RC_set(X87CONTROLWORDFIELDS self, unsigned short RC)"},
	 { (char *)"X87CONTROLWORDFIELDS_RC_get", _wrap_X87CONTROLWORDFIELDS_RC_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_RC_get(X87CONTROLWORDFIELDS self) -> unsigned short"},
	 { (char *)"X87CONTROLWORDFIELDS_PC_set", _wrap_X87CONTROLWORDFIELDS_PC_set, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_PC_set(X87CONTROLWORDFIELDS self, unsigned short PC)"},
	 { (char *)"X87CONTROLWORDFIELDS_PC_get", _wrap_X87CONTROLWORDFIELDS_PC_get, METH_VARARGS, (char *)"X87CONTROLWORDFIELDS_PC_get(X87CONTROLWORDFIELDS self) -> unsigned short"},
	 { (char *)"new_X87CONTROLWORDFIELDS", _wrap_new_X87CONTROLWORDFIELDS, METH_VARARGS, (char *)"new_X87CONTROLWORDFIELDS() -> X87CONTROLWORDFIELDS"},
	 { (char *)"delete_X87CONTROLWORDFIELDS", _wrap_delete_X87CONTROLWORDFIELDS, METH_VARARGS, (char *)"delete_X87CONTROLWORDFIELDS(X87CONTROLWORDFIELDS self)"},
	 { (char *)"X87CONTROLWORDFIELDS_swigregister", X87CONTROLWORDFIELDS_swigregister, METH_VARARGS, NULL},
	 { (char *)"XMMREGISTER_Low_set", _wrap_XMMREGISTER_Low_set, METH_VARARGS, (char *)"XMMREGISTER_Low_set(XMMREGISTER self, ULONGLONG Low)"},
	 { (char *)"XMMREGISTER_Low_get", _wrap_XMMREGISTER_Low_get, METH_VARARGS, (char *)"XMMREGISTER_Low_get(XMMREGISTER self) -> ULONGLONG"},
	 { (char *)"XMMREGISTER_High_set", _wrap_XMMREGISTER_High_set, METH_VARARGS, (char *)"XMMREGISTER_High_set(XMMREGISTER self, LONGLONG High)"},
	 { (char *)"XMMREGISTER_High_get", _wrap_XMMREGISTER_High_get, METH_VARARGS, (char *)"XMMREGISTER_High_get(XMMREGISTER self) -> LONGLONG"},
	 { (char *)"new_XMMREGISTER", _wrap_new_XMMREGISTER, METH_VARARGS, (char *)"new_XMMREGISTER() -> XMMREGISTER"},
	 { (char *)"delete_XMMREGISTER", _wrap_delete_XMMREGISTER, METH_VARARGS, (char *)"delete_XMMREGISTER(XMMREGISTER self)"},
	 { (char *)"XMMREGISTER_swigregister", XMMREGISTER_swigregister, METH_VARARGS, NULL},
	 { (char *)"YMMREGISTER_Low_set", _wrap_YMMREGISTER_Low_set, METH_VARARGS, (char *)"YMMREGISTER_Low_set(YMMREGISTER self, XMMREGISTER Low)"},
	 { (char *)"YMMREGISTER_Low_get", _wrap_YMMREGISTER_Low_get, METH_VARARGS, (char *)"YMMREGISTER_Low_get(YMMREGISTER self) -> XMMREGISTER"},
	 { (char *)"YMMREGISTER_High_set", _wrap_YMMREGISTER_High_set, METH_VARARGS, (char *)"YMMREGISTER_High_set(YMMREGISTER self, XMMREGISTER High)"},
	 { (char *)"YMMREGISTER_High_get", _wrap_YMMREGISTER_High_get, METH_VARARGS, (char *)"YMMREGISTER_High_get(YMMREGISTER self) -> XMMREGISTER"},
	 { (char *)"new_YMMREGISTER", _wrap_new_YMMREGISTER, METH_VARARGS, (char *)"new_YMMREGISTER() -> YMMREGISTER"},
	 { (char *)"delete_YMMREGISTER", _wrap_delete_YMMREGISTER, METH_VARARGS, (char *)"delete_YMMREGISTER(YMMREGISTER self)"},
	 { (char *)"YMMREGISTER_swigregister", YMMREGISTER_swigregister, METH_VARARGS, NULL},
	 { (char *)"X87FPUREGISTER_data_set", _wrap_X87FPUREGISTER_data_set, METH_VARARGS, (char *)"X87FPUREGISTER_data_set(X87FPUREGISTER self, BYTE [10] data)"},
	 { (char *)"X87FPUREGISTER_data_get", _wrap_X87FPUREGISTER_data_get, METH_VARARGS, (char *)"X87FPUREGISTER_data_get(X87FPUREGISTER self) -> BYTE [10]"},
	 { (char *)"X87FPUREGISTER_st_value_set", _wrap_X87FPUREGISTER_st_value_set, METH_VARARGS, (char *)"X87FPUREGISTER_st_value_set(X87FPUREGISTER self, int st_value)"},
	 { (char *)"X87FPUREGISTER_st_value_get", _wrap_X87FPUREGISTER_st_value_get, METH_VARARGS, (char *)"X87FPUREGISTER_st_value_get(X87FPUREGISTER self) -> int"},
	 { (char *)"X87FPUREGISTER_tag_set", _wrap_X87FPUREGISTER_tag_set, METH_VARARGS, (char *)"X87FPUREGISTER_tag_set(X87FPUREGISTER self, int tag)"},
	 { (char *)"X87FPUREGISTER_tag_get", _wrap_X87FPUREGISTER_tag_get, METH_VARARGS, (char *)"X87FPUREGISTER_tag_get(X87FPUREGISTER self) -> int"},
	 { (char *)"new_X87FPUREGISTER", _wrap_new_X87FPUREGISTER, METH_VARARGS, (char *)"new_X87FPUREGISTER() -> X87FPUREGISTER"},
	 { (char *)"delete_X87FPUREGISTER", _wrap_delete_X87FPUREGISTER, METH_VARARGS, (char *)"delete_X87FPUREGISTER(X87FPUREGISTER self)"},
	 { (char *)"X87FPUREGISTER_swigregister", X87FPUREGISTER_swigregister, METH_VARARGS, NULL},
	 { (char *)"X87FPU_ControlWord_set", _wrap_X87FPU_ControlWord_set, METH_VARARGS, (char *)"X87FPU_ControlWord_set(X87FPU self, WORD ControlWord)"},
	 { (char *)"X87FPU_ControlWord_get", _wrap_X87FPU_ControlWord_get, METH_VARARGS, (char *)"X87FPU_ControlWord_get(X87FPU self) -> WORD"},
	 { (char *)"X87FPU_StatusWord_set", _wrap_X87FPU_StatusWord_set, METH_VARARGS, (char *)"X87FPU_StatusWord_set(X87FPU self, WORD StatusWord)"},
	 { (char *)"X87FPU_StatusWord_get", _wrap_X87FPU_StatusWord_get, METH_VARARGS, (char *)"X87FPU_StatusWord_get(X87FPU self) -> WORD"},
	 { (char *)"X87FPU_TagWord_set", _wrap_X87FPU_TagWord_set, METH_VARARGS, (char *)"X87FPU_TagWord_set(X87FPU self, WORD TagWord)"},
	 { (char *)"X87FPU_TagWord_get", _wrap_X87FPU_TagWord_get, METH_VARARGS, (char *)"X87FPU_TagWord_get(X87FPU self) -> WORD"},
	 { (char *)"X87FPU_ErrorOffset_set", _wrap_X87FPU_ErrorOffset_set, METH_VARARGS, (char *)"X87FPU_ErrorOffset_set(X87FPU self, DWORD ErrorOffset)"},
	 { (char *)"X87FPU_ErrorOffset_get", _wrap_X87FPU_ErrorOffset_get, METH_VARARGS, (char *)"X87FPU_ErrorOffset_get(X87FPU self) -> DWORD"},
	 { (char *)"X87FPU_ErrorSelector_set", _wrap_X87FPU_ErrorSelector_set, METH_VARARGS, (char *)"X87FPU_ErrorSelector_set(X87FPU self, DWORD ErrorSelector)"},
	 { (char *)"X87FPU_ErrorSelector_get", _wrap_X87FPU_ErrorSelector_get, METH_VARARGS, (char *)"X87FPU_ErrorSelector_get(X87FPU self) -> DWORD"},
	 { (char *)"X87FPU_DataOffset_set", _wrap_X87FPU_DataOffset_set, METH_VARARGS, (char *)"X87FPU_DataOffset_set(X87FPU self, DWORD DataOffset)"},
	 { (char *)"X87FPU_DataOffset_get", _wrap_X87FPU_DataOffset_get, METH_VARARGS, (char *)"X87FPU_DataOffset_get(X87FPU self) -> DWORD"},
	 { (char *)"X87FPU_DataSelector_set", _wrap_X87FPU_DataSelector_set, METH_VARARGS, (char *)"X87FPU_DataSelector_set(X87FPU self, DWORD DataSelector)"},
	 { (char *)"X87FPU_DataSelector_get", _wrap_X87FPU_DataSelector_get, METH_VARARGS, (char *)"X87FPU_DataSelector_get(X87FPU self) -> DWORD"},
	 { (char *)"X87FPU_Cr0NpxState_set", _wrap_X87FPU_Cr0NpxState_set, METH_VARARGS, (char *)"X87FPU_Cr0NpxState_set(X87FPU self, DWORD Cr0NpxState)"},
	 { (char *)"X87FPU_Cr0NpxState_get", _wrap_X87FPU_Cr0NpxState_get, METH_VARARGS, (char *)"X87FPU_Cr0NpxState_get(X87FPU self) -> DWORD"},
	 { (char *)"new_X87FPU", _wrap_new_X87FPU, METH_VARARGS, (char *)"new_X87FPU() -> X87FPU"},
	 { (char *)"delete_X87FPU", _wrap_delete_X87FPU, METH_VARARGS, (char *)"delete_X87FPU(X87FPU self)"},
	 { (char *)"X87FPU_swigregister", X87FPU_swigregister, METH_VARARGS, NULL},
	 { (char *)"REGISTERCONTEXT_cax_set", _wrap_REGISTERCONTEXT_cax_set, METH_VARARGS, (char *)"REGISTERCONTEXT_cax_set(REGISTERCONTEXT self, ULONG_PTR cax)"},
	 { (char *)"REGISTERCONTEXT_cax_get", _wrap_REGISTERCONTEXT_cax_get, METH_VARARGS, (char *)"REGISTERCONTEXT_cax_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_ccx_set", _wrap_REGISTERCONTEXT_ccx_set, METH_VARARGS, (char *)"REGISTERCONTEXT_ccx_set(REGISTERCONTEXT self, ULONG_PTR ccx)"},
	 { (char *)"REGISTERCONTEXT_ccx_get", _wrap_REGISTERCONTEXT_ccx_get, METH_VARARGS, (char *)"REGISTERCONTEXT_ccx_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_cdx_set", _wrap_REGISTERCONTEXT_cdx_set, METH_VARARGS, (char *)"REGISTERCONTEXT_cdx_set(REGISTERCONTEXT self, ULONG_PTR cdx)"},
	 { (char *)"REGISTERCONTEXT_cdx_get", _wrap_REGISTERCONTEXT_cdx_get, METH_VARARGS, (char *)"REGISTERCONTEXT_cdx_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_cbx_set", _wrap_REGISTERCONTEXT_cbx_set, METH_VARARGS, (char *)"REGISTERCONTEXT_cbx_set(REGISTERCONTEXT self, ULONG_PTR cbx)"},
	 { (char *)"REGISTERCONTEXT_cbx_get", _wrap_REGISTERCONTEXT_cbx_get, METH_VARARGS, (char *)"REGISTERCONTEXT_cbx_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_csp_set", _wrap_REGISTERCONTEXT_csp_set, METH_VARARGS, (char *)"REGISTERCONTEXT_csp_set(REGISTERCONTEXT self, ULONG_PTR csp)"},
	 { (char *)"REGISTERCONTEXT_csp_get", _wrap_REGISTERCONTEXT_csp_get, METH_VARARGS, (char *)"REGISTERCONTEXT_csp_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_cbp_set", _wrap_REGISTERCONTEXT_cbp_set, METH_VARARGS, (char *)"REGISTERCONTEXT_cbp_set(REGISTERCONTEXT self, ULONG_PTR cbp)"},
	 { (char *)"REGISTERCONTEXT_cbp_get", _wrap_REGISTERCONTEXT_cbp_get, METH_VARARGS, (char *)"REGISTERCONTEXT_cbp_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_csi_set", _wrap_REGISTERCONTEXT_csi_set, METH_VARARGS, (char *)"REGISTERCONTEXT_csi_set(REGISTERCONTEXT self, ULONG_PTR csi)"},
	 { (char *)"REGISTERCONTEXT_csi_get", _wrap_REGISTERCONTEXT_csi_get, METH_VARARGS, (char *)"REGISTERCONTEXT_csi_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_cdi_set", _wrap_REGISTERCONTEXT_cdi_set, METH_VARARGS, (char *)"REGISTERCONTEXT_cdi_set(REGISTERCONTEXT self, ULONG_PTR cdi)"},
	 { (char *)"REGISTERCONTEXT_cdi_get", _wrap_REGISTERCONTEXT_cdi_get, METH_VARARGS, (char *)"REGISTERCONTEXT_cdi_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r8_set", _wrap_REGISTERCONTEXT_r8_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r8_set(REGISTERCONTEXT self, ULONG_PTR r8)"},
	 { (char *)"REGISTERCONTEXT_r8_get", _wrap_REGISTERCONTEXT_r8_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r8_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r9_set", _wrap_REGISTERCONTEXT_r9_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r9_set(REGISTERCONTEXT self, ULONG_PTR r9)"},
	 { (char *)"REGISTERCONTEXT_r9_get", _wrap_REGISTERCONTEXT_r9_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r9_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r10_set", _wrap_REGISTERCONTEXT_r10_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r10_set(REGISTERCONTEXT self, ULONG_PTR r10)"},
	 { (char *)"REGISTERCONTEXT_r10_get", _wrap_REGISTERCONTEXT_r10_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r10_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r11_set", _wrap_REGISTERCONTEXT_r11_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r11_set(REGISTERCONTEXT self, ULONG_PTR r11)"},
	 { (char *)"REGISTERCONTEXT_r11_get", _wrap_REGISTERCONTEXT_r11_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r11_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r12_set", _wrap_REGISTERCONTEXT_r12_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r12_set(REGISTERCONTEXT self, ULONG_PTR r12)"},
	 { (char *)"REGISTERCONTEXT_r12_get", _wrap_REGISTERCONTEXT_r12_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r12_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r13_set", _wrap_REGISTERCONTEXT_r13_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r13_set(REGISTERCONTEXT self, ULONG_PTR r13)"},
	 { (char *)"REGISTERCONTEXT_r13_get", _wrap_REGISTERCONTEXT_r13_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r13_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r14_set", _wrap_REGISTERCONTEXT_r14_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r14_set(REGISTERCONTEXT self, ULONG_PTR r14)"},
	 { (char *)"REGISTERCONTEXT_r14_get", _wrap_REGISTERCONTEXT_r14_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r14_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_r15_set", _wrap_REGISTERCONTEXT_r15_set, METH_VARARGS, (char *)"REGISTERCONTEXT_r15_set(REGISTERCONTEXT self, ULONG_PTR r15)"},
	 { (char *)"REGISTERCONTEXT_r15_get", _wrap_REGISTERCONTEXT_r15_get, METH_VARARGS, (char *)"REGISTERCONTEXT_r15_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_cip_set", _wrap_REGISTERCONTEXT_cip_set, METH_VARARGS, (char *)"REGISTERCONTEXT_cip_set(REGISTERCONTEXT self, ULONG_PTR cip)"},
	 { (char *)"REGISTERCONTEXT_cip_get", _wrap_REGISTERCONTEXT_cip_get, METH_VARARGS, (char *)"REGISTERCONTEXT_cip_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_eflags_set", _wrap_REGISTERCONTEXT_eflags_set, METH_VARARGS, (char *)"REGISTERCONTEXT_eflags_set(REGISTERCONTEXT self, ULONG_PTR eflags)"},
	 { (char *)"REGISTERCONTEXT_eflags_get", _wrap_REGISTERCONTEXT_eflags_get, METH_VARARGS, (char *)"REGISTERCONTEXT_eflags_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_gs_set", _wrap_REGISTERCONTEXT_gs_set, METH_VARARGS, (char *)"REGISTERCONTEXT_gs_set(REGISTERCONTEXT self, unsigned short gs)"},
	 { (char *)"REGISTERCONTEXT_gs_get", _wrap_REGISTERCONTEXT_gs_get, METH_VARARGS, (char *)"REGISTERCONTEXT_gs_get(REGISTERCONTEXT self) -> unsigned short"},
	 { (char *)"REGISTERCONTEXT_fs_set", _wrap_REGISTERCONTEXT_fs_set, METH_VARARGS, (char *)"REGISTERCONTEXT_fs_set(REGISTERCONTEXT self, unsigned short fs)"},
	 { (char *)"REGISTERCONTEXT_fs_get", _wrap_REGISTERCONTEXT_fs_get, METH_VARARGS, (char *)"REGISTERCONTEXT_fs_get(REGISTERCONTEXT self) -> unsigned short"},
	 { (char *)"REGISTERCONTEXT_es_set", _wrap_REGISTERCONTEXT_es_set, METH_VARARGS, (char *)"REGISTERCONTEXT_es_set(REGISTERCONTEXT self, unsigned short es)"},
	 { (char *)"REGISTERCONTEXT_es_get", _wrap_REGISTERCONTEXT_es_get, METH_VARARGS, (char *)"REGISTERCONTEXT_es_get(REGISTERCONTEXT self) -> unsigned short"},
	 { (char *)"REGISTERCONTEXT_ds_set", _wrap_REGISTERCONTEXT_ds_set, METH_VARARGS, (char *)"REGISTERCONTEXT_ds_set(REGISTERCONTEXT self, unsigned short ds)"},
	 { (char *)"REGISTERCONTEXT_ds_get", _wrap_REGISTERCONTEXT_ds_get, METH_VARARGS, (char *)"REGISTERCONTEXT_ds_get(REGISTERCONTEXT self) -> unsigned short"},
	 { (char *)"REGISTERCONTEXT_cs_set", _wrap_REGISTERCONTEXT_cs_set, METH_VARARGS, (char *)"REGISTERCONTEXT_cs_set(REGISTERCONTEXT self, unsigned short cs)"},
	 { (char *)"REGISTERCONTEXT_cs_get", _wrap_REGISTERCONTEXT_cs_get, METH_VARARGS, (char *)"REGISTERCONTEXT_cs_get(REGISTERCONTEXT self) -> unsigned short"},
	 { (char *)"REGISTERCONTEXT_ss_set", _wrap_REGISTERCONTEXT_ss_set, METH_VARARGS, (char *)"REGISTERCONTEXT_ss_set(REGISTERCONTEXT self, unsigned short ss)"},
	 { (char *)"REGISTERCONTEXT_ss_get", _wrap_REGISTERCONTEXT_ss_get, METH_VARARGS, (char *)"REGISTERCONTEXT_ss_get(REGISTERCONTEXT self) -> unsigned short"},
	 { (char *)"REGISTERCONTEXT_dr0_set", _wrap_REGISTERCONTEXT_dr0_set, METH_VARARGS, (char *)"REGISTERCONTEXT_dr0_set(REGISTERCONTEXT self, ULONG_PTR dr0)"},
	 { (char *)"REGISTERCONTEXT_dr0_get", _wrap_REGISTERCONTEXT_dr0_get, METH_VARARGS, (char *)"REGISTERCONTEXT_dr0_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_dr1_set", _wrap_REGISTERCONTEXT_dr1_set, METH_VARARGS, (char *)"REGISTERCONTEXT_dr1_set(REGISTERCONTEXT self, ULONG_PTR dr1)"},
	 { (char *)"REGISTERCONTEXT_dr1_get", _wrap_REGISTERCONTEXT_dr1_get, METH_VARARGS, (char *)"REGISTERCONTEXT_dr1_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_dr2_set", _wrap_REGISTERCONTEXT_dr2_set, METH_VARARGS, (char *)"REGISTERCONTEXT_dr2_set(REGISTERCONTEXT self, ULONG_PTR dr2)"},
	 { (char *)"REGISTERCONTEXT_dr2_get", _wrap_REGISTERCONTEXT_dr2_get, METH_VARARGS, (char *)"REGISTERCONTEXT_dr2_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_dr3_set", _wrap_REGISTERCONTEXT_dr3_set, METH_VARARGS, (char *)"REGISTERCONTEXT_dr3_set(REGISTERCONTEXT self, ULONG_PTR dr3)"},
	 { (char *)"REGISTERCONTEXT_dr3_get", _wrap_REGISTERCONTEXT_dr3_get, METH_VARARGS, (char *)"REGISTERCONTEXT_dr3_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_dr6_set", _wrap_REGISTERCONTEXT_dr6_set, METH_VARARGS, (char *)"REGISTERCONTEXT_dr6_set(REGISTERCONTEXT self, ULONG_PTR dr6)"},
	 { (char *)"REGISTERCONTEXT_dr6_get", _wrap_REGISTERCONTEXT_dr6_get, METH_VARARGS, (char *)"REGISTERCONTEXT_dr6_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_dr7_set", _wrap_REGISTERCONTEXT_dr7_set, METH_VARARGS, (char *)"REGISTERCONTEXT_dr7_set(REGISTERCONTEXT self, ULONG_PTR dr7)"},
	 { (char *)"REGISTERCONTEXT_dr7_get", _wrap_REGISTERCONTEXT_dr7_get, METH_VARARGS, (char *)"REGISTERCONTEXT_dr7_get(REGISTERCONTEXT self) -> ULONG_PTR"},
	 { (char *)"REGISTERCONTEXT_RegisterArea_set", _wrap_REGISTERCONTEXT_RegisterArea_set, METH_VARARGS, (char *)"REGISTERCONTEXT_RegisterArea_set(REGISTERCONTEXT self, BYTE [80] RegisterArea)"},
	 { (char *)"REGISTERCONTEXT_RegisterArea_get", _wrap_REGISTERCONTEXT_RegisterArea_get, METH_VARARGS, (char *)"REGISTERCONTEXT_RegisterArea_get(REGISTERCONTEXT self) -> BYTE [80]"},
	 { (char *)"REGISTERCONTEXT_x87fpu_set", _wrap_REGISTERCONTEXT_x87fpu_set, METH_VARARGS, (char *)"REGISTERCONTEXT_x87fpu_set(REGISTERCONTEXT self, X87FPU x87fpu)"},
	 { (char *)"REGISTERCONTEXT_x87fpu_get", _wrap_REGISTERCONTEXT_x87fpu_get, METH_VARARGS, (char *)"REGISTERCONTEXT_x87fpu_get(REGISTERCONTEXT self) -> X87FPU"},
	 { (char *)"REGISTERCONTEXT_MxCsr_set", _wrap_REGISTERCONTEXT_MxCsr_set, METH_VARARGS, (char *)"REGISTERCONTEXT_MxCsr_set(REGISTERCONTEXT self, DWORD MxCsr)"},
	 { (char *)"REGISTERCONTEXT_MxCsr_get", _wrap_REGISTERCONTEXT_MxCsr_get, METH_VARARGS, (char *)"REGISTERCONTEXT_MxCsr_get(REGISTERCONTEXT self) -> DWORD"},
	 { (char *)"REGISTERCONTEXT_XmmRegisters_set", _wrap_REGISTERCONTEXT_XmmRegisters_set, METH_VARARGS, (char *)"REGISTERCONTEXT_XmmRegisters_set(REGISTERCONTEXT self, XMMREGISTER XmmRegisters)"},
	 { (char *)"REGISTERCONTEXT_XmmRegisters_get", _wrap_REGISTERCONTEXT_XmmRegisters_get, METH_VARARGS, (char *)"REGISTERCONTEXT_XmmRegisters_get(REGISTERCONTEXT self) -> XMMREGISTER"},
	 { (char *)"REGISTERCONTEXT_YmmRegisters_set", _wrap_REGISTERCONTEXT_YmmRegisters_set, METH_VARARGS, (char *)"REGISTERCONTEXT_YmmRegisters_set(REGISTERCONTEXT self, YMMREGISTER YmmRegisters)"},
	 { (char *)"REGISTERCONTEXT_YmmRegisters_get", _wrap_REGISTERCONTEXT_YmmRegisters_get, METH_VARARGS, (char *)"REGISTERCONTEXT_YmmRegisters_get(REGISTERCONTEXT self) -> YMMREGISTER"},
	 { (char *)"new_REGISTERCONTEXT", _wrap_new_REGISTERCONTEXT, METH_VARARGS, (char *)"new_REGISTERCONTEXT() -> REGISTERCONTEXT"},
	 { (char *)"delete_REGISTERCONTEXT", _wrap_delete_REGISTERCONTEXT, METH_VARARGS, (char *)"delete_REGISTERCONTEXT(REGISTERCONTEXT self)"},
	 { (char *)"REGISTERCONTEXT_swigregister", REGISTERCONTEXT_swigregister, METH_VARARGS, NULL},
	 { (char *)"LASTERROR_code_set", _wrap_LASTERROR_code_set, METH_VARARGS, (char *)"LASTERROR_code_set(LASTERROR self, DWORD code)"},
	 { (char *)"LASTERROR_code_get", _wrap_LASTERROR_code_get, METH_VARARGS, (char *)"LASTERROR_code_get(LASTERROR self) -> DWORD"},
	 { (char *)"LASTERROR_name_set", _wrap_LASTERROR_name_set, METH_VARARGS, (char *)"LASTERROR_name_set(LASTERROR self, char [128] name)"},
	 { (char *)"LASTERROR_name_get", _wrap_LASTERROR_name_get, METH_VARARGS, (char *)"LASTERROR_name_get(LASTERROR self) -> char [128]"},
	 { (char *)"new_LASTERROR", _wrap_new_LASTERROR, METH_VARARGS, (char *)"new_LASTERROR() -> LASTERROR"},
	 { (char *)"delete_LASTERROR", _wrap_delete_LASTERROR, METH_VARARGS, (char *)"delete_LASTERROR(LASTERROR self)"},
	 { (char *)"LASTERROR_swigregister", LASTERROR_swigregister, METH_VARARGS, NULL},
	 { (char *)"LASTSTATUS_code_set", _wrap_LASTSTATUS_code_set, METH_VARARGS, (char *)"LASTSTATUS_code_set(LASTSTATUS self, DWORD code)"},
	 { (char *)"LASTSTATUS_code_get", _wrap_LASTSTATUS_code_get, METH_VARARGS, (char *)"LASTSTATUS_code_get(LASTSTATUS self) -> DWORD"},
	 { (char *)"LASTSTATUS_name_set", _wrap_LASTSTATUS_name_set, METH_VARARGS, (char *)"LASTSTATUS_name_set(LASTSTATUS self, char [128] name)"},
	 { (char *)"LASTSTATUS_name_get", _wrap_LASTSTATUS_name_get, METH_VARARGS, (char *)"LASTSTATUS_name_get(LASTSTATUS self) -> char [128]"},
	 { (char *)"new_LASTSTATUS", _wrap_new_LASTSTATUS, METH_VARARGS, (char *)"new_LASTSTATUS() -> LASTSTATUS"},
	 { (char *)"delete_LASTSTATUS", _wrap_delete_LASTSTATUS, METH_VARARGS, (char *)"delete_LASTSTATUS(LASTSTATUS self)"},
	 { (char *)"LASTSTATUS_swigregister", LASTSTATUS_swigregister, METH_VARARGS, NULL},
	 { (char *)"REGDUMP_regcontext_set", _wrap_REGDUMP_regcontext_set, METH_VARARGS, (char *)"REGDUMP_regcontext_set(REGDUMP self, REGISTERCONTEXT regcontext)"},
	 { (char *)"REGDUMP_regcontext_get", _wrap_REGDUMP_regcontext_get, METH_VARARGS, (char *)"REGDUMP_regcontext_get(REGDUMP self) -> REGISTERCONTEXT"},
	 { (char *)"REGDUMP_flags_set", _wrap_REGDUMP_flags_set, METH_VARARGS, (char *)"REGDUMP_flags_set(REGDUMP self, FLAGS flags)"},
	 { (char *)"REGDUMP_flags_get", _wrap_REGDUMP_flags_get, METH_VARARGS, (char *)"REGDUMP_flags_get(REGDUMP self) -> FLAGS"},
	 { (char *)"REGDUMP_x87FPURegisters_set", _wrap_REGDUMP_x87FPURegisters_set, METH_VARARGS, (char *)"REGDUMP_x87FPURegisters_set(REGDUMP self, X87FPUREGISTER x87FPURegisters)"},
	 { (char *)"REGDUMP_x87FPURegisters_get", _wrap_REGDUMP_x87FPURegisters_get, METH_VARARGS, (char *)"REGDUMP_x87FPURegisters_get(REGDUMP self) -> X87FPUREGISTER"},
	 { (char *)"REGDUMP_mmx_set", _wrap_REGDUMP_mmx_set, METH_VARARGS, (char *)"REGDUMP_mmx_set(REGDUMP self, unsigned long long [8] mmx)"},
	 { (char *)"REGDUMP_mmx_get", _wrap_REGDUMP_mmx_get, METH_VARARGS, (char *)"REGDUMP_mmx_get(REGDUMP self) -> unsigned long long [8]"},
	 { (char *)"REGDUMP_MxCsrFields_set", _wrap_REGDUMP_MxCsrFields_set, METH_VARARGS, (char *)"REGDUMP_MxCsrFields_set(REGDUMP self, MXCSRFIELDS MxCsrFields)"},
	 { (char *)"REGDUMP_MxCsrFields_get", _wrap_REGDUMP_MxCsrFields_get, METH_VARARGS, (char *)"REGDUMP_MxCsrFields_get(REGDUMP self) -> MXCSRFIELDS"},
	 { (char *)"REGDUMP_x87StatusWordFields_set", _wrap_REGDUMP_x87StatusWordFields_set, METH_VARARGS, (char *)"REGDUMP_x87StatusWordFields_set(REGDUMP self, X87STATUSWORDFIELDS x87StatusWordFields)"},
	 { (char *)"REGDUMP_x87StatusWordFields_get", _wrap_REGDUMP_x87StatusWordFields_get, METH_VARARGS, (char *)"REGDUMP_x87StatusWordFields_get(REGDUMP self) -> X87STATUSWORDFIELDS"},
	 { (char *)"REGDUMP_x87ControlWordFields_set", _wrap_REGDUMP_x87ControlWordFields_set, METH_VARARGS, (char *)"REGDUMP_x87ControlWordFields_set(REGDUMP self, X87CONTROLWORDFIELDS x87ControlWordFields)"},
	 { (char *)"REGDUMP_x87ControlWordFields_get", _wrap_REGDUMP_x87ControlWordFields_get, METH_VARARGS, (char *)"REGDUMP_x87ControlWordFields_get(REGDUMP self) -> X87CONTROLWORDFIELDS"},
	 { (char *)"REGDUMP_lastError_set", _wrap_REGDUMP_lastError_set, METH_VARARGS, (char *)"REGDUMP_lastError_set(REGDUMP self, LASTERROR lastError)"},
	 { (char *)"REGDUMP_lastError_get", _wrap_REGDUMP_lastError_get, METH_VARARGS, (char *)"REGDUMP_lastError_get(REGDUMP self) -> LASTERROR"},
	 { (char *)"REGDUMP_lastStatus_set", _wrap_REGDUMP_lastStatus_set, METH_VARARGS, (char *)"REGDUMP_lastStatus_set(REGDUMP self, LASTSTATUS lastStatus)"},
	 { (char *)"REGDUMP_lastStatus_get", _wrap_REGDUMP_lastStatus_get, METH_VARARGS, (char *)"REGDUMP_lastStatus_get(REGDUMP self) -> LASTSTATUS"},
	 { (char *)"new_REGDUMP", _wrap_new_REGDUMP, METH_VARARGS, (char *)"new_REGDUMP() -> REGDUMP"},
	 { (char *)"delete_REGDUMP", _wrap_delete_REGDUMP, METH_VARARGS, (char *)"delete_REGDUMP(REGDUMP self)"},
	 { (char *)"REGDUMP_swigregister", REGDUMP_swigregister, METH_VARARGS, NULL},
	 { (char *)"DISASM_ARG_type_set", _wrap_DISASM_ARG_type_set, METH_VARARGS, (char *)"DISASM_ARG_type_set(DISASM_ARG self, DISASM_ARGTYPE type)"},
	 { (char *)"DISASM_ARG_type_get", _wrap_DISASM_ARG_type_get, METH_VARARGS, (char *)"DISASM_ARG_type_get(DISASM_ARG self) -> DISASM_ARGTYPE"},
	 { (char *)"DISASM_ARG_segment_set", _wrap_DISASM_ARG_segment_set, METH_VARARGS, (char *)"DISASM_ARG_segment_set(DISASM_ARG self, SEGMENTREG segment)"},
	 { (char *)"DISASM_ARG_segment_get", _wrap_DISASM_ARG_segment_get, METH_VARARGS, (char *)"DISASM_ARG_segment_get(DISASM_ARG self) -> SEGMENTREG"},
	 { (char *)"DISASM_ARG_mnemonic_set", _wrap_DISASM_ARG_mnemonic_set, METH_VARARGS, (char *)"DISASM_ARG_mnemonic_set(DISASM_ARG self, char [64] mnemonic)"},
	 { (char *)"DISASM_ARG_mnemonic_get", _wrap_DISASM_ARG_mnemonic_get, METH_VARARGS, (char *)"DISASM_ARG_mnemonic_get(DISASM_ARG self) -> char [64]"},
	 { (char *)"DISASM_ARG_constant_set", _wrap_DISASM_ARG_constant_set, METH_VARARGS, (char *)"DISASM_ARG_constant_set(DISASM_ARG self, duint constant)"},
	 { (char *)"DISASM_ARG_constant_get", _wrap_DISASM_ARG_constant_get, METH_VARARGS, (char *)"DISASM_ARG_constant_get(DISASM_ARG self) -> duint"},
	 { (char *)"DISASM_ARG_value_set", _wrap_DISASM_ARG_value_set, METH_VARARGS, (char *)"DISASM_ARG_value_set(DISASM_ARG self, duint value)"},
	 { (char *)"DISASM_ARG_value_get", _wrap_DISASM_ARG_value_get, METH_VARARGS, (char *)"DISASM_ARG_value_get(DISASM_ARG self) -> duint"},
	 { (char *)"DISASM_ARG_memvalue_set", _wrap_DISASM_ARG_memvalue_set, METH_VARARGS, (char *)"DISASM_ARG_memvalue_set(DISASM_ARG self, duint memvalue)"},
	 { (char *)"DISASM_ARG_memvalue_get", _wrap_DISASM_ARG_memvalue_get, METH_VARARGS, (char *)"DISASM_ARG_memvalue_get(DISASM_ARG self) -> duint"},
	 { (char *)"new_DISASM_ARG", _wrap_new_DISASM_ARG, METH_VARARGS, (char *)"new_DISASM_ARG() -> DISASM_ARG"},
	 { (char *)"delete_DISASM_ARG", _wrap_delete_DISASM_ARG, METH_VARARGS, (char *)"delete_DISASM_ARG(DISASM_ARG self)"},
	 { (char *)"DISASM_ARG_swigregister", DISASM_ARG_swigregister, METH_VARARGS, NULL},
	 { (char *)"DISASM_INSTR_instruction_set", _wrap_DISASM_INSTR_instruction_set, METH_VARARGS, (char *)"DISASM_INSTR_instruction_set(DISASM_INSTR self, char [64] instruction)"},
	 { (char *)"DISASM_INSTR_instruction_get", _wrap_DISASM_INSTR_instruction_get, METH_VARARGS, (char *)"DISASM_INSTR_instruction_get(DISASM_INSTR self) -> char [64]"},
	 { (char *)"DISASM_INSTR_type_set", _wrap_DISASM_INSTR_type_set, METH_VARARGS, (char *)"DISASM_INSTR_type_set(DISASM_INSTR self, DISASM_INSTRTYPE type)"},
	 { (char *)"DISASM_INSTR_type_get", _wrap_DISASM_INSTR_type_get, METH_VARARGS, (char *)"DISASM_INSTR_type_get(DISASM_INSTR self) -> DISASM_INSTRTYPE"},
	 { (char *)"DISASM_INSTR_argcount_set", _wrap_DISASM_INSTR_argcount_set, METH_VARARGS, (char *)"DISASM_INSTR_argcount_set(DISASM_INSTR self, int argcount)"},
	 { (char *)"DISASM_INSTR_argcount_get", _wrap_DISASM_INSTR_argcount_get, METH_VARARGS, (char *)"DISASM_INSTR_argcount_get(DISASM_INSTR self) -> int"},
	 { (char *)"DISASM_INSTR_instr_size_set", _wrap_DISASM_INSTR_instr_size_set, METH_VARARGS, (char *)"DISASM_INSTR_instr_size_set(DISASM_INSTR self, int instr_size)"},
	 { (char *)"DISASM_INSTR_instr_size_get", _wrap_DISASM_INSTR_instr_size_get, METH_VARARGS, (char *)"DISASM_INSTR_instr_size_get(DISASM_INSTR self) -> int"},
	 { (char *)"DISASM_INSTR_arg_set", _wrap_DISASM_INSTR_arg_set, METH_VARARGS, (char *)"DISASM_INSTR_arg_set(DISASM_INSTR self, DISASM_ARG arg)"},
	 { (char *)"DISASM_INSTR_arg_get", _wrap_DISASM_INSTR_arg_get, METH_VARARGS, (char *)"DISASM_INSTR_arg_get(DISASM_INSTR self) -> DISASM_ARG"},
	 { (char *)"new_DISASM_INSTR", _wrap_new_DISASM_INSTR, METH_VARARGS, (char *)"new_DISASM_INSTR() -> DISASM_INSTR"},
	 { (char *)"delete_DISASM_INSTR", _wrap_delete_DISASM_INSTR, METH_VARARGS, (char *)"delete_DISASM_INSTR(DISASM_INSTR self)"},
	 { (char *)"DISASM_INSTR_swigregister", DISASM_INSTR_swigregister, METH_VARARGS, NULL},
	 { (char *)"STACK_COMMENT_color_set", _wrap_STACK_COMMENT_color_set, METH_VARARGS, (char *)"STACK_COMMENT_color_set(STACK_COMMENT self, char [8] color)"},
	 { (char *)"STACK_COMMENT_color_get", _wrap_STACK_COMMENT_color_get, METH_VARARGS, (char *)"STACK_COMMENT_color_get(STACK_COMMENT self) -> char [8]"},
	 { (char *)"STACK_COMMENT_comment_set", _wrap_STACK_COMMENT_comment_set, METH_VARARGS, (char *)"STACK_COMMENT_comment_set(STACK_COMMENT self, char [512] comment)"},
	 { (char *)"STACK_COMMENT_comment_get", _wrap_STACK_COMMENT_comment_get, METH_VARARGS, (char *)"STACK_COMMENT_comment_get(STACK_COMMENT self) -> char [512]"},
	 { (char *)"new_STACK_COMMENT", _wrap_new_STACK_COMMENT, METH_VARARGS, (char *)"new_STACK_COMMENT() -> STACK_COMMENT"},
	 { (char *)"delete_STACK_COMMENT", _wrap_delete_STACK_COMMENT, METH_VARARGS, (char *)"delete_STACK_COMMENT(STACK_COMMENT self)"},
	 { (char *)"STACK_COMMENT_swigregister", STACK_COMMENT_swigregister, METH_VARARGS, NULL},
	 { (char *)"THREADINFO_ThreadNumber_set", _wrap_THREADINFO_ThreadNumber_set, METH_VARARGS, (char *)"THREADINFO_ThreadNumber_set(THREADINFO self, int ThreadNumber)"},
	 { (char *)"THREADINFO_ThreadNumber_get", _wrap_THREADINFO_ThreadNumber_get, METH_VARARGS, (char *)"THREADINFO_ThreadNumber_get(THREADINFO self) -> int"},
	 { (char *)"THREADINFO_Handle_set", _wrap_THREADINFO_Handle_set, METH_VARARGS, (char *)"THREADINFO_Handle_set(THREADINFO self, HANDLE Handle)"},
	 { (char *)"THREADINFO_Handle_get", _wrap_THREADINFO_Handle_get, METH_VARARGS, (char *)"THREADINFO_Handle_get(THREADINFO self) -> HANDLE"},
	 { (char *)"THREADINFO_ThreadId_set", _wrap_THREADINFO_ThreadId_set, METH_VARARGS, (char *)"THREADINFO_ThreadId_set(THREADINFO self, DWORD ThreadId)"},
	 { (char *)"THREADINFO_ThreadId_get", _wrap_THREADINFO_ThreadId_get, METH_VARARGS, (char *)"THREADINFO_ThreadId_get(THREADINFO self) -> DWORD"},
	 { (char *)"THREADINFO_ThreadStartAddress_set", _wrap_THREADINFO_ThreadStartAddress_set, METH_VARARGS, (char *)"THREADINFO_ThreadStartAddress_set(THREADINFO self, duint ThreadStartAddress)"},
	 { (char *)"THREADINFO_ThreadStartAddress_get", _wrap_THREADINFO_ThreadStartAddress_get, METH_VARARGS, (char *)"THREADINFO_ThreadStartAddress_get(THREADINFO self) -> duint"},
	 { (char *)"THREADINFO_ThreadLocalBase_set", _wrap_THREADINFO_ThreadLocalBase_set, METH_VARARGS, (char *)"THREADINFO_ThreadLocalBase_set(THREADINFO self, duint ThreadLocalBase)"},
	 { (char *)"THREADINFO_ThreadLocalBase_get", _wrap_THREADINFO_ThreadLocalBase_get, METH_VARARGS, (char *)"THREADINFO_ThreadLocalBase_get(THREADINFO self) -> duint"},
	 { (char *)"THREADINFO_threadName_set", _wrap_THREADINFO_threadName_set, METH_VARARGS, (char *)"THREADINFO_threadName_set(THREADINFO self, char [256] threadName)"},
	 { (char *)"THREADINFO_threadName_get", _wrap_THREADINFO_threadName_get, METH_VARARGS, (char *)"THREADINFO_threadName_get(THREADINFO self) -> char [256]"},
	 { (char *)"new_THREADINFO", _wrap_new_THREADINFO, METH_VARARGS, (char *)"new_THREADINFO() -> THREADINFO"},
	 { (char *)"delete_THREADINFO", _wrap_delete_THREADINFO, METH_VARARGS, (char *)"delete_THREADINFO(THREADINFO self)"},
	 { (char *)"THREADINFO_swigregister", THREADINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"THREADALLINFO_BasicInfo_set", _wrap_THREADALLINFO_BasicInfo_set, METH_VARARGS, (char *)"THREADALLINFO_BasicInfo_set(THREADALLINFO self, THREADINFO BasicInfo)"},
	 { (char *)"THREADALLINFO_BasicInfo_get", _wrap_THREADALLINFO_BasicInfo_get, METH_VARARGS, (char *)"THREADALLINFO_BasicInfo_get(THREADALLINFO self) -> THREADINFO"},
	 { (char *)"THREADALLINFO_ThreadCip_set", _wrap_THREADALLINFO_ThreadCip_set, METH_VARARGS, (char *)"THREADALLINFO_ThreadCip_set(THREADALLINFO self, duint ThreadCip)"},
	 { (char *)"THREADALLINFO_ThreadCip_get", _wrap_THREADALLINFO_ThreadCip_get, METH_VARARGS, (char *)"THREADALLINFO_ThreadCip_get(THREADALLINFO self) -> duint"},
	 { (char *)"THREADALLINFO_SuspendCount_set", _wrap_THREADALLINFO_SuspendCount_set, METH_VARARGS, (char *)"THREADALLINFO_SuspendCount_set(THREADALLINFO self, DWORD SuspendCount)"},
	 { (char *)"THREADALLINFO_SuspendCount_get", _wrap_THREADALLINFO_SuspendCount_get, METH_VARARGS, (char *)"THREADALLINFO_SuspendCount_get(THREADALLINFO self) -> DWORD"},
	 { (char *)"THREADALLINFO_Priority_set", _wrap_THREADALLINFO_Priority_set, METH_VARARGS, (char *)"THREADALLINFO_Priority_set(THREADALLINFO self, THREADPRIORITY Priority)"},
	 { (char *)"THREADALLINFO_Priority_get", _wrap_THREADALLINFO_Priority_get, METH_VARARGS, (char *)"THREADALLINFO_Priority_get(THREADALLINFO self) -> THREADPRIORITY"},
	 { (char *)"THREADALLINFO_WaitReason_set", _wrap_THREADALLINFO_WaitReason_set, METH_VARARGS, (char *)"THREADALLINFO_WaitReason_set(THREADALLINFO self, THREADWAITREASON WaitReason)"},
	 { (char *)"THREADALLINFO_WaitReason_get", _wrap_THREADALLINFO_WaitReason_get, METH_VARARGS, (char *)"THREADALLINFO_WaitReason_get(THREADALLINFO self) -> THREADWAITREASON"},
	 { (char *)"THREADALLINFO_LastError_set", _wrap_THREADALLINFO_LastError_set, METH_VARARGS, (char *)"THREADALLINFO_LastError_set(THREADALLINFO self, DWORD LastError)"},
	 { (char *)"THREADALLINFO_LastError_get", _wrap_THREADALLINFO_LastError_get, METH_VARARGS, (char *)"THREADALLINFO_LastError_get(THREADALLINFO self) -> DWORD"},
	 { (char *)"THREADALLINFO_UserTime_set", _wrap_THREADALLINFO_UserTime_set, METH_VARARGS, (char *)"THREADALLINFO_UserTime_set(THREADALLINFO self, FILETIME UserTime)"},
	 { (char *)"THREADALLINFO_UserTime_get", _wrap_THREADALLINFO_UserTime_get, METH_VARARGS, (char *)"THREADALLINFO_UserTime_get(THREADALLINFO self) -> FILETIME"},
	 { (char *)"THREADALLINFO_KernelTime_set", _wrap_THREADALLINFO_KernelTime_set, METH_VARARGS, (char *)"THREADALLINFO_KernelTime_set(THREADALLINFO self, FILETIME KernelTime)"},
	 { (char *)"THREADALLINFO_KernelTime_get", _wrap_THREADALLINFO_KernelTime_get, METH_VARARGS, (char *)"THREADALLINFO_KernelTime_get(THREADALLINFO self) -> FILETIME"},
	 { (char *)"THREADALLINFO_CreationTime_set", _wrap_THREADALLINFO_CreationTime_set, METH_VARARGS, (char *)"THREADALLINFO_CreationTime_set(THREADALLINFO self, FILETIME CreationTime)"},
	 { (char *)"THREADALLINFO_CreationTime_get", _wrap_THREADALLINFO_CreationTime_get, METH_VARARGS, (char *)"THREADALLINFO_CreationTime_get(THREADALLINFO self) -> FILETIME"},
	 { (char *)"THREADALLINFO_Cycles_set", _wrap_THREADALLINFO_Cycles_set, METH_VARARGS, (char *)"THREADALLINFO_Cycles_set(THREADALLINFO self, ULONG64 Cycles)"},
	 { (char *)"THREADALLINFO_Cycles_get", _wrap_THREADALLINFO_Cycles_get, METH_VARARGS, (char *)"THREADALLINFO_Cycles_get(THREADALLINFO self) -> ULONG64"},
	 { (char *)"new_THREADALLINFO", _wrap_new_THREADALLINFO, METH_VARARGS, (char *)"new_THREADALLINFO() -> THREADALLINFO"},
	 { (char *)"delete_THREADALLINFO", _wrap_delete_THREADALLINFO, METH_VARARGS, (char *)"delete_THREADALLINFO(THREADALLINFO self)"},
	 { (char *)"THREADALLINFO_swigregister", THREADALLINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"THREADLIST_count_set", _wrap_THREADLIST_count_set, METH_VARARGS, (char *)"THREADLIST_count_set(THREADLIST self, int count)"},
	 { (char *)"THREADLIST_count_get", _wrap_THREADLIST_count_get, METH_VARARGS, (char *)"THREADLIST_count_get(THREADLIST self) -> int"},
	 { (char *)"THREADLIST_list_set", _wrap_THREADLIST_list_set, METH_VARARGS, (char *)"THREADLIST_list_set(THREADLIST self, THREADALLINFO list)"},
	 { (char *)"THREADLIST_list_get", _wrap_THREADLIST_list_get, METH_VARARGS, (char *)"THREADLIST_list_get(THREADLIST self) -> THREADALLINFO"},
	 { (char *)"THREADLIST_CurrentThread_set", _wrap_THREADLIST_CurrentThread_set, METH_VARARGS, (char *)"THREADLIST_CurrentThread_set(THREADLIST self, int CurrentThread)"},
	 { (char *)"THREADLIST_CurrentThread_get", _wrap_THREADLIST_CurrentThread_get, METH_VARARGS, (char *)"THREADLIST_CurrentThread_get(THREADLIST self) -> int"},
	 { (char *)"new_THREADLIST", _wrap_new_THREADLIST, METH_VARARGS, (char *)"new_THREADLIST() -> THREADLIST"},
	 { (char *)"delete_THREADLIST", _wrap_delete_THREADLIST, METH_VARARGS, (char *)"delete_THREADLIST(THREADLIST self)"},
	 { (char *)"THREADLIST_swigregister", THREADLIST_swigregister, METH_VARARGS, NULL},
	 { (char *)"MEMORY_INFO_value_set", _wrap_MEMORY_INFO_value_set, METH_VARARGS, (char *)"MEMORY_INFO_value_set(MEMORY_INFO self, duint value)"},
	 { (char *)"MEMORY_INFO_value_get", _wrap_MEMORY_INFO_value_get, METH_VARARGS, (char *)"MEMORY_INFO_value_get(MEMORY_INFO self) -> duint"},
	 { (char *)"MEMORY_INFO_size_set", _wrap_MEMORY_INFO_size_set, METH_VARARGS, (char *)"MEMORY_INFO_size_set(MEMORY_INFO self, MEMORY_SIZE size)"},
	 { (char *)"MEMORY_INFO_size_get", _wrap_MEMORY_INFO_size_get, METH_VARARGS, (char *)"MEMORY_INFO_size_get(MEMORY_INFO self) -> MEMORY_SIZE"},
	 { (char *)"MEMORY_INFO_mnemonic_set", _wrap_MEMORY_INFO_mnemonic_set, METH_VARARGS, (char *)"MEMORY_INFO_mnemonic_set(MEMORY_INFO self, char [64] mnemonic)"},
	 { (char *)"MEMORY_INFO_mnemonic_get", _wrap_MEMORY_INFO_mnemonic_get, METH_VARARGS, (char *)"MEMORY_INFO_mnemonic_get(MEMORY_INFO self) -> char [64]"},
	 { (char *)"new_MEMORY_INFO", _wrap_new_MEMORY_INFO, METH_VARARGS, (char *)"new_MEMORY_INFO() -> MEMORY_INFO"},
	 { (char *)"delete_MEMORY_INFO", _wrap_delete_MEMORY_INFO, METH_VARARGS, (char *)"delete_MEMORY_INFO(MEMORY_INFO self)"},
	 { (char *)"MEMORY_INFO_swigregister", MEMORY_INFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"VALUE_INFO_value_set", _wrap_VALUE_INFO_value_set, METH_VARARGS, (char *)"VALUE_INFO_value_set(VALUE_INFO self, duint value)"},
	 { (char *)"VALUE_INFO_value_get", _wrap_VALUE_INFO_value_get, METH_VARARGS, (char *)"VALUE_INFO_value_get(VALUE_INFO self) -> duint"},
	 { (char *)"VALUE_INFO_size_set", _wrap_VALUE_INFO_size_set, METH_VARARGS, (char *)"VALUE_INFO_size_set(VALUE_INFO self, VALUE_SIZE size)"},
	 { (char *)"VALUE_INFO_size_get", _wrap_VALUE_INFO_size_get, METH_VARARGS, (char *)"VALUE_INFO_size_get(VALUE_INFO self) -> VALUE_SIZE"},
	 { (char *)"new_VALUE_INFO", _wrap_new_VALUE_INFO, METH_VARARGS, (char *)"new_VALUE_INFO() -> VALUE_INFO"},
	 { (char *)"delete_VALUE_INFO", _wrap_delete_VALUE_INFO, METH_VARARGS, (char *)"delete_VALUE_INFO(VALUE_INFO self)"},
	 { (char *)"VALUE_INFO_swigregister", VALUE_INFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"BASIC_INSTRUCTION_INFO_type_set", _wrap_BASIC_INSTRUCTION_INFO_type_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_type_set(BASIC_INSTRUCTION_INFO self, DWORD type)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_type_get", _wrap_BASIC_INSTRUCTION_INFO_type_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_type_get(BASIC_INSTRUCTION_INFO self) -> DWORD"},
	 { (char *)"BASIC_INSTRUCTION_INFO_value_set", _wrap_BASIC_INSTRUCTION_INFO_value_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_value_set(BASIC_INSTRUCTION_INFO self, VALUE_INFO value)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_value_get", _wrap_BASIC_INSTRUCTION_INFO_value_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_value_get(BASIC_INSTRUCTION_INFO self) -> VALUE_INFO"},
	 { (char *)"BASIC_INSTRUCTION_INFO_memory_set", _wrap_BASIC_INSTRUCTION_INFO_memory_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_memory_set(BASIC_INSTRUCTION_INFO self, MEMORY_INFO memory)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_memory_get", _wrap_BASIC_INSTRUCTION_INFO_memory_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_memory_get(BASIC_INSTRUCTION_INFO self) -> MEMORY_INFO"},
	 { (char *)"BASIC_INSTRUCTION_INFO_addr_set", _wrap_BASIC_INSTRUCTION_INFO_addr_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_addr_set(BASIC_INSTRUCTION_INFO self, duint addr)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_addr_get", _wrap_BASIC_INSTRUCTION_INFO_addr_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_addr_get(BASIC_INSTRUCTION_INFO self) -> duint"},
	 { (char *)"BASIC_INSTRUCTION_INFO_branch_set", _wrap_BASIC_INSTRUCTION_INFO_branch_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_branch_set(BASIC_INSTRUCTION_INFO self, bool branch)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_branch_get", _wrap_BASIC_INSTRUCTION_INFO_branch_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_branch_get(BASIC_INSTRUCTION_INFO self) -> bool"},
	 { (char *)"BASIC_INSTRUCTION_INFO_call_set", _wrap_BASIC_INSTRUCTION_INFO_call_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_call_set(BASIC_INSTRUCTION_INFO self, bool call)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_call_get", _wrap_BASIC_INSTRUCTION_INFO_call_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_call_get(BASIC_INSTRUCTION_INFO self) -> bool"},
	 { (char *)"BASIC_INSTRUCTION_INFO_size_set", _wrap_BASIC_INSTRUCTION_INFO_size_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_size_set(BASIC_INSTRUCTION_INFO self, int size)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_size_get", _wrap_BASIC_INSTRUCTION_INFO_size_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_size_get(BASIC_INSTRUCTION_INFO self) -> int"},
	 { (char *)"BASIC_INSTRUCTION_INFO_instruction_set", _wrap_BASIC_INSTRUCTION_INFO_instruction_set, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_instruction_set(BASIC_INSTRUCTION_INFO self, char [64*4] instruction)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_instruction_get", _wrap_BASIC_INSTRUCTION_INFO_instruction_get, METH_VARARGS, (char *)"BASIC_INSTRUCTION_INFO_instruction_get(BASIC_INSTRUCTION_INFO self) -> char [64*4]"},
	 { (char *)"new_BASIC_INSTRUCTION_INFO", _wrap_new_BASIC_INSTRUCTION_INFO, METH_VARARGS, (char *)"new_BASIC_INSTRUCTION_INFO() -> BASIC_INSTRUCTION_INFO"},
	 { (char *)"delete_BASIC_INSTRUCTION_INFO", _wrap_delete_BASIC_INSTRUCTION_INFO, METH_VARARGS, (char *)"delete_BASIC_INSTRUCTION_INFO(BASIC_INSTRUCTION_INFO self)"},
	 { (char *)"BASIC_INSTRUCTION_INFO_swigregister", BASIC_INSTRUCTION_INFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"SCRIPTBRANCH_type_set", _wrap_SCRIPTBRANCH_type_set, METH_VARARGS, (char *)"SCRIPTBRANCH_type_set(SCRIPTBRANCH self, SCRIPTBRANCHTYPE type)"},
	 { (char *)"SCRIPTBRANCH_type_get", _wrap_SCRIPTBRANCH_type_get, METH_VARARGS, (char *)"SCRIPTBRANCH_type_get(SCRIPTBRANCH self) -> SCRIPTBRANCHTYPE"},
	 { (char *)"SCRIPTBRANCH_dest_set", _wrap_SCRIPTBRANCH_dest_set, METH_VARARGS, (char *)"SCRIPTBRANCH_dest_set(SCRIPTBRANCH self, int dest)"},
	 { (char *)"SCRIPTBRANCH_dest_get", _wrap_SCRIPTBRANCH_dest_get, METH_VARARGS, (char *)"SCRIPTBRANCH_dest_get(SCRIPTBRANCH self) -> int"},
	 { (char *)"SCRIPTBRANCH_branchlabel_set", _wrap_SCRIPTBRANCH_branchlabel_set, METH_VARARGS, (char *)"SCRIPTBRANCH_branchlabel_set(SCRIPTBRANCH self, char [256] branchlabel)"},
	 { (char *)"SCRIPTBRANCH_branchlabel_get", _wrap_SCRIPTBRANCH_branchlabel_get, METH_VARARGS, (char *)"SCRIPTBRANCH_branchlabel_get(SCRIPTBRANCH self) -> char [256]"},
	 { (char *)"new_SCRIPTBRANCH", _wrap_new_SCRIPTBRANCH, METH_VARARGS, (char *)"new_SCRIPTBRANCH() -> SCRIPTBRANCH"},
	 { (char *)"delete_SCRIPTBRANCH", _wrap_delete_SCRIPTBRANCH, METH_VARARGS, (char *)"delete_SCRIPTBRANCH(SCRIPTBRANCH self)"},
	 { (char *)"SCRIPTBRANCH_swigregister", SCRIPTBRANCH_swigregister, METH_VARARGS, NULL},
	 { (char *)"FUNCTION_LOOP_INFO_addr_set", _wrap_FUNCTION_LOOP_INFO_addr_set, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_addr_set(FUNCTION_LOOP_INFO self, duint addr)"},
	 { (char *)"FUNCTION_LOOP_INFO_addr_get", _wrap_FUNCTION_LOOP_INFO_addr_get, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_addr_get(FUNCTION_LOOP_INFO self) -> duint"},
	 { (char *)"FUNCTION_LOOP_INFO_start_set", _wrap_FUNCTION_LOOP_INFO_start_set, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_start_set(FUNCTION_LOOP_INFO self, duint start)"},
	 { (char *)"FUNCTION_LOOP_INFO_start_get", _wrap_FUNCTION_LOOP_INFO_start_get, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_start_get(FUNCTION_LOOP_INFO self) -> duint"},
	 { (char *)"FUNCTION_LOOP_INFO_end_set", _wrap_FUNCTION_LOOP_INFO_end_set, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_end_set(FUNCTION_LOOP_INFO self, duint end)"},
	 { (char *)"FUNCTION_LOOP_INFO_end_get", _wrap_FUNCTION_LOOP_INFO_end_get, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_end_get(FUNCTION_LOOP_INFO self) -> duint"},
	 { (char *)"FUNCTION_LOOP_INFO_manual_set", _wrap_FUNCTION_LOOP_INFO_manual_set, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_manual_set(FUNCTION_LOOP_INFO self, bool manual)"},
	 { (char *)"FUNCTION_LOOP_INFO_manual_get", _wrap_FUNCTION_LOOP_INFO_manual_get, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_manual_get(FUNCTION_LOOP_INFO self) -> bool"},
	 { (char *)"FUNCTION_LOOP_INFO_depth_set", _wrap_FUNCTION_LOOP_INFO_depth_set, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_depth_set(FUNCTION_LOOP_INFO self, int depth)"},
	 { (char *)"FUNCTION_LOOP_INFO_depth_get", _wrap_FUNCTION_LOOP_INFO_depth_get, METH_VARARGS, (char *)"FUNCTION_LOOP_INFO_depth_get(FUNCTION_LOOP_INFO self) -> int"},
	 { (char *)"new_FUNCTION_LOOP_INFO", _wrap_new_FUNCTION_LOOP_INFO, METH_VARARGS, (char *)"new_FUNCTION_LOOP_INFO() -> FUNCTION_LOOP_INFO"},
	 { (char *)"delete_FUNCTION_LOOP_INFO", _wrap_delete_FUNCTION_LOOP_INFO, METH_VARARGS, (char *)"delete_FUNCTION_LOOP_INFO(FUNCTION_LOOP_INFO self)"},
	 { (char *)"FUNCTION_LOOP_INFO_swigregister", FUNCTION_LOOP_INFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"XREF_RECORD_addr_set", _wrap_XREF_RECORD_addr_set, METH_VARARGS, (char *)"XREF_RECORD_addr_set(XREF_RECORD self, duint addr)"},
	 { (char *)"XREF_RECORD_addr_get", _wrap_XREF_RECORD_addr_get, METH_VARARGS, (char *)"XREF_RECORD_addr_get(XREF_RECORD self) -> duint"},
	 { (char *)"XREF_RECORD_type_set", _wrap_XREF_RECORD_type_set, METH_VARARGS, (char *)"XREF_RECORD_type_set(XREF_RECORD self, XREFTYPE type)"},
	 { (char *)"XREF_RECORD_type_get", _wrap_XREF_RECORD_type_get, METH_VARARGS, (char *)"XREF_RECORD_type_get(XREF_RECORD self) -> XREFTYPE"},
	 { (char *)"new_XREF_RECORD", _wrap_new_XREF_RECORD, METH_VARARGS, (char *)"new_XREF_RECORD() -> XREF_RECORD"},
	 { (char *)"delete_XREF_RECORD", _wrap_delete_XREF_RECORD, METH_VARARGS, (char *)"delete_XREF_RECORD(XREF_RECORD self)"},
	 { (char *)"XREF_RECORD_swigregister", XREF_RECORD_swigregister, METH_VARARGS, NULL},
	 { (char *)"XREF_INFO_refcount_set", _wrap_XREF_INFO_refcount_set, METH_VARARGS, (char *)"XREF_INFO_refcount_set(XREF_INFO self, duint refcount)"},
	 { (char *)"XREF_INFO_refcount_get", _wrap_XREF_INFO_refcount_get, METH_VARARGS, (char *)"XREF_INFO_refcount_get(XREF_INFO self) -> duint"},
	 { (char *)"XREF_INFO_references_set", _wrap_XREF_INFO_references_set, METH_VARARGS, (char *)"XREF_INFO_references_set(XREF_INFO self, XREF_RECORD references)"},
	 { (char *)"XREF_INFO_references_get", _wrap_XREF_INFO_references_get, METH_VARARGS, (char *)"XREF_INFO_references_get(XREF_INFO self) -> XREF_RECORD"},
	 { (char *)"new_XREF_INFO", _wrap_new_XREF_INFO, METH_VARARGS, (char *)"new_XREF_INFO() -> XREF_INFO"},
	 { (char *)"delete_XREF_INFO", _wrap_delete_XREF_INFO, METH_VARARGS, (char *)"delete_XREF_INFO(XREF_INFO self)"},
	 { (char *)"XREF_INFO_swigregister", XREF_INFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"SYMBOLPTR_modbase_set", _wrap_SYMBOLPTR_modbase_set, METH_VARARGS, (char *)"SYMBOLPTR_modbase_set(SYMBOLPTR self, duint modbase)"},
	 { (char *)"SYMBOLPTR_modbase_get", _wrap_SYMBOLPTR_modbase_get, METH_VARARGS, (char *)"SYMBOLPTR_modbase_get(SYMBOLPTR self) -> duint"},
	 { (char *)"SYMBOLPTR_symbol_set", _wrap_SYMBOLPTR_symbol_set, METH_VARARGS, (char *)"SYMBOLPTR_symbol_set(SYMBOLPTR self, void const * symbol)"},
	 { (char *)"SYMBOLPTR_symbol_get", _wrap_SYMBOLPTR_symbol_get, METH_VARARGS, (char *)"SYMBOLPTR_symbol_get(SYMBOLPTR self) -> void const *"},
	 { (char *)"new_SYMBOLPTR", _wrap_new_SYMBOLPTR, METH_VARARGS, (char *)"new_SYMBOLPTR() -> SYMBOLPTR"},
	 { (char *)"delete_SYMBOLPTR", _wrap_delete_SYMBOLPTR, METH_VARARGS, (char *)"delete_SYMBOLPTR(SYMBOLPTR self)"},
	 { (char *)"SYMBOLPTR_swigregister", SYMBOLPTR_swigregister, METH_VARARGS, NULL},
	 { (char *)"DbgInit", _wrap_DbgInit, METH_VARARGS, (char *)"DbgInit() -> char const *"},
	 { (char *)"DbgExit", _wrap_DbgExit, METH_VARARGS, (char *)"DbgExit()"},
	 { (char *)"DbgMemRead", _wrap_DbgMemRead, METH_VARARGS, (char *)"DbgMemRead(duint va, void * dest, duint size) -> bool"},
	 { (char *)"DbgMemWrite", _wrap_DbgMemWrite, METH_VARARGS, (char *)"DbgMemWrite(duint va, void const * src, duint size) -> bool"},
	 { (char *)"DbgMemGetPageSize", _wrap_DbgMemGetPageSize, METH_VARARGS, (char *)"DbgMemGetPageSize(duint base) -> duint"},
	 { (char *)"DbgMemFindBaseAddr", _wrap_DbgMemFindBaseAddr, METH_VARARGS, (char *)"DbgMemFindBaseAddr(duint addr, duint * size) -> duint"},
	 { (char *)"DbgCmdExec", _wrap_DbgCmdExec, METH_VARARGS, (char *)"DbgCmdExec(char const * cmd) -> bool"},
	 { (char *)"DbgCmdExecDirect", _wrap_DbgCmdExecDirect, METH_VARARGS, (char *)"DbgCmdExecDirect(char const * cmd) -> bool"},
	 { (char *)"DbgMemMap", _wrap_DbgMemMap, METH_VARARGS, (char *)"DbgMemMap(MEMMAP memmap) -> bool"},
	 { (char *)"DbgIsValidExpression", _wrap_DbgIsValidExpression, METH_VARARGS, (char *)"DbgIsValidExpression(char const * expression) -> bool"},
	 { (char *)"DbgIsDebugging", _wrap_DbgIsDebugging, METH_VARARGS, (char *)"DbgIsDebugging() -> bool"},
	 { (char *)"DbgIsJumpGoingToExecute", _wrap_DbgIsJumpGoingToExecute, METH_VARARGS, (char *)"DbgIsJumpGoingToExecute(duint addr) -> bool"},
	 { (char *)"DbgGetLabelAt", _wrap_DbgGetLabelAt, METH_VARARGS, (char *)"DbgGetLabelAt(duint addr, SEGMENTREG segment, char * text) -> bool"},
	 { (char *)"DbgSetLabelAt", _wrap_DbgSetLabelAt, METH_VARARGS, (char *)"DbgSetLabelAt(duint addr, char const * text) -> bool"},
	 { (char *)"DbgClearLabelRange", _wrap_DbgClearLabelRange, METH_VARARGS, (char *)"DbgClearLabelRange(duint start, duint end)"},
	 { (char *)"DbgGetCommentAt", _wrap_DbgGetCommentAt, METH_VARARGS, (char *)"DbgGetCommentAt(duint addr, char * text) -> bool"},
	 { (char *)"DbgSetCommentAt", _wrap_DbgSetCommentAt, METH_VARARGS, (char *)"DbgSetCommentAt(duint addr, char const * text) -> bool"},
	 { (char *)"DbgClearCommentRange", _wrap_DbgClearCommentRange, METH_VARARGS, (char *)"DbgClearCommentRange(duint start, duint end)"},
	 { (char *)"DbgGetBookmarkAt", _wrap_DbgGetBookmarkAt, METH_VARARGS, (char *)"DbgGetBookmarkAt(duint addr) -> bool"},
	 { (char *)"DbgSetBookmarkAt", _wrap_DbgSetBookmarkAt, METH_VARARGS, (char *)"DbgSetBookmarkAt(duint addr, bool isbookmark) -> bool"},
	 { (char *)"DbgClearBookmarkRange", _wrap_DbgClearBookmarkRange, METH_VARARGS, (char *)"DbgClearBookmarkRange(duint start, duint end)"},
	 { (char *)"DbgGetModuleAt", _wrap_DbgGetModuleAt, METH_VARARGS, (char *)"DbgGetModuleAt(duint addr, char * text) -> bool"},
	 { (char *)"DbgGetBpxTypeAt", _wrap_DbgGetBpxTypeAt, METH_VARARGS, (char *)"DbgGetBpxTypeAt(duint addr) -> BPXTYPE"},
	 { (char *)"DbgValFromString", _wrap_DbgValFromString, METH_VARARGS, (char *)"DbgValFromString(char const * string) -> duint"},
	 { (char *)"DbgGetRegDumpEx", _wrap_DbgGetRegDumpEx, METH_VARARGS, (char *)"DbgGetRegDumpEx(REGDUMP regdump, size_t size) -> bool"},
	 { (char *)"DbgValToString", _wrap_DbgValToString, METH_VARARGS, (char *)"DbgValToString(char const * string, duint value) -> bool"},
	 { (char *)"DbgMemIsValidReadPtr", _wrap_DbgMemIsValidReadPtr, METH_VARARGS, (char *)"DbgMemIsValidReadPtr(duint addr) -> bool"},
	 { (char *)"DbgGetBpList", _wrap_DbgGetBpList, METH_VARARGS, (char *)"DbgGetBpList(BPXTYPE type, BPMAP list) -> int"},
	 { (char *)"DbgGetFunctionTypeAt", _wrap_DbgGetFunctionTypeAt, METH_VARARGS, (char *)"DbgGetFunctionTypeAt(duint addr) -> FUNCTYPE"},
	 { (char *)"DbgGetLoopTypeAt", _wrap_DbgGetLoopTypeAt, METH_VARARGS, (char *)"DbgGetLoopTypeAt(duint addr, int depth) -> LOOPTYPE"},
	 { (char *)"DbgGetBranchDestination", _wrap_DbgGetBranchDestination, METH_VARARGS, (char *)"DbgGetBranchDestination(duint addr) -> duint"},
	 { (char *)"DbgScriptLoad", _wrap_DbgScriptLoad, METH_VARARGS, (char *)"DbgScriptLoad(char const * filename)"},
	 { (char *)"DbgScriptUnload", _wrap_DbgScriptUnload, METH_VARARGS, (char *)"DbgScriptUnload()"},
	 { (char *)"DbgScriptRun", _wrap_DbgScriptRun, METH_VARARGS, (char *)"DbgScriptRun(int destline)"},
	 { (char *)"DbgScriptStep", _wrap_DbgScriptStep, METH_VARARGS, (char *)"DbgScriptStep()"},
	 { (char *)"DbgScriptBpToggle", _wrap_DbgScriptBpToggle, METH_VARARGS, (char *)"DbgScriptBpToggle(int line) -> bool"},
	 { (char *)"DbgScriptBpGet", _wrap_DbgScriptBpGet, METH_VARARGS, (char *)"DbgScriptBpGet(int line) -> bool"},
	 { (char *)"DbgScriptCmdExec", _wrap_DbgScriptCmdExec, METH_VARARGS, (char *)"DbgScriptCmdExec(char const * command) -> bool"},
	 { (char *)"DbgScriptAbort", _wrap_DbgScriptAbort, METH_VARARGS, (char *)"DbgScriptAbort()"},
	 { (char *)"DbgScriptGetLineType", _wrap_DbgScriptGetLineType, METH_VARARGS, (char *)"DbgScriptGetLineType(int line) -> SCRIPTLINETYPE"},
	 { (char *)"DbgScriptSetIp", _wrap_DbgScriptSetIp, METH_VARARGS, (char *)"DbgScriptSetIp(int line)"},
	 { (char *)"DbgScriptGetBranchInfo", _wrap_DbgScriptGetBranchInfo, METH_VARARGS, (char *)"DbgScriptGetBranchInfo(int line, SCRIPTBRANCH info) -> bool"},
	 { (char *)"DbgSymbolEnum", _wrap_DbgSymbolEnum, METH_VARARGS, (char *)"DbgSymbolEnum(duint base, CBSYMBOLENUM cbSymbolEnum, void * user)"},
	 { (char *)"DbgSymbolEnumFromCache", _wrap_DbgSymbolEnumFromCache, METH_VARARGS, (char *)"DbgSymbolEnumFromCache(duint base, CBSYMBOLENUM cbSymbolEnum, void * user)"},
	 { (char *)"DbgAssembleAt", _wrap_DbgAssembleAt, METH_VARARGS, (char *)"DbgAssembleAt(duint addr, char const * instruction) -> bool"},
	 { (char *)"DbgModBaseFromName", _wrap_DbgModBaseFromName, METH_VARARGS, (char *)"DbgModBaseFromName(char const * name) -> duint"},
	 { (char *)"DbgDisasmAt", _wrap_DbgDisasmAt, METH_VARARGS, (char *)"DbgDisasmAt(duint addr, DISASM_INSTR instr)"},
	 { (char *)"DbgStackCommentGet", _wrap_DbgStackCommentGet, METH_VARARGS, (char *)"DbgStackCommentGet(duint addr, STACK_COMMENT comment) -> bool"},
	 { (char *)"DbgGetThreadList", _wrap_DbgGetThreadList, METH_VARARGS, (char *)"DbgGetThreadList(THREADLIST list)"},
	 { (char *)"DbgSettingsUpdated", _wrap_DbgSettingsUpdated, METH_VARARGS, (char *)"DbgSettingsUpdated()"},
	 { (char *)"DbgDisasmFastAt", _wrap_DbgDisasmFastAt, METH_VARARGS, (char *)"DbgDisasmFastAt(duint addr, BASIC_INSTRUCTION_INFO basicinfo)"},
	 { (char *)"DbgMenuEntryClicked", _wrap_DbgMenuEntryClicked, METH_VARARGS, (char *)"DbgMenuEntryClicked(int hEntry)"},
	 { (char *)"DbgFunctionGet", _wrap_DbgFunctionGet, METH_VARARGS, (char *)"DbgFunctionGet(duint addr, duint * start, duint * end) -> bool"},
	 { (char *)"DbgFunctionOverlaps", _wrap_DbgFunctionOverlaps, METH_VARARGS, (char *)"DbgFunctionOverlaps(duint start, duint end) -> bool"},
	 { (char *)"DbgFunctionAdd", _wrap_DbgFunctionAdd, METH_VARARGS, (char *)"DbgFunctionAdd(duint start, duint end) -> bool"},
	 { (char *)"DbgFunctionDel", _wrap_DbgFunctionDel, METH_VARARGS, (char *)"DbgFunctionDel(duint addr) -> bool"},
	 { (char *)"DbgArgumentGet", _wrap_DbgArgumentGet, METH_VARARGS, (char *)"DbgArgumentGet(duint addr, duint * start, duint * end) -> bool"},
	 { (char *)"DbgArgumentOverlaps", _wrap_DbgArgumentOverlaps, METH_VARARGS, (char *)"DbgArgumentOverlaps(duint start, duint end) -> bool"},
	 { (char *)"DbgArgumentAdd", _wrap_DbgArgumentAdd, METH_VARARGS, (char *)"DbgArgumentAdd(duint start, duint end) -> bool"},
	 { (char *)"DbgArgumentDel", _wrap_DbgArgumentDel, METH_VARARGS, (char *)"DbgArgumentDel(duint addr) -> bool"},
	 { (char *)"DbgLoopGet", _wrap_DbgLoopGet, METH_VARARGS, (char *)"DbgLoopGet(int depth, duint addr, duint * start, duint * end) -> bool"},
	 { (char *)"DbgLoopOverlaps", _wrap_DbgLoopOverlaps, METH_VARARGS, (char *)"DbgLoopOverlaps(int depth, duint start, duint end) -> bool"},
	 { (char *)"DbgLoopAdd", _wrap_DbgLoopAdd, METH_VARARGS, (char *)"DbgLoopAdd(duint start, duint end) -> bool"},
	 { (char *)"DbgLoopDel", _wrap_DbgLoopDel, METH_VARARGS, (char *)"DbgLoopDel(int depth, duint addr) -> bool"},
	 { (char *)"DbgXrefAdd", _wrap_DbgXrefAdd, METH_VARARGS, (char *)"DbgXrefAdd(duint addr, duint _from) -> bool"},
	 { (char *)"DbgXrefDelAll", _wrap_DbgXrefDelAll, METH_VARARGS, (char *)"DbgXrefDelAll(duint addr) -> bool"},
	 { (char *)"DbgXrefGet", _wrap_DbgXrefGet, METH_VARARGS, (char *)"DbgXrefGet(duint addr, XREF_INFO info) -> bool"},
	 { (char *)"DbgGetXrefCountAt", _wrap_DbgGetXrefCountAt, METH_VARARGS, (char *)"DbgGetXrefCountAt(duint addr) -> size_t"},
	 { (char *)"DbgGetXrefTypeAt", _wrap_DbgGetXrefTypeAt, METH_VARARGS, (char *)"DbgGetXrefTypeAt(duint addr) -> XREFTYPE"},
	 { (char *)"DbgIsRunLocked", _wrap_DbgIsRunLocked, METH_VARARGS, (char *)"DbgIsRunLocked() -> bool"},
	 { (char *)"DbgIsBpDisabled", _wrap_DbgIsBpDisabled, METH_VARARGS, (char *)"DbgIsBpDisabled(duint addr) -> bool"},
	 { (char *)"DbgSetAutoCommentAt", _wrap_DbgSetAutoCommentAt, METH_VARARGS, (char *)"DbgSetAutoCommentAt(duint addr, char const * text) -> bool"},
	 { (char *)"DbgClearAutoCommentRange", _wrap_DbgClearAutoCommentRange, METH_VARARGS, (char *)"DbgClearAutoCommentRange(duint start, duint end)"},
	 { (char *)"DbgSetAutoLabelAt", _wrap_DbgSetAutoLabelAt, METH_VARARGS, (char *)"DbgSetAutoLabelAt(duint addr, char const * text) -> bool"},
	 { (char *)"DbgClearAutoLabelRange", _wrap_DbgClearAutoLabelRange, METH_VARARGS, (char *)"DbgClearAutoLabelRange(duint start, duint end)"},
	 { (char *)"DbgSetAutoBookmarkAt", _wrap_DbgSetAutoBookmarkAt, METH_VARARGS, (char *)"DbgSetAutoBookmarkAt(duint addr) -> bool"},
	 { (char *)"DbgClearAutoBookmarkRange", _wrap_DbgClearAutoBookmarkRange, METH_VARARGS, (char *)"DbgClearAutoBookmarkRange(duint start, duint end)"},
	 { (char *)"DbgSetAutoFunctionAt", _wrap_DbgSetAutoFunctionAt, METH_VARARGS, (char *)"DbgSetAutoFunctionAt(duint start, duint end) -> bool"},
	 { (char *)"DbgClearAutoFunctionRange", _wrap_DbgClearAutoFunctionRange, METH_VARARGS, (char *)"DbgClearAutoFunctionRange(duint start, duint end)"},
	 { (char *)"DbgGetStringAt", _wrap_DbgGetStringAt, METH_VARARGS, (char *)"DbgGetStringAt(duint addr, char * text) -> bool"},
	 { (char *)"DbgFunctions", _wrap_DbgFunctions, METH_VARARGS, (char *)"DbgFunctions() -> DBGFUNCTIONS"},
	 { (char *)"DbgWinEvent", _wrap_DbgWinEvent, METH_VARARGS, (char *)"DbgWinEvent(MSG * message, long * result) -> bool"},
	 { (char *)"DbgWinEventGlobal", _wrap_DbgWinEventGlobal, METH_VARARGS, (char *)"DbgWinEventGlobal(MSG * message) -> bool"},
	 { (char *)"DbgIsRunning", _wrap_DbgIsRunning, METH_VARARGS, (char *)"DbgIsRunning() -> bool"},
	 { (char *)"DbgGetTimeWastedCounter", _wrap_DbgGetTimeWastedCounter, METH_VARARGS, (char *)"DbgGetTimeWastedCounter() -> duint"},
	 { (char *)"DbgGetArgTypeAt", _wrap_DbgGetArgTypeAt, METH_VARARGS, (char *)"DbgGetArgTypeAt(duint addr) -> ARGTYPE"},
	 { (char *)"DbgGetEncodeTypeBuffer", _wrap_DbgGetEncodeTypeBuffer, METH_VARARGS, (char *)"DbgGetEncodeTypeBuffer(duint addr, duint * size) -> void *"},
	 { (char *)"DbgReleaseEncodeTypeBuffer", _wrap_DbgReleaseEncodeTypeBuffer, METH_VARARGS, (char *)"DbgReleaseEncodeTypeBuffer(void * buffer)"},
	 { (char *)"DbgGetEncodeTypeAt", _wrap_DbgGetEncodeTypeAt, METH_VARARGS, (char *)"DbgGetEncodeTypeAt(duint addr, duint size) -> ENCODETYPE"},
	 { (char *)"DbgGetEncodeSizeAt", _wrap_DbgGetEncodeSizeAt, METH_VARARGS, (char *)"DbgGetEncodeSizeAt(duint addr, duint codesize) -> duint"},
	 { (char *)"DbgSetEncodeType", _wrap_DbgSetEncodeType, METH_VARARGS, (char *)"DbgSetEncodeType(duint addr, duint size, ENCODETYPE type) -> bool"},
	 { (char *)"DbgDelEncodeTypeRange", _wrap_DbgDelEncodeTypeRange, METH_VARARGS, (char *)"DbgDelEncodeTypeRange(duint start, duint end)"},
	 { (char *)"DbgDelEncodeTypeSegment", _wrap_DbgDelEncodeTypeSegment, METH_VARARGS, (char *)"DbgDelEncodeTypeSegment(duint start)"},
	 { (char *)"DbgGetWatchList", _wrap_DbgGetWatchList, METH_VARARGS, (char *)"DbgGetWatchList(ListInfo list) -> bool"},
	 { (char *)"DbgSelChanged", _wrap_DbgSelChanged, METH_VARARGS, (char *)"DbgSelChanged(int hWindow, duint VA)"},
	 { (char *)"DbgGetProcessHandle", _wrap_DbgGetProcessHandle, METH_VARARGS, (char *)"DbgGetProcessHandle() -> HANDLE"},
	 { (char *)"DbgGetThreadHandle", _wrap_DbgGetThreadHandle, METH_VARARGS, (char *)"DbgGetThreadHandle() -> HANDLE"},
	 { (char *)"DbgGetProcessId", _wrap_DbgGetProcessId, METH_VARARGS, (char *)"DbgGetProcessId() -> DWORD"},
	 { (char *)"DbgGetThreadId", _wrap_DbgGetThreadId, METH_VARARGS, (char *)"DbgGetThreadId() -> DWORD"},
	 { (char *)"DbgGetPebAddress", _wrap_DbgGetPebAddress, METH_VARARGS, (char *)"DbgGetPebAddress(DWORD ProcessId) -> duint"},
	 { (char *)"DbgGetTebAddress", _wrap_DbgGetTebAddress, METH_VARARGS, (char *)"DbgGetTebAddress(DWORD ThreadId) -> duint"},
	 { (char *)"DbgAnalyzeFunction", _wrap_DbgAnalyzeFunction, METH_VARARGS, (char *)"DbgAnalyzeFunction(duint entry, BridgeCFGraphList * graph) -> bool"},
	 { (char *)"DbgEval", _wrap_DbgEval, METH_VARARGS, (char *)"DbgEval(char const * expression, bool * success=None) -> duint"},
	 { (char *)"DbgMenuPrepare", _wrap_DbgMenuPrepare, METH_VARARGS, (char *)"DbgMenuPrepare(int hMenu)"},
	 { (char *)"DbgGetSymbolInfo", _wrap_DbgGetSymbolInfo, METH_VARARGS, (char *)"DbgGetSymbolInfo(SYMBOLPTR symbolptr, SYMBOLINFO info)"},
	 { (char *)"CELLINFO_row_set", _wrap_CELLINFO_row_set, METH_VARARGS, (char *)"CELLINFO_row_set(CELLINFO self, int row)"},
	 { (char *)"CELLINFO_row_get", _wrap_CELLINFO_row_get, METH_VARARGS, (char *)"CELLINFO_row_get(CELLINFO self) -> int"},
	 { (char *)"CELLINFO_col_set", _wrap_CELLINFO_col_set, METH_VARARGS, (char *)"CELLINFO_col_set(CELLINFO self, int col)"},
	 { (char *)"CELLINFO_col_get", _wrap_CELLINFO_col_get, METH_VARARGS, (char *)"CELLINFO_col_get(CELLINFO self) -> int"},
	 { (char *)"CELLINFO_str_set", _wrap_CELLINFO_str_set, METH_VARARGS, (char *)"CELLINFO_str_set(CELLINFO self, char const * str)"},
	 { (char *)"CELLINFO_str_get", _wrap_CELLINFO_str_get, METH_VARARGS, (char *)"CELLINFO_str_get(CELLINFO self) -> char const *"},
	 { (char *)"new_CELLINFO", _wrap_new_CELLINFO, METH_VARARGS, (char *)"new_CELLINFO() -> CELLINFO"},
	 { (char *)"delete_CELLINFO", _wrap_delete_CELLINFO, METH_VARARGS, (char *)"delete_CELLINFO(CELLINFO self)"},
	 { (char *)"CELLINFO_swigregister", CELLINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"SELECTIONDATA_start_set", _wrap_SELECTIONDATA_start_set, METH_VARARGS, (char *)"SELECTIONDATA_start_set(SELECTIONDATA self, duint start)"},
	 { (char *)"SELECTIONDATA_start_get", _wrap_SELECTIONDATA_start_get, METH_VARARGS, (char *)"SELECTIONDATA_start_get(SELECTIONDATA self) -> duint"},
	 { (char *)"SELECTIONDATA_end_set", _wrap_SELECTIONDATA_end_set, METH_VARARGS, (char *)"SELECTIONDATA_end_set(SELECTIONDATA self, duint end)"},
	 { (char *)"SELECTIONDATA_end_get", _wrap_SELECTIONDATA_end_get, METH_VARARGS, (char *)"SELECTIONDATA_end_get(SELECTIONDATA self) -> duint"},
	 { (char *)"new_SELECTIONDATA", _wrap_new_SELECTIONDATA, METH_VARARGS, (char *)"new_SELECTIONDATA() -> SELECTIONDATA"},
	 { (char *)"delete_SELECTIONDATA", _wrap_delete_SELECTIONDATA, METH_VARARGS, (char *)"delete_SELECTIONDATA(SELECTIONDATA self)"},
	 { (char *)"SELECTIONDATA_swigregister", SELECTIONDATA_swigregister, METH_VARARGS, NULL},
	 { (char *)"ICONDATA_data_set", _wrap_ICONDATA_data_set, METH_VARARGS, (char *)"ICONDATA_data_set(ICONDATA self, void const * data)"},
	 { (char *)"ICONDATA_data_get", _wrap_ICONDATA_data_get, METH_VARARGS, (char *)"ICONDATA_data_get(ICONDATA self) -> void const *"},
	 { (char *)"ICONDATA_size_set", _wrap_ICONDATA_size_set, METH_VARARGS, (char *)"ICONDATA_size_set(ICONDATA self, duint size)"},
	 { (char *)"ICONDATA_size_get", _wrap_ICONDATA_size_get, METH_VARARGS, (char *)"ICONDATA_size_get(ICONDATA self) -> duint"},
	 { (char *)"new_ICONDATA", _wrap_new_ICONDATA, METH_VARARGS, (char *)"new_ICONDATA() -> ICONDATA"},
	 { (char *)"delete_ICONDATA", _wrap_delete_ICONDATA, METH_VARARGS, (char *)"delete_ICONDATA(ICONDATA self)"},
	 { (char *)"ICONDATA_swigregister", ICONDATA_swigregister, METH_VARARGS, NULL},
	 { (char *)"SCRIPTTYPEINFO_name_set", _wrap_SCRIPTTYPEINFO_name_set, METH_VARARGS, (char *)"SCRIPTTYPEINFO_name_set(SCRIPTTYPEINFO self, char [64] name)"},
	 { (char *)"SCRIPTTYPEINFO_name_get", _wrap_SCRIPTTYPEINFO_name_get, METH_VARARGS, (char *)"SCRIPTTYPEINFO_name_get(SCRIPTTYPEINFO self) -> char [64]"},
	 { (char *)"SCRIPTTYPEINFO_id_set", _wrap_SCRIPTTYPEINFO_id_set, METH_VARARGS, (char *)"SCRIPTTYPEINFO_id_set(SCRIPTTYPEINFO self, int id)"},
	 { (char *)"SCRIPTTYPEINFO_id_get", _wrap_SCRIPTTYPEINFO_id_get, METH_VARARGS, (char *)"SCRIPTTYPEINFO_id_get(SCRIPTTYPEINFO self) -> int"},
	 { (char *)"SCRIPTTYPEINFO_execute_set", _wrap_SCRIPTTYPEINFO_execute_set, METH_VARARGS, (char *)"SCRIPTTYPEINFO_execute_set(SCRIPTTYPEINFO self, GUISCRIPTEXECUTE execute)"},
	 { (char *)"SCRIPTTYPEINFO_execute_get", _wrap_SCRIPTTYPEINFO_execute_get, METH_VARARGS, (char *)"SCRIPTTYPEINFO_execute_get(SCRIPTTYPEINFO self) -> GUISCRIPTEXECUTE"},
	 { (char *)"SCRIPTTYPEINFO_completeCommand_set", _wrap_SCRIPTTYPEINFO_completeCommand_set, METH_VARARGS, (char *)"SCRIPTTYPEINFO_completeCommand_set(SCRIPTTYPEINFO self, GUISCRIPTCOMPLETER completeCommand)"},
	 { (char *)"SCRIPTTYPEINFO_completeCommand_get", _wrap_SCRIPTTYPEINFO_completeCommand_get, METH_VARARGS, (char *)"SCRIPTTYPEINFO_completeCommand_get(SCRIPTTYPEINFO self) -> GUISCRIPTCOMPLETER"},
	 { (char *)"new_SCRIPTTYPEINFO", _wrap_new_SCRIPTTYPEINFO, METH_VARARGS, (char *)"new_SCRIPTTYPEINFO() -> SCRIPTTYPEINFO"},
	 { (char *)"delete_SCRIPTTYPEINFO", _wrap_delete_SCRIPTTYPEINFO, METH_VARARGS, (char *)"delete_SCRIPTTYPEINFO(SCRIPTTYPEINFO self)"},
	 { (char *)"SCRIPTTYPEINFO_swigregister", SCRIPTTYPEINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"ACTIVEVIEW_titleHwnd_set", _wrap_ACTIVEVIEW_titleHwnd_set, METH_VARARGS, (char *)"ACTIVEVIEW_titleHwnd_set(ACTIVEVIEW self, void * titleHwnd)"},
	 { (char *)"ACTIVEVIEW_titleHwnd_get", _wrap_ACTIVEVIEW_titleHwnd_get, METH_VARARGS, (char *)"ACTIVEVIEW_titleHwnd_get(ACTIVEVIEW self) -> void *"},
	 { (char *)"ACTIVEVIEW_classHwnd_set", _wrap_ACTIVEVIEW_classHwnd_set, METH_VARARGS, (char *)"ACTIVEVIEW_classHwnd_set(ACTIVEVIEW self, void * classHwnd)"},
	 { (char *)"ACTIVEVIEW_classHwnd_get", _wrap_ACTIVEVIEW_classHwnd_get, METH_VARARGS, (char *)"ACTIVEVIEW_classHwnd_get(ACTIVEVIEW self) -> void *"},
	 { (char *)"ACTIVEVIEW_title_set", _wrap_ACTIVEVIEW_title_set, METH_VARARGS, (char *)"ACTIVEVIEW_title_set(ACTIVEVIEW self, char [512] title)"},
	 { (char *)"ACTIVEVIEW_title_get", _wrap_ACTIVEVIEW_title_get, METH_VARARGS, (char *)"ACTIVEVIEW_title_get(ACTIVEVIEW self) -> char [512]"},
	 { (char *)"ACTIVEVIEW_className_set", _wrap_ACTIVEVIEW_className_set, METH_VARARGS, (char *)"ACTIVEVIEW_className_set(ACTIVEVIEW self, char [512] className)"},
	 { (char *)"ACTIVEVIEW_className_get", _wrap_ACTIVEVIEW_className_get, METH_VARARGS, (char *)"ACTIVEVIEW_className_get(ACTIVEVIEW self) -> char [512]"},
	 { (char *)"new_ACTIVEVIEW", _wrap_new_ACTIVEVIEW, METH_VARARGS, (char *)"new_ACTIVEVIEW() -> ACTIVEVIEW"},
	 { (char *)"delete_ACTIVEVIEW", _wrap_delete_ACTIVEVIEW, METH_VARARGS, (char *)"delete_ACTIVEVIEW(ACTIVEVIEW self)"},
	 { (char *)"ACTIVEVIEW_swigregister", ACTIVEVIEW_swigregister, METH_VARARGS, NULL},
	 { (char *)"TYPEDESCRIPTOR_expanded_set", _wrap_TYPEDESCRIPTOR_expanded_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_expanded_set(TYPEDESCRIPTOR self, bool expanded)"},
	 { (char *)"TYPEDESCRIPTOR_expanded_get", _wrap_TYPEDESCRIPTOR_expanded_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_expanded_get(TYPEDESCRIPTOR self) -> bool"},
	 { (char *)"TYPEDESCRIPTOR_reverse_set", _wrap_TYPEDESCRIPTOR_reverse_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_reverse_set(TYPEDESCRIPTOR self, bool reverse)"},
	 { (char *)"TYPEDESCRIPTOR_reverse_get", _wrap_TYPEDESCRIPTOR_reverse_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_reverse_get(TYPEDESCRIPTOR self) -> bool"},
	 { (char *)"TYPEDESCRIPTOR_name_set", _wrap_TYPEDESCRIPTOR_name_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_name_set(TYPEDESCRIPTOR self, char const * name)"},
	 { (char *)"TYPEDESCRIPTOR_name_get", _wrap_TYPEDESCRIPTOR_name_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_name_get(TYPEDESCRIPTOR self) -> char const *"},
	 { (char *)"TYPEDESCRIPTOR_addr_set", _wrap_TYPEDESCRIPTOR_addr_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_addr_set(TYPEDESCRIPTOR self, duint addr)"},
	 { (char *)"TYPEDESCRIPTOR_addr_get", _wrap_TYPEDESCRIPTOR_addr_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_addr_get(TYPEDESCRIPTOR self) -> duint"},
	 { (char *)"TYPEDESCRIPTOR_offset_set", _wrap_TYPEDESCRIPTOR_offset_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_offset_set(TYPEDESCRIPTOR self, duint offset)"},
	 { (char *)"TYPEDESCRIPTOR_offset_get", _wrap_TYPEDESCRIPTOR_offset_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_offset_get(TYPEDESCRIPTOR self) -> duint"},
	 { (char *)"TYPEDESCRIPTOR_id_set", _wrap_TYPEDESCRIPTOR_id_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_id_set(TYPEDESCRIPTOR self, int id)"},
	 { (char *)"TYPEDESCRIPTOR_id_get", _wrap_TYPEDESCRIPTOR_id_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_id_get(TYPEDESCRIPTOR self) -> int"},
	 { (char *)"TYPEDESCRIPTOR_size_set", _wrap_TYPEDESCRIPTOR_size_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_size_set(TYPEDESCRIPTOR self, int size)"},
	 { (char *)"TYPEDESCRIPTOR_size_get", _wrap_TYPEDESCRIPTOR_size_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_size_get(TYPEDESCRIPTOR self) -> int"},
	 { (char *)"TYPEDESCRIPTOR_callback_set", _wrap_TYPEDESCRIPTOR_callback_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_callback_set(TYPEDESCRIPTOR self, TYPETOSTRING callback)"},
	 { (char *)"TYPEDESCRIPTOR_callback_get", _wrap_TYPEDESCRIPTOR_callback_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_callback_get(TYPEDESCRIPTOR self) -> TYPETOSTRING"},
	 { (char *)"TYPEDESCRIPTOR_userdata_set", _wrap_TYPEDESCRIPTOR_userdata_set, METH_VARARGS, (char *)"TYPEDESCRIPTOR_userdata_set(TYPEDESCRIPTOR self, void * userdata)"},
	 { (char *)"TYPEDESCRIPTOR_userdata_get", _wrap_TYPEDESCRIPTOR_userdata_get, METH_VARARGS, (char *)"TYPEDESCRIPTOR_userdata_get(TYPEDESCRIPTOR self) -> void *"},
	 { (char *)"new_TYPEDESCRIPTOR", _wrap_new_TYPEDESCRIPTOR, METH_VARARGS, (char *)"new_TYPEDESCRIPTOR() -> TYPEDESCRIPTOR"},
	 { (char *)"delete_TYPEDESCRIPTOR", _wrap_delete_TYPEDESCRIPTOR, METH_VARARGS, (char *)"delete_TYPEDESCRIPTOR(TYPEDESCRIPTOR self)"},
	 { (char *)"TYPEDESCRIPTOR_swigregister", TYPEDESCRIPTOR_swigregister, METH_VARARGS, NULL},
	 { (char *)"GuiTranslateText", _wrap_GuiTranslateText, METH_VARARGS, (char *)"GuiTranslateText(char const * Source) -> char const *"},
	 { (char *)"GuiDisasmAt", _wrap_GuiDisasmAt, METH_VARARGS, (char *)"GuiDisasmAt(duint addr, duint cip)"},
	 { (char *)"GuiSetDebugState", _wrap_GuiSetDebugState, METH_VARARGS, (char *)"GuiSetDebugState(DBGSTATE state)"},
	 { (char *)"GuiSetDebugStateFast", _wrap_GuiSetDebugStateFast, METH_VARARGS, (char *)"GuiSetDebugStateFast(DBGSTATE state)"},
	 { (char *)"GuiAddLogMessage", _wrap_GuiAddLogMessage, METH_VARARGS, (char *)"GuiAddLogMessage(char const * msg)"},
	 { (char *)"GuiLogClear", _wrap_GuiLogClear, METH_VARARGS, (char *)"GuiLogClear()"},
	 { (char *)"GuiUpdateAllViews", _wrap_GuiUpdateAllViews, METH_VARARGS, (char *)"GuiUpdateAllViews()"},
	 { (char *)"GuiUpdateRegisterView", _wrap_GuiUpdateRegisterView, METH_VARARGS, (char *)"GuiUpdateRegisterView()"},
	 { (char *)"GuiUpdateDisassemblyView", _wrap_GuiUpdateDisassemblyView, METH_VARARGS, (char *)"GuiUpdateDisassemblyView()"},
	 { (char *)"GuiUpdateBreakpointsView", _wrap_GuiUpdateBreakpointsView, METH_VARARGS, (char *)"GuiUpdateBreakpointsView()"},
	 { (char *)"GuiUpdateWindowTitle", _wrap_GuiUpdateWindowTitle, METH_VARARGS, (char *)"GuiUpdateWindowTitle(char const * filename)"},
	 { (char *)"GuiGetWindowHandle", _wrap_GuiGetWindowHandle, METH_VARARGS, (char *)"GuiGetWindowHandle() -> HWND"},
	 { (char *)"GuiDumpAt", _wrap_GuiDumpAt, METH_VARARGS, (char *)"GuiDumpAt(duint va)"},
	 { (char *)"GuiScriptAdd", _wrap_GuiScriptAdd, METH_VARARGS, (char *)"GuiScriptAdd(int count, char const ** lines)"},
	 { (char *)"GuiScriptClear", _wrap_GuiScriptClear, METH_VARARGS, (char *)"GuiScriptClear()"},
	 { (char *)"GuiScriptSetIp", _wrap_GuiScriptSetIp, METH_VARARGS, (char *)"GuiScriptSetIp(int line)"},
	 { (char *)"GuiScriptError", _wrap_GuiScriptError, METH_VARARGS, (char *)"GuiScriptError(int line, char const * message)"},
	 { (char *)"GuiScriptSetTitle", _wrap_GuiScriptSetTitle, METH_VARARGS, (char *)"GuiScriptSetTitle(char const * title)"},
	 { (char *)"GuiScriptSetInfoLine", _wrap_GuiScriptSetInfoLine, METH_VARARGS, (char *)"GuiScriptSetInfoLine(int line, char const * info)"},
	 { (char *)"GuiScriptMessage", _wrap_GuiScriptMessage, METH_VARARGS, (char *)"GuiScriptMessage(char const * message)"},
	 { (char *)"GuiScriptMsgyn", _wrap_GuiScriptMsgyn, METH_VARARGS, (char *)"GuiScriptMsgyn(char const * message) -> int"},
	 { (char *)"GuiScriptEnableHighlighting", _wrap_GuiScriptEnableHighlighting, METH_VARARGS, (char *)"GuiScriptEnableHighlighting(bool enable)"},
	 { (char *)"GuiSymbolLogAdd", _wrap_GuiSymbolLogAdd, METH_VARARGS, (char *)"GuiSymbolLogAdd(char const * message)"},
	 { (char *)"GuiSymbolLogClear", _wrap_GuiSymbolLogClear, METH_VARARGS, (char *)"GuiSymbolLogClear()"},
	 { (char *)"GuiSymbolSetProgress", _wrap_GuiSymbolSetProgress, METH_VARARGS, (char *)"GuiSymbolSetProgress(int percent)"},
	 { (char *)"GuiSymbolUpdateModuleList", _wrap_GuiSymbolUpdateModuleList, METH_VARARGS, (char *)"GuiSymbolUpdateModuleList(int count, SYMBOLMODULEINFO modules)"},
	 { (char *)"GuiSymbolRefreshCurrent", _wrap_GuiSymbolRefreshCurrent, METH_VARARGS, (char *)"GuiSymbolRefreshCurrent()"},
	 { (char *)"GuiReferenceAddColumn", _wrap_GuiReferenceAddColumn, METH_VARARGS, (char *)"GuiReferenceAddColumn(int width, char const * title)"},
	 { (char *)"GuiReferenceSetRowCount", _wrap_GuiReferenceSetRowCount, METH_VARARGS, (char *)"GuiReferenceSetRowCount(int count)"},
	 { (char *)"GuiReferenceGetRowCount", _wrap_GuiReferenceGetRowCount, METH_VARARGS, (char *)"GuiReferenceGetRowCount() -> int"},
	 { (char *)"GuiReferenceSearchGetRowCount", _wrap_GuiReferenceSearchGetRowCount, METH_VARARGS, (char *)"GuiReferenceSearchGetRowCount() -> int"},
	 { (char *)"GuiReferenceDeleteAllColumns", _wrap_GuiReferenceDeleteAllColumns, METH_VARARGS, (char *)"GuiReferenceDeleteAllColumns()"},
	 { (char *)"GuiReferenceInitialize", _wrap_GuiReferenceInitialize, METH_VARARGS, (char *)"GuiReferenceInitialize(char const * name)"},
	 { (char *)"GuiReferenceSetCellContent", _wrap_GuiReferenceSetCellContent, METH_VARARGS, (char *)"GuiReferenceSetCellContent(int row, int col, char const * str)"},
	 { (char *)"GuiReferenceGetCellContent", _wrap_GuiReferenceGetCellContent, METH_VARARGS, (char *)"GuiReferenceGetCellContent(int row, int col) -> char const *"},
	 { (char *)"GuiReferenceSearchGetCellContent", _wrap_GuiReferenceSearchGetCellContent, METH_VARARGS, (char *)"GuiReferenceSearchGetCellContent(int row, int col) -> char const *"},
	 { (char *)"GuiReferenceReloadData", _wrap_GuiReferenceReloadData, METH_VARARGS, (char *)"GuiReferenceReloadData()"},
	 { (char *)"GuiReferenceSetSingleSelection", _wrap_GuiReferenceSetSingleSelection, METH_VARARGS, (char *)"GuiReferenceSetSingleSelection(int index, bool scroll)"},
	 { (char *)"GuiReferenceSetProgress", _wrap_GuiReferenceSetProgress, METH_VARARGS, (char *)"GuiReferenceSetProgress(int progress)"},
	 { (char *)"GuiReferenceSetCurrentTaskProgress", _wrap_GuiReferenceSetCurrentTaskProgress, METH_VARARGS, (char *)"GuiReferenceSetCurrentTaskProgress(int progress, char const * taskTitle)"},
	 { (char *)"GuiReferenceSetSearchStartCol", _wrap_GuiReferenceSetSearchStartCol, METH_VARARGS, (char *)"GuiReferenceSetSearchStartCol(int col)"},
	 { (char *)"GuiStackDumpAt", _wrap_GuiStackDumpAt, METH_VARARGS, (char *)"GuiStackDumpAt(duint addr, duint csp)"},
	 { (char *)"GuiUpdateDumpView", _wrap_GuiUpdateDumpView, METH_VARARGS, (char *)"GuiUpdateDumpView()"},
	 { (char *)"GuiUpdateWatchView", _wrap_GuiUpdateWatchView, METH_VARARGS, (char *)"GuiUpdateWatchView()"},
	 { (char *)"GuiUpdateThreadView", _wrap_GuiUpdateThreadView, METH_VARARGS, (char *)"GuiUpdateThreadView()"},
	 { (char *)"GuiUpdateMemoryView", _wrap_GuiUpdateMemoryView, METH_VARARGS, (char *)"GuiUpdateMemoryView()"},
	 { (char *)"GuiAddRecentFile", _wrap_GuiAddRecentFile, METH_VARARGS, (char *)"GuiAddRecentFile(char const * file)"},
	 { (char *)"GuiSetLastException", _wrap_GuiSetLastException, METH_VARARGS, (char *)"GuiSetLastException(unsigned int exception)"},
	 { (char *)"GuiGetDisassembly", _wrap_GuiGetDisassembly, METH_VARARGS, (char *)"GuiGetDisassembly(duint addr, char * text) -> bool"},
	 { (char *)"GuiMenuAdd", _wrap_GuiMenuAdd, METH_VARARGS, (char *)"GuiMenuAdd(int hMenu, char const * title) -> int"},
	 { (char *)"GuiMenuAddEntry", _wrap_GuiMenuAddEntry, METH_VARARGS, (char *)"GuiMenuAddEntry(int hMenu, char const * title) -> int"},
	 { (char *)"GuiMenuAddSeparator", _wrap_GuiMenuAddSeparator, METH_VARARGS, (char *)"GuiMenuAddSeparator(int hMenu)"},
	 { (char *)"GuiMenuClear", _wrap_GuiMenuClear, METH_VARARGS, (char *)"GuiMenuClear(int hMenu)"},
	 { (char *)"GuiMenuRemove", _wrap_GuiMenuRemove, METH_VARARGS, (char *)"GuiMenuRemove(int hEntryMenu)"},
	 { (char *)"GuiSelectionGet", _wrap_GuiSelectionGet, METH_VARARGS, (char *)"GuiSelectionGet(int hWindow, SELECTIONDATA selection) -> bool"},
	 { (char *)"GuiSelectionSet", _wrap_GuiSelectionSet, METH_VARARGS, (char *)"GuiSelectionSet(int hWindow, SELECTIONDATA selection) -> bool"},
	 { (char *)"GuiGetLineWindow", _wrap_GuiGetLineWindow, METH_VARARGS, (char *)"GuiGetLineWindow(char const * title, char * text) -> bool"},
	 { (char *)"GuiAutoCompleteAddCmd", _wrap_GuiAutoCompleteAddCmd, METH_VARARGS, (char *)"GuiAutoCompleteAddCmd(char const * cmd)"},
	 { (char *)"GuiAutoCompleteDelCmd", _wrap_GuiAutoCompleteDelCmd, METH_VARARGS, (char *)"GuiAutoCompleteDelCmd(char const * cmd)"},
	 { (char *)"GuiAutoCompleteClearAll", _wrap_GuiAutoCompleteClearAll, METH_VARARGS, (char *)"GuiAutoCompleteClearAll()"},
	 { (char *)"GuiAddStatusBarMessage", _wrap_GuiAddStatusBarMessage, METH_VARARGS, (char *)"GuiAddStatusBarMessage(char const * msg)"},
	 { (char *)"GuiUpdateSideBar", _wrap_GuiUpdateSideBar, METH_VARARGS, (char *)"GuiUpdateSideBar()"},
	 { (char *)"GuiRepaintTableView", _wrap_GuiRepaintTableView, METH_VARARGS, (char *)"GuiRepaintTableView()"},
	 { (char *)"GuiUpdatePatches", _wrap_GuiUpdatePatches, METH_VARARGS, (char *)"GuiUpdatePatches()"},
	 { (char *)"GuiUpdateCallStack", _wrap_GuiUpdateCallStack, METH_VARARGS, (char *)"GuiUpdateCallStack()"},
	 { (char *)"GuiUpdateSEHChain", _wrap_GuiUpdateSEHChain, METH_VARARGS, (char *)"GuiUpdateSEHChain()"},
	 { (char *)"GuiLoadSourceFileEx", _wrap_GuiLoadSourceFileEx, METH_VARARGS, (char *)"GuiLoadSourceFileEx(char const * path, duint addr)"},
	 { (char *)"GuiMenuSetIcon", _wrap_GuiMenuSetIcon, METH_VARARGS, (char *)"GuiMenuSetIcon(int hMenu, ICONDATA icon)"},
	 { (char *)"GuiMenuSetEntryIcon", _wrap_GuiMenuSetEntryIcon, METH_VARARGS, (char *)"GuiMenuSetEntryIcon(int hEntry, ICONDATA icon)"},
	 { (char *)"GuiMenuSetEntryChecked", _wrap_GuiMenuSetEntryChecked, METH_VARARGS, (char *)"GuiMenuSetEntryChecked(int hEntry, bool checked)"},
	 { (char *)"GuiMenuSetVisible", _wrap_GuiMenuSetVisible, METH_VARARGS, (char *)"GuiMenuSetVisible(int hMenu, bool visible)"},
	 { (char *)"GuiMenuSetEntryVisible", _wrap_GuiMenuSetEntryVisible, METH_VARARGS, (char *)"GuiMenuSetEntryVisible(int hEntry, bool visible)"},
	 { (char *)"GuiMenuSetName", _wrap_GuiMenuSetName, METH_VARARGS, (char *)"GuiMenuSetName(int hMenu, char const * name)"},
	 { (char *)"GuiMenuSetEntryName", _wrap_GuiMenuSetEntryName, METH_VARARGS, (char *)"GuiMenuSetEntryName(int hEntry, char const * name)"},
	 { (char *)"GuiMenuSetEntryHotkey", _wrap_GuiMenuSetEntryHotkey, METH_VARARGS, (char *)"GuiMenuSetEntryHotkey(int hEntry, char const * hack)"},
	 { (char *)"GuiShowCpu", _wrap_GuiShowCpu, METH_VARARGS, (char *)"GuiShowCpu()"},
	 { (char *)"GuiAddQWidgetTab", _wrap_GuiAddQWidgetTab, METH_VARARGS, (char *)"GuiAddQWidgetTab(void * qWidget)"},
	 { (char *)"GuiShowQWidgetTab", _wrap_GuiShowQWidgetTab, METH_VARARGS, (char *)"GuiShowQWidgetTab(void * qWidget)"},
	 { (char *)"GuiCloseQWidgetTab", _wrap_GuiCloseQWidgetTab, METH_VARARGS, (char *)"GuiCloseQWidgetTab(void * qWidget)"},
	 { (char *)"GuiExecuteOnGuiThread", _wrap_GuiExecuteOnGuiThread, METH_VARARGS, (char *)"GuiExecuteOnGuiThread(GUICALLBACK cbGuiThread)"},
	 { (char *)"GuiUpdateTimeWastedCounter", _wrap_GuiUpdateTimeWastedCounter, METH_VARARGS, (char *)"GuiUpdateTimeWastedCounter()"},
	 { (char *)"GuiSetGlobalNotes", _wrap_GuiSetGlobalNotes, METH_VARARGS, (char *)"GuiSetGlobalNotes(char const * text)"},
	 { (char *)"GuiGetGlobalNotes", _wrap_GuiGetGlobalNotes, METH_VARARGS, (char *)"GuiGetGlobalNotes(char ** text)"},
	 { (char *)"GuiSetDebuggeeNotes", _wrap_GuiSetDebuggeeNotes, METH_VARARGS, (char *)"GuiSetDebuggeeNotes(char const * text)"},
	 { (char *)"GuiGetDebuggeeNotes", _wrap_GuiGetDebuggeeNotes, METH_VARARGS, (char *)"GuiGetDebuggeeNotes(char ** text)"},
	 { (char *)"GuiDumpAtN", _wrap_GuiDumpAtN, METH_VARARGS, (char *)"GuiDumpAtN(duint va, int index)"},
	 { (char *)"GuiDisplayWarning", _wrap_GuiDisplayWarning, METH_VARARGS, (char *)"GuiDisplayWarning(char const * title, char const * text)"},
	 { (char *)"GuiRegisterScriptLanguage", _wrap_GuiRegisterScriptLanguage, METH_VARARGS, (char *)"GuiRegisterScriptLanguage(SCRIPTTYPEINFO info)"},
	 { (char *)"GuiUnregisterScriptLanguage", _wrap_GuiUnregisterScriptLanguage, METH_VARARGS, (char *)"GuiUnregisterScriptLanguage(int id)"},
	 { (char *)"GuiUpdateArgumentWidget", _wrap_GuiUpdateArgumentWidget, METH_VARARGS, (char *)"GuiUpdateArgumentWidget()"},
	 { (char *)"GuiFocusView", _wrap_GuiFocusView, METH_VARARGS, (char *)"GuiFocusView(int hWindow)"},
	 { (char *)"GuiIsUpdateDisabled", _wrap_GuiIsUpdateDisabled, METH_VARARGS, (char *)"GuiIsUpdateDisabled() -> bool"},
	 { (char *)"GuiUpdateEnable", _wrap_GuiUpdateEnable, METH_VARARGS, (char *)"GuiUpdateEnable(bool updateNow)"},
	 { (char *)"GuiUpdateDisable", _wrap_GuiUpdateDisable, METH_VARARGS, (char *)"GuiUpdateDisable()"},
	 { (char *)"GuiLoadGraph", _wrap_GuiLoadGraph, METH_VARARGS, (char *)"GuiLoadGraph(BridgeCFGraphList * graph, duint addr) -> bool"},
	 { (char *)"GuiGraphAt", _wrap_GuiGraphAt, METH_VARARGS, (char *)"GuiGraphAt(duint addr) -> duint"},
	 { (char *)"GuiUpdateGraphView", _wrap_GuiUpdateGraphView, METH_VARARGS, (char *)"GuiUpdateGraphView()"},
	 { (char *)"GuiDisableLog", _wrap_GuiDisableLog, METH_VARARGS, (char *)"GuiDisableLog()"},
	 { (char *)"GuiEnableLog", _wrap_GuiEnableLog, METH_VARARGS, (char *)"GuiEnableLog()"},
	 { (char *)"GuiAddFavouriteTool", _wrap_GuiAddFavouriteTool, METH_VARARGS, (char *)"GuiAddFavouriteTool(char const * name, char const * description)"},
	 { (char *)"GuiAddFavouriteCommand", _wrap_GuiAddFavouriteCommand, METH_VARARGS, (char *)"GuiAddFavouriteCommand(char const * name, char const * shortcut)"},
	 { (char *)"GuiSetFavouriteToolShortcut", _wrap_GuiSetFavouriteToolShortcut, METH_VARARGS, (char *)"GuiSetFavouriteToolShortcut(char const * name, char const * shortcut)"},
	 { (char *)"GuiFoldDisassembly", _wrap_GuiFoldDisassembly, METH_VARARGS, (char *)"GuiFoldDisassembly(duint startAddress, duint length)"},
	 { (char *)"GuiSelectInMemoryMap", _wrap_GuiSelectInMemoryMap, METH_VARARGS, (char *)"GuiSelectInMemoryMap(duint addr)"},
	 { (char *)"GuiGetActiveView", _wrap_GuiGetActiveView, METH_VARARGS, (char *)"GuiGetActiveView(ACTIVEVIEW activeView)"},
	 { (char *)"GuiAddInfoLine", _wrap_GuiAddInfoLine, METH_VARARGS, (char *)"GuiAddInfoLine(char const * infoLine)"},
	 { (char *)"GuiProcessEvents", _wrap_GuiProcessEvents, METH_VARARGS, (char *)"GuiProcessEvents()"},
	 { (char *)"GuiTypeAddNode", _wrap_GuiTypeAddNode, METH_VARARGS, (char *)"GuiTypeAddNode(void * parent, TYPEDESCRIPTOR type) -> void *"},
	 { (char *)"GuiTypeClear", _wrap_GuiTypeClear, METH_VARARGS, (char *)"GuiTypeClear() -> bool"},
	 { (char *)"GuiUpdateTypeWidget", _wrap_GuiUpdateTypeWidget, METH_VARARGS, (char *)"GuiUpdateTypeWidget()"},
	 { (char *)"GuiCloseApplication", _wrap_GuiCloseApplication, METH_VARARGS, (char *)"GuiCloseApplication()"},
	 { (char *)"GuiFlushLog", _wrap_GuiFlushLog, METH_VARARGS, (char *)"GuiFlushLog()"},
	 { (char *)"GuiReferenceAddCommand", _wrap_GuiReferenceAddCommand, METH_VARARGS, (char *)"GuiReferenceAddCommand(char const * title, char const * command)"},
	 { (char *)"GuiUpdateTraceBrowser", _wrap_GuiUpdateTraceBrowser, METH_VARARGS, (char *)"GuiUpdateTraceBrowser()"},
	 { (char *)"GuiOpenTraceFile", _wrap_GuiOpenTraceFile, METH_VARARGS, (char *)"GuiOpenTraceFile(char const * fileName)"},
	 { (char *)"GuiInvalidateSymbolSource", _wrap_GuiInvalidateSymbolSource, METH_VARARGS, (char *)"GuiInvalidateSymbolSource(duint base)"},
	 { (char *)"new_MEMPAGEArray", _wrap_new_MEMPAGEArray, METH_VARARGS, (char *)"new_MEMPAGEArray(size_t nelements) -> MEMPAGEArray"},
	 { (char *)"delete_MEMPAGEArray", _wrap_delete_MEMPAGEArray, METH_VARARGS, (char *)"delete_MEMPAGEArray(MEMPAGEArray self)"},
	 { (char *)"MEMPAGEArray___getitem__", _wrap_MEMPAGEArray___getitem__, METH_VARARGS, (char *)"MEMPAGEArray___getitem__(MEMPAGEArray self, size_t index) -> MEMPAGE"},
	 { (char *)"MEMPAGEArray___setitem__", _wrap_MEMPAGEArray___setitem__, METH_VARARGS, (char *)"MEMPAGEArray___setitem__(MEMPAGEArray self, size_t index, MEMPAGE value)"},
	 { (char *)"MEMPAGEArray_cast", _wrap_MEMPAGEArray_cast, METH_VARARGS, (char *)"MEMPAGEArray_cast(MEMPAGEArray self) -> MEMPAGE"},
	 { (char *)"MEMPAGEArray_frompointer", _wrap_MEMPAGEArray_frompointer, METH_VARARGS, (char *)"MEMPAGEArray_frompointer(MEMPAGE t) -> MEMPAGEArray"},
	 { (char *)"MEMPAGEArray_swigregister", MEMPAGEArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"void_to_MEMPAGE", _wrap_void_to_MEMPAGE, METH_VARARGS, (char *)"void_to_MEMPAGE(void * x) -> MEMPAGE"},
	 { (char *)"DBGPATCHINFO_mod_set", _wrap_DBGPATCHINFO_mod_set, METH_VARARGS, (char *)"DBGPATCHINFO_mod_set(DBGPATCHINFO self, char [256] mod)"},
	 { (char *)"DBGPATCHINFO_mod_get", _wrap_DBGPATCHINFO_mod_get, METH_VARARGS, (char *)"DBGPATCHINFO_mod_get(DBGPATCHINFO self) -> char [256]"},
	 { (char *)"DBGPATCHINFO_addr_set", _wrap_DBGPATCHINFO_addr_set, METH_VARARGS, (char *)"DBGPATCHINFO_addr_set(DBGPATCHINFO self, duint addr)"},
	 { (char *)"DBGPATCHINFO_addr_get", _wrap_DBGPATCHINFO_addr_get, METH_VARARGS, (char *)"DBGPATCHINFO_addr_get(DBGPATCHINFO self) -> duint"},
	 { (char *)"DBGPATCHINFO_oldbyte_set", _wrap_DBGPATCHINFO_oldbyte_set, METH_VARARGS, (char *)"DBGPATCHINFO_oldbyte_set(DBGPATCHINFO self, unsigned char oldbyte)"},
	 { (char *)"DBGPATCHINFO_oldbyte_get", _wrap_DBGPATCHINFO_oldbyte_get, METH_VARARGS, (char *)"DBGPATCHINFO_oldbyte_get(DBGPATCHINFO self) -> unsigned char"},
	 { (char *)"DBGPATCHINFO_newbyte_set", _wrap_DBGPATCHINFO_newbyte_set, METH_VARARGS, (char *)"DBGPATCHINFO_newbyte_set(DBGPATCHINFO self, unsigned char newbyte)"},
	 { (char *)"DBGPATCHINFO_newbyte_get", _wrap_DBGPATCHINFO_newbyte_get, METH_VARARGS, (char *)"DBGPATCHINFO_newbyte_get(DBGPATCHINFO self) -> unsigned char"},
	 { (char *)"new_DBGPATCHINFO", _wrap_new_DBGPATCHINFO, METH_VARARGS, (char *)"new_DBGPATCHINFO() -> DBGPATCHINFO"},
	 { (char *)"delete_DBGPATCHINFO", _wrap_delete_DBGPATCHINFO, METH_VARARGS, (char *)"delete_DBGPATCHINFO(DBGPATCHINFO self)"},
	 { (char *)"DBGPATCHINFO_swigregister", DBGPATCHINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"DBGCALLSTACKENTRY_addr_set", _wrap_DBGCALLSTACKENTRY_addr_set, METH_VARARGS, (char *)"DBGCALLSTACKENTRY_addr_set(DBGCALLSTACKENTRY self, duint addr)"},
	 { (char *)"DBGCALLSTACKENTRY_addr_get", _wrap_DBGCALLSTACKENTRY_addr_get, METH_VARARGS, (char *)"DBGCALLSTACKENTRY_addr_get(DBGCALLSTACKENTRY self) -> duint"},
	 { (char *)"DBGCALLSTACKENTRY__from_set", _wrap_DBGCALLSTACKENTRY__from_set, METH_VARARGS, (char *)"DBGCALLSTACKENTRY__from_set(DBGCALLSTACKENTRY self, duint _from)"},
	 { (char *)"DBGCALLSTACKENTRY__from_get", _wrap_DBGCALLSTACKENTRY__from_get, METH_VARARGS, (char *)"DBGCALLSTACKENTRY__from_get(DBGCALLSTACKENTRY self) -> duint"},
	 { (char *)"DBGCALLSTACKENTRY_to_set", _wrap_DBGCALLSTACKENTRY_to_set, METH_VARARGS, (char *)"DBGCALLSTACKENTRY_to_set(DBGCALLSTACKENTRY self, duint to)"},
	 { (char *)"DBGCALLSTACKENTRY_to_get", _wrap_DBGCALLSTACKENTRY_to_get, METH_VARARGS, (char *)"DBGCALLSTACKENTRY_to_get(DBGCALLSTACKENTRY self) -> duint"},
	 { (char *)"DBGCALLSTACKENTRY_comment_set", _wrap_DBGCALLSTACKENTRY_comment_set, METH_VARARGS, (char *)"DBGCALLSTACKENTRY_comment_set(DBGCALLSTACKENTRY self, char [512] comment)"},
	 { (char *)"DBGCALLSTACKENTRY_comment_get", _wrap_DBGCALLSTACKENTRY_comment_get, METH_VARARGS, (char *)"DBGCALLSTACKENTRY_comment_get(DBGCALLSTACKENTRY self) -> char [512]"},
	 { (char *)"new_DBGCALLSTACKENTRY", _wrap_new_DBGCALLSTACKENTRY, METH_VARARGS, (char *)"new_DBGCALLSTACKENTRY() -> DBGCALLSTACKENTRY"},
	 { (char *)"delete_DBGCALLSTACKENTRY", _wrap_delete_DBGCALLSTACKENTRY, METH_VARARGS, (char *)"delete_DBGCALLSTACKENTRY(DBGCALLSTACKENTRY self)"},
	 { (char *)"DBGCALLSTACKENTRY_swigregister", DBGCALLSTACKENTRY_swigregister, METH_VARARGS, NULL},
	 { (char *)"DBGCALLSTACK_total_set", _wrap_DBGCALLSTACK_total_set, METH_VARARGS, (char *)"DBGCALLSTACK_total_set(DBGCALLSTACK self, int total)"},
	 { (char *)"DBGCALLSTACK_total_get", _wrap_DBGCALLSTACK_total_get, METH_VARARGS, (char *)"DBGCALLSTACK_total_get(DBGCALLSTACK self) -> int"},
	 { (char *)"DBGCALLSTACK_entries_set", _wrap_DBGCALLSTACK_entries_set, METH_VARARGS, (char *)"DBGCALLSTACK_entries_set(DBGCALLSTACK self, DBGCALLSTACKENTRY entries)"},
	 { (char *)"DBGCALLSTACK_entries_get", _wrap_DBGCALLSTACK_entries_get, METH_VARARGS, (char *)"DBGCALLSTACK_entries_get(DBGCALLSTACK self) -> DBGCALLSTACKENTRY"},
	 { (char *)"new_DBGCALLSTACK", _wrap_new_DBGCALLSTACK, METH_VARARGS, (char *)"new_DBGCALLSTACK() -> DBGCALLSTACK"},
	 { (char *)"delete_DBGCALLSTACK", _wrap_delete_DBGCALLSTACK, METH_VARARGS, (char *)"delete_DBGCALLSTACK(DBGCALLSTACK self)"},
	 { (char *)"DBGCALLSTACK_swigregister", DBGCALLSTACK_swigregister, METH_VARARGS, NULL},
	 { (char *)"DBGSEHRECORD_addr_set", _wrap_DBGSEHRECORD_addr_set, METH_VARARGS, (char *)"DBGSEHRECORD_addr_set(DBGSEHRECORD self, duint addr)"},
	 { (char *)"DBGSEHRECORD_addr_get", _wrap_DBGSEHRECORD_addr_get, METH_VARARGS, (char *)"DBGSEHRECORD_addr_get(DBGSEHRECORD self) -> duint"},
	 { (char *)"DBGSEHRECORD_handler_set", _wrap_DBGSEHRECORD_handler_set, METH_VARARGS, (char *)"DBGSEHRECORD_handler_set(DBGSEHRECORD self, duint handler)"},
	 { (char *)"DBGSEHRECORD_handler_get", _wrap_DBGSEHRECORD_handler_get, METH_VARARGS, (char *)"DBGSEHRECORD_handler_get(DBGSEHRECORD self) -> duint"},
	 { (char *)"new_DBGSEHRECORD", _wrap_new_DBGSEHRECORD, METH_VARARGS, (char *)"new_DBGSEHRECORD() -> DBGSEHRECORD"},
	 { (char *)"delete_DBGSEHRECORD", _wrap_delete_DBGSEHRECORD, METH_VARARGS, (char *)"delete_DBGSEHRECORD(DBGSEHRECORD self)"},
	 { (char *)"DBGSEHRECORD_swigregister", DBGSEHRECORD_swigregister, METH_VARARGS, NULL},
	 { (char *)"DBGSEHCHAIN_total_set", _wrap_DBGSEHCHAIN_total_set, METH_VARARGS, (char *)"DBGSEHCHAIN_total_set(DBGSEHCHAIN self, duint total)"},
	 { (char *)"DBGSEHCHAIN_total_get", _wrap_DBGSEHCHAIN_total_get, METH_VARARGS, (char *)"DBGSEHCHAIN_total_get(DBGSEHCHAIN self) -> duint"},
	 { (char *)"DBGSEHCHAIN_records_set", _wrap_DBGSEHCHAIN_records_set, METH_VARARGS, (char *)"DBGSEHCHAIN_records_set(DBGSEHCHAIN self, DBGSEHRECORD records)"},
	 { (char *)"DBGSEHCHAIN_records_get", _wrap_DBGSEHCHAIN_records_get, METH_VARARGS, (char *)"DBGSEHCHAIN_records_get(DBGSEHCHAIN self) -> DBGSEHRECORD"},
	 { (char *)"new_DBGSEHCHAIN", _wrap_new_DBGSEHCHAIN, METH_VARARGS, (char *)"new_DBGSEHCHAIN() -> DBGSEHCHAIN"},
	 { (char *)"delete_DBGSEHCHAIN", _wrap_delete_DBGSEHCHAIN, METH_VARARGS, (char *)"delete_DBGSEHCHAIN(DBGSEHCHAIN self)"},
	 { (char *)"DBGSEHCHAIN_swigregister", DBGSEHCHAIN_swigregister, METH_VARARGS, NULL},
	 { (char *)"DBGPROCESSINFO_dwProcessId_set", _wrap_DBGPROCESSINFO_dwProcessId_set, METH_VARARGS, (char *)"DBGPROCESSINFO_dwProcessId_set(DBGPROCESSINFO self, DWORD dwProcessId)"},
	 { (char *)"DBGPROCESSINFO_dwProcessId_get", _wrap_DBGPROCESSINFO_dwProcessId_get, METH_VARARGS, (char *)"DBGPROCESSINFO_dwProcessId_get(DBGPROCESSINFO self) -> DWORD"},
	 { (char *)"DBGPROCESSINFO_szExeFile_set", _wrap_DBGPROCESSINFO_szExeFile_set, METH_VARARGS, (char *)"DBGPROCESSINFO_szExeFile_set(DBGPROCESSINFO self, char [MAX_PATH] szExeFile)"},
	 { (char *)"DBGPROCESSINFO_szExeFile_get", _wrap_DBGPROCESSINFO_szExeFile_get, METH_VARARGS, (char *)"DBGPROCESSINFO_szExeFile_get(DBGPROCESSINFO self) -> char [MAX_PATH]"},
	 { (char *)"DBGPROCESSINFO_szExeMainWindowTitle_set", _wrap_DBGPROCESSINFO_szExeMainWindowTitle_set, METH_VARARGS, (char *)"DBGPROCESSINFO_szExeMainWindowTitle_set(DBGPROCESSINFO self, char [MAX_PATH] szExeMainWindowTitle)"},
	 { (char *)"DBGPROCESSINFO_szExeMainWindowTitle_get", _wrap_DBGPROCESSINFO_szExeMainWindowTitle_get, METH_VARARGS, (char *)"DBGPROCESSINFO_szExeMainWindowTitle_get(DBGPROCESSINFO self) -> char [MAX_PATH]"},
	 { (char *)"DBGPROCESSINFO_szExeArgs_set", _wrap_DBGPROCESSINFO_szExeArgs_set, METH_VARARGS, (char *)"DBGPROCESSINFO_szExeArgs_set(DBGPROCESSINFO self, char [256] szExeArgs)"},
	 { (char *)"DBGPROCESSINFO_szExeArgs_get", _wrap_DBGPROCESSINFO_szExeArgs_get, METH_VARARGS, (char *)"DBGPROCESSINFO_szExeArgs_get(DBGPROCESSINFO self) -> char [256]"},
	 { (char *)"new_DBGPROCESSINFO", _wrap_new_DBGPROCESSINFO, METH_VARARGS, (char *)"new_DBGPROCESSINFO() -> DBGPROCESSINFO"},
	 { (char *)"delete_DBGPROCESSINFO", _wrap_delete_DBGPROCESSINFO, METH_VARARGS, (char *)"delete_DBGPROCESSINFO(DBGPROCESSINFO self)"},
	 { (char *)"DBGPROCESSINFO_swigregister", DBGPROCESSINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"DBGRELOCATIONINFO_rva_set", _wrap_DBGRELOCATIONINFO_rva_set, METH_VARARGS, (char *)"DBGRELOCATIONINFO_rva_set(DBGRELOCATIONINFO self, DWORD rva)"},
	 { (char *)"DBGRELOCATIONINFO_rva_get", _wrap_DBGRELOCATIONINFO_rva_get, METH_VARARGS, (char *)"DBGRELOCATIONINFO_rva_get(DBGRELOCATIONINFO self) -> DWORD"},
	 { (char *)"DBGRELOCATIONINFO_type_set", _wrap_DBGRELOCATIONINFO_type_set, METH_VARARGS, (char *)"DBGRELOCATIONINFO_type_set(DBGRELOCATIONINFO self, BYTE type)"},
	 { (char *)"DBGRELOCATIONINFO_type_get", _wrap_DBGRELOCATIONINFO_type_get, METH_VARARGS, (char *)"DBGRELOCATIONINFO_type_get(DBGRELOCATIONINFO self) -> BYTE"},
	 { (char *)"DBGRELOCATIONINFO_size_set", _wrap_DBGRELOCATIONINFO_size_set, METH_VARARGS, (char *)"DBGRELOCATIONINFO_size_set(DBGRELOCATIONINFO self, WORD size)"},
	 { (char *)"DBGRELOCATIONINFO_size_get", _wrap_DBGRELOCATIONINFO_size_get, METH_VARARGS, (char *)"DBGRELOCATIONINFO_size_get(DBGRELOCATIONINFO self) -> WORD"},
	 { (char *)"new_DBGRELOCATIONINFO", _wrap_new_DBGRELOCATIONINFO, METH_VARARGS, (char *)"new_DBGRELOCATIONINFO() -> DBGRELOCATIONINFO"},
	 { (char *)"delete_DBGRELOCATIONINFO", _wrap_delete_DBGRELOCATIONINFO, METH_VARARGS, (char *)"delete_DBGRELOCATIONINFO(DBGRELOCATIONINFO self)"},
	 { (char *)"DBGRELOCATIONINFO_swigregister", DBGRELOCATIONINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"HANDLEINFO_Handle_set", _wrap_HANDLEINFO_Handle_set, METH_VARARGS, (char *)"HANDLEINFO_Handle_set(HANDLEINFO self, duint Handle)"},
	 { (char *)"HANDLEINFO_Handle_get", _wrap_HANDLEINFO_Handle_get, METH_VARARGS, (char *)"HANDLEINFO_Handle_get(HANDLEINFO self) -> duint"},
	 { (char *)"HANDLEINFO_TypeNumber_set", _wrap_HANDLEINFO_TypeNumber_set, METH_VARARGS, (char *)"HANDLEINFO_TypeNumber_set(HANDLEINFO self, unsigned char TypeNumber)"},
	 { (char *)"HANDLEINFO_TypeNumber_get", _wrap_HANDLEINFO_TypeNumber_get, METH_VARARGS, (char *)"HANDLEINFO_TypeNumber_get(HANDLEINFO self) -> unsigned char"},
	 { (char *)"HANDLEINFO_GrantedAccess_set", _wrap_HANDLEINFO_GrantedAccess_set, METH_VARARGS, (char *)"HANDLEINFO_GrantedAccess_set(HANDLEINFO self, unsigned int GrantedAccess)"},
	 { (char *)"HANDLEINFO_GrantedAccess_get", _wrap_HANDLEINFO_GrantedAccess_get, METH_VARARGS, (char *)"HANDLEINFO_GrantedAccess_get(HANDLEINFO self) -> unsigned int"},
	 { (char *)"new_HANDLEINFO", _wrap_new_HANDLEINFO, METH_VARARGS, (char *)"new_HANDLEINFO() -> HANDLEINFO"},
	 { (char *)"delete_HANDLEINFO", _wrap_delete_HANDLEINFO, METH_VARARGS, (char *)"delete_HANDLEINFO(HANDLEINFO self)"},
	 { (char *)"HANDLEINFO_swigregister", HANDLEINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"TCPCONNECTIONINFO_RemoteAddress_set", _wrap_TCPCONNECTIONINFO_RemoteAddress_set, METH_VARARGS, (char *)"TCPCONNECTIONINFO_RemoteAddress_set(TCPCONNECTIONINFO self, char [50] RemoteAddress)"},
	 { (char *)"TCPCONNECTIONINFO_RemoteAddress_get", _wrap_TCPCONNECTIONINFO_RemoteAddress_get, METH_VARARGS, (char *)"TCPCONNECTIONINFO_RemoteAddress_get(TCPCONNECTIONINFO self) -> char [50]"},
	 { (char *)"TCPCONNECTIONINFO_RemotePort_set", _wrap_TCPCONNECTIONINFO_RemotePort_set, METH_VARARGS, (char *)"TCPCONNECTIONINFO_RemotePort_set(TCPCONNECTIONINFO self, unsigned short RemotePort)"},
	 { (char *)"TCPCONNECTIONINFO_RemotePort_get", _wrap_TCPCONNECTIONINFO_RemotePort_get, METH_VARARGS, (char *)"TCPCONNECTIONINFO_RemotePort_get(TCPCONNECTIONINFO self) -> unsigned short"},
	 { (char *)"TCPCONNECTIONINFO_LocalAddress_set", _wrap_TCPCONNECTIONINFO_LocalAddress_set, METH_VARARGS, (char *)"TCPCONNECTIONINFO_LocalAddress_set(TCPCONNECTIONINFO self, char [50] LocalAddress)"},
	 { (char *)"TCPCONNECTIONINFO_LocalAddress_get", _wrap_TCPCONNECTIONINFO_LocalAddress_get, METH_VARARGS, (char *)"TCPCONNECTIONINFO_LocalAddress_get(TCPCONNECTIONINFO self) -> char [50]"},
	 { (char *)"TCPCONNECTIONINFO_LocalPort_set", _wrap_TCPCONNECTIONINFO_LocalPort_set, METH_VARARGS, (char *)"TCPCONNECTIONINFO_LocalPort_set(TCPCONNECTIONINFO self, unsigned short LocalPort)"},
	 { (char *)"TCPCONNECTIONINFO_LocalPort_get", _wrap_TCPCONNECTIONINFO_LocalPort_get, METH_VARARGS, (char *)"TCPCONNECTIONINFO_LocalPort_get(TCPCONNECTIONINFO self) -> unsigned short"},
	 { (char *)"TCPCONNECTIONINFO_StateText_set", _wrap_TCPCONNECTIONINFO_StateText_set, METH_VARARGS, (char *)"TCPCONNECTIONINFO_StateText_set(TCPCONNECTIONINFO self, char [50] StateText)"},
	 { (char *)"TCPCONNECTIONINFO_StateText_get", _wrap_TCPCONNECTIONINFO_StateText_get, METH_VARARGS, (char *)"TCPCONNECTIONINFO_StateText_get(TCPCONNECTIONINFO self) -> char [50]"},
	 { (char *)"TCPCONNECTIONINFO_State_set", _wrap_TCPCONNECTIONINFO_State_set, METH_VARARGS, (char *)"TCPCONNECTIONINFO_State_set(TCPCONNECTIONINFO self, unsigned int State)"},
	 { (char *)"TCPCONNECTIONINFO_State_get", _wrap_TCPCONNECTIONINFO_State_get, METH_VARARGS, (char *)"TCPCONNECTIONINFO_State_get(TCPCONNECTIONINFO self) -> unsigned int"},
	 { (char *)"new_TCPCONNECTIONINFO", _wrap_new_TCPCONNECTIONINFO, METH_VARARGS, (char *)"new_TCPCONNECTIONINFO() -> TCPCONNECTIONINFO"},
	 { (char *)"delete_TCPCONNECTIONINFO", _wrap_delete_TCPCONNECTIONINFO, METH_VARARGS, (char *)"delete_TCPCONNECTIONINFO(TCPCONNECTIONINFO self)"},
	 { (char *)"TCPCONNECTIONINFO_swigregister", TCPCONNECTIONINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"WINDOW_INFO_handle_set", _wrap_WINDOW_INFO_handle_set, METH_VARARGS, (char *)"WINDOW_INFO_handle_set(WINDOW_INFO self, duint handle)"},
	 { (char *)"WINDOW_INFO_handle_get", _wrap_WINDOW_INFO_handle_get, METH_VARARGS, (char *)"WINDOW_INFO_handle_get(WINDOW_INFO self) -> duint"},
	 { (char *)"WINDOW_INFO_parent_set", _wrap_WINDOW_INFO_parent_set, METH_VARARGS, (char *)"WINDOW_INFO_parent_set(WINDOW_INFO self, duint parent)"},
	 { (char *)"WINDOW_INFO_parent_get", _wrap_WINDOW_INFO_parent_get, METH_VARARGS, (char *)"WINDOW_INFO_parent_get(WINDOW_INFO self) -> duint"},
	 { (char *)"WINDOW_INFO_threadId_set", _wrap_WINDOW_INFO_threadId_set, METH_VARARGS, (char *)"WINDOW_INFO_threadId_set(WINDOW_INFO self, DWORD threadId)"},
	 { (char *)"WINDOW_INFO_threadId_get", _wrap_WINDOW_INFO_threadId_get, METH_VARARGS, (char *)"WINDOW_INFO_threadId_get(WINDOW_INFO self) -> DWORD"},
	 { (char *)"WINDOW_INFO_style_set", _wrap_WINDOW_INFO_style_set, METH_VARARGS, (char *)"WINDOW_INFO_style_set(WINDOW_INFO self, DWORD style)"},
	 { (char *)"WINDOW_INFO_style_get", _wrap_WINDOW_INFO_style_get, METH_VARARGS, (char *)"WINDOW_INFO_style_get(WINDOW_INFO self) -> DWORD"},
	 { (char *)"WINDOW_INFO_styleEx_set", _wrap_WINDOW_INFO_styleEx_set, METH_VARARGS, (char *)"WINDOW_INFO_styleEx_set(WINDOW_INFO self, DWORD styleEx)"},
	 { (char *)"WINDOW_INFO_styleEx_get", _wrap_WINDOW_INFO_styleEx_get, METH_VARARGS, (char *)"WINDOW_INFO_styleEx_get(WINDOW_INFO self) -> DWORD"},
	 { (char *)"WINDOW_INFO_wndProc_set", _wrap_WINDOW_INFO_wndProc_set, METH_VARARGS, (char *)"WINDOW_INFO_wndProc_set(WINDOW_INFO self, duint wndProc)"},
	 { (char *)"WINDOW_INFO_wndProc_get", _wrap_WINDOW_INFO_wndProc_get, METH_VARARGS, (char *)"WINDOW_INFO_wndProc_get(WINDOW_INFO self) -> duint"},
	 { (char *)"WINDOW_INFO_enabled_set", _wrap_WINDOW_INFO_enabled_set, METH_VARARGS, (char *)"WINDOW_INFO_enabled_set(WINDOW_INFO self, bool enabled)"},
	 { (char *)"WINDOW_INFO_enabled_get", _wrap_WINDOW_INFO_enabled_get, METH_VARARGS, (char *)"WINDOW_INFO_enabled_get(WINDOW_INFO self) -> bool"},
	 { (char *)"WINDOW_INFO_position_set", _wrap_WINDOW_INFO_position_set, METH_VARARGS, (char *)"WINDOW_INFO_position_set(WINDOW_INFO self, RECT position)"},
	 { (char *)"WINDOW_INFO_position_get", _wrap_WINDOW_INFO_position_get, METH_VARARGS, (char *)"WINDOW_INFO_position_get(WINDOW_INFO self) -> RECT"},
	 { (char *)"WINDOW_INFO_windowTitle_set", _wrap_WINDOW_INFO_windowTitle_set, METH_VARARGS, (char *)"WINDOW_INFO_windowTitle_set(WINDOW_INFO self, char [512] windowTitle)"},
	 { (char *)"WINDOW_INFO_windowTitle_get", _wrap_WINDOW_INFO_windowTitle_get, METH_VARARGS, (char *)"WINDOW_INFO_windowTitle_get(WINDOW_INFO self) -> char [512]"},
	 { (char *)"WINDOW_INFO_windowClass_set", _wrap_WINDOW_INFO_windowClass_set, METH_VARARGS, (char *)"WINDOW_INFO_windowClass_set(WINDOW_INFO self, char [512] windowClass)"},
	 { (char *)"WINDOW_INFO_windowClass_get", _wrap_WINDOW_INFO_windowClass_get, METH_VARARGS, (char *)"WINDOW_INFO_windowClass_get(WINDOW_INFO self) -> char [512]"},
	 { (char *)"new_WINDOW_INFO", _wrap_new_WINDOW_INFO, METH_VARARGS, (char *)"new_WINDOW_INFO() -> WINDOW_INFO"},
	 { (char *)"delete_WINDOW_INFO", _wrap_delete_WINDOW_INFO, METH_VARARGS, (char *)"delete_WINDOW_INFO(WINDOW_INFO self)"},
	 { (char *)"WINDOW_INFO_swigregister", WINDOW_INFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"HEAPINFO_addr_set", _wrap_HEAPINFO_addr_set, METH_VARARGS, (char *)"HEAPINFO_addr_set(HEAPINFO self, duint addr)"},
	 { (char *)"HEAPINFO_addr_get", _wrap_HEAPINFO_addr_get, METH_VARARGS, (char *)"HEAPINFO_addr_get(HEAPINFO self) -> duint"},
	 { (char *)"HEAPINFO_size_set", _wrap_HEAPINFO_size_set, METH_VARARGS, (char *)"HEAPINFO_size_set(HEAPINFO self, duint size)"},
	 { (char *)"HEAPINFO_size_get", _wrap_HEAPINFO_size_get, METH_VARARGS, (char *)"HEAPINFO_size_get(HEAPINFO self) -> duint"},
	 { (char *)"HEAPINFO_flags_set", _wrap_HEAPINFO_flags_set, METH_VARARGS, (char *)"HEAPINFO_flags_set(HEAPINFO self, duint flags)"},
	 { (char *)"HEAPINFO_flags_get", _wrap_HEAPINFO_flags_get, METH_VARARGS, (char *)"HEAPINFO_flags_get(HEAPINFO self) -> duint"},
	 { (char *)"new_HEAPINFO", _wrap_new_HEAPINFO, METH_VARARGS, (char *)"new_HEAPINFO() -> HEAPINFO"},
	 { (char *)"delete_HEAPINFO", _wrap_delete_HEAPINFO, METH_VARARGS, (char *)"delete_HEAPINFO(HEAPINFO self)"},
	 { (char *)"HEAPINFO_swigregister", HEAPINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"CONSTANTINFO_name_set", _wrap_CONSTANTINFO_name_set, METH_VARARGS, (char *)"CONSTANTINFO_name_set(CONSTANTINFO self, char const * name)"},
	 { (char *)"CONSTANTINFO_name_get", _wrap_CONSTANTINFO_name_get, METH_VARARGS, (char *)"CONSTANTINFO_name_get(CONSTANTINFO self) -> char const *"},
	 { (char *)"CONSTANTINFO_value_set", _wrap_CONSTANTINFO_value_set, METH_VARARGS, (char *)"CONSTANTINFO_value_set(CONSTANTINFO self, duint value)"},
	 { (char *)"CONSTANTINFO_value_get", _wrap_CONSTANTINFO_value_get, METH_VARARGS, (char *)"CONSTANTINFO_value_get(CONSTANTINFO self) -> duint"},
	 { (char *)"new_CONSTANTINFO", _wrap_new_CONSTANTINFO, METH_VARARGS, (char *)"new_CONSTANTINFO() -> CONSTANTINFO"},
	 { (char *)"delete_CONSTANTINFO", _wrap_delete_CONSTANTINFO, METH_VARARGS, (char *)"delete_CONSTANTINFO(CONSTANTINFO self)"},
	 { (char *)"CONSTANTINFO_swigregister", CONSTANTINFO_swigregister, METH_VARARGS, NULL},
	 { (char *)"DBGFUNCTIONS_AssembleAtEx_set", _wrap_DBGFUNCTIONS_AssembleAtEx_set, METH_VARARGS, (char *)"DBGFUNCTIONS_AssembleAtEx_set(DBGFUNCTIONS self, ASSEMBLEATEX AssembleAtEx)"},
	 { (char *)"DBGFUNCTIONS_AssembleAtEx_get", _wrap_DBGFUNCTIONS_AssembleAtEx_get, METH_VARARGS, (char *)"DBGFUNCTIONS_AssembleAtEx_get(DBGFUNCTIONS self) -> ASSEMBLEATEX"},
	 { (char *)"DBGFUNCTIONS_SectionFromAddr_set", _wrap_DBGFUNCTIONS_SectionFromAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_SectionFromAddr_set(DBGFUNCTIONS self, SECTIONFROMADDR SectionFromAddr)"},
	 { (char *)"DBGFUNCTIONS_SectionFromAddr_get", _wrap_DBGFUNCTIONS_SectionFromAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_SectionFromAddr_get(DBGFUNCTIONS self) -> SECTIONFROMADDR"},
	 { (char *)"DBGFUNCTIONS_ModNameFromAddr_set", _wrap_DBGFUNCTIONS_ModNameFromAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModNameFromAddr_set(DBGFUNCTIONS self, MODNAMEFROMADDR ModNameFromAddr)"},
	 { (char *)"DBGFUNCTIONS_ModNameFromAddr_get", _wrap_DBGFUNCTIONS_ModNameFromAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModNameFromAddr_get(DBGFUNCTIONS self) -> MODNAMEFROMADDR"},
	 { (char *)"DBGFUNCTIONS_ModBaseFromAddr_set", _wrap_DBGFUNCTIONS_ModBaseFromAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModBaseFromAddr_set(DBGFUNCTIONS self, MODBASEFROMADDR ModBaseFromAddr)"},
	 { (char *)"DBGFUNCTIONS_ModBaseFromAddr_get", _wrap_DBGFUNCTIONS_ModBaseFromAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModBaseFromAddr_get(DBGFUNCTIONS self) -> MODBASEFROMADDR"},
	 { (char *)"DBGFUNCTIONS_ModBaseFromName_set", _wrap_DBGFUNCTIONS_ModBaseFromName_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModBaseFromName_set(DBGFUNCTIONS self, MODBASEFROMNAME ModBaseFromName)"},
	 { (char *)"DBGFUNCTIONS_ModBaseFromName_get", _wrap_DBGFUNCTIONS_ModBaseFromName_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModBaseFromName_get(DBGFUNCTIONS self) -> MODBASEFROMNAME"},
	 { (char *)"DBGFUNCTIONS_ModSizeFromAddr_set", _wrap_DBGFUNCTIONS_ModSizeFromAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModSizeFromAddr_set(DBGFUNCTIONS self, MODSIZEFROMADDR ModSizeFromAddr)"},
	 { (char *)"DBGFUNCTIONS_ModSizeFromAddr_get", _wrap_DBGFUNCTIONS_ModSizeFromAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModSizeFromAddr_get(DBGFUNCTIONS self) -> MODSIZEFROMADDR"},
	 { (char *)"DBGFUNCTIONS_Assemble_set", _wrap_DBGFUNCTIONS_Assemble_set, METH_VARARGS, (char *)"DBGFUNCTIONS_Assemble_set(DBGFUNCTIONS self, ASSEMBLE Assemble)"},
	 { (char *)"DBGFUNCTIONS_Assemble_get", _wrap_DBGFUNCTIONS_Assemble_get, METH_VARARGS, (char *)"DBGFUNCTIONS_Assemble_get(DBGFUNCTIONS self) -> ASSEMBLE"},
	 { (char *)"DBGFUNCTIONS_PatchGet_set", _wrap_DBGFUNCTIONS_PatchGet_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchGet_set(DBGFUNCTIONS self, PATCHGET PatchGet)"},
	 { (char *)"DBGFUNCTIONS_PatchGet_get", _wrap_DBGFUNCTIONS_PatchGet_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchGet_get(DBGFUNCTIONS self) -> PATCHGET"},
	 { (char *)"DBGFUNCTIONS_PatchInRange_set", _wrap_DBGFUNCTIONS_PatchInRange_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchInRange_set(DBGFUNCTIONS self, PATCHINRANGE PatchInRange)"},
	 { (char *)"DBGFUNCTIONS_PatchInRange_get", _wrap_DBGFUNCTIONS_PatchInRange_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchInRange_get(DBGFUNCTIONS self) -> PATCHINRANGE"},
	 { (char *)"DBGFUNCTIONS_MemPatch_set", _wrap_DBGFUNCTIONS_MemPatch_set, METH_VARARGS, (char *)"DBGFUNCTIONS_MemPatch_set(DBGFUNCTIONS self, MEMPATCH MemPatch)"},
	 { (char *)"DBGFUNCTIONS_MemPatch_get", _wrap_DBGFUNCTIONS_MemPatch_get, METH_VARARGS, (char *)"DBGFUNCTIONS_MemPatch_get(DBGFUNCTIONS self) -> MEMPATCH"},
	 { (char *)"DBGFUNCTIONS_PatchRestoreRange_set", _wrap_DBGFUNCTIONS_PatchRestoreRange_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchRestoreRange_set(DBGFUNCTIONS self, PATCHRESTORERANGE PatchRestoreRange)"},
	 { (char *)"DBGFUNCTIONS_PatchRestoreRange_get", _wrap_DBGFUNCTIONS_PatchRestoreRange_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchRestoreRange_get(DBGFUNCTIONS self) -> PATCHRESTORERANGE"},
	 { (char *)"DBGFUNCTIONS_PatchEnum_set", _wrap_DBGFUNCTIONS_PatchEnum_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchEnum_set(DBGFUNCTIONS self, PATCHENUM PatchEnum)"},
	 { (char *)"DBGFUNCTIONS_PatchEnum_get", _wrap_DBGFUNCTIONS_PatchEnum_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchEnum_get(DBGFUNCTIONS self) -> PATCHENUM"},
	 { (char *)"DBGFUNCTIONS_PatchRestore_set", _wrap_DBGFUNCTIONS_PatchRestore_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchRestore_set(DBGFUNCTIONS self, PATCHRESTORE PatchRestore)"},
	 { (char *)"DBGFUNCTIONS_PatchRestore_get", _wrap_DBGFUNCTIONS_PatchRestore_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchRestore_get(DBGFUNCTIONS self) -> PATCHRESTORE"},
	 { (char *)"DBGFUNCTIONS_PatchFile_set", _wrap_DBGFUNCTIONS_PatchFile_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchFile_set(DBGFUNCTIONS self, PATCHFILE PatchFile)"},
	 { (char *)"DBGFUNCTIONS_PatchFile_get", _wrap_DBGFUNCTIONS_PatchFile_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchFile_get(DBGFUNCTIONS self) -> PATCHFILE"},
	 { (char *)"DBGFUNCTIONS_ModPathFromAddr_set", _wrap_DBGFUNCTIONS_ModPathFromAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModPathFromAddr_set(DBGFUNCTIONS self, MODPATHFROMADDR ModPathFromAddr)"},
	 { (char *)"DBGFUNCTIONS_ModPathFromAddr_get", _wrap_DBGFUNCTIONS_ModPathFromAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModPathFromAddr_get(DBGFUNCTIONS self) -> MODPATHFROMADDR"},
	 { (char *)"DBGFUNCTIONS_ModPathFromName_set", _wrap_DBGFUNCTIONS_ModPathFromName_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModPathFromName_set(DBGFUNCTIONS self, MODPATHFROMNAME ModPathFromName)"},
	 { (char *)"DBGFUNCTIONS_ModPathFromName_get", _wrap_DBGFUNCTIONS_ModPathFromName_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModPathFromName_get(DBGFUNCTIONS self) -> MODPATHFROMNAME"},
	 { (char *)"DBGFUNCTIONS_DisasmFast_set", _wrap_DBGFUNCTIONS_DisasmFast_set, METH_VARARGS, (char *)"DBGFUNCTIONS_DisasmFast_set(DBGFUNCTIONS self, DISASMFAST DisasmFast)"},
	 { (char *)"DBGFUNCTIONS_DisasmFast_get", _wrap_DBGFUNCTIONS_DisasmFast_get, METH_VARARGS, (char *)"DBGFUNCTIONS_DisasmFast_get(DBGFUNCTIONS self) -> DISASMFAST"},
	 { (char *)"DBGFUNCTIONS_MemUpdateMap_set", _wrap_DBGFUNCTIONS_MemUpdateMap_set, METH_VARARGS, (char *)"DBGFUNCTIONS_MemUpdateMap_set(DBGFUNCTIONS self, MEMUPDATEMAP MemUpdateMap)"},
	 { (char *)"DBGFUNCTIONS_MemUpdateMap_get", _wrap_DBGFUNCTIONS_MemUpdateMap_get, METH_VARARGS, (char *)"DBGFUNCTIONS_MemUpdateMap_get(DBGFUNCTIONS self) -> MEMUPDATEMAP"},
	 { (char *)"DBGFUNCTIONS_GetCallStack_set", _wrap_DBGFUNCTIONS_GetCallStack_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCallStack_set(DBGFUNCTIONS self, GETCALLSTACK GetCallStack)"},
	 { (char *)"DBGFUNCTIONS_GetCallStack_get", _wrap_DBGFUNCTIONS_GetCallStack_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCallStack_get(DBGFUNCTIONS self) -> GETCALLSTACK"},
	 { (char *)"DBGFUNCTIONS_GetSEHChain_set", _wrap_DBGFUNCTIONS_GetSEHChain_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetSEHChain_set(DBGFUNCTIONS self, GETSEHCHAIN GetSEHChain)"},
	 { (char *)"DBGFUNCTIONS_GetSEHChain_get", _wrap_DBGFUNCTIONS_GetSEHChain_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetSEHChain_get(DBGFUNCTIONS self) -> GETSEHCHAIN"},
	 { (char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_set", _wrap_DBGFUNCTIONS_SymbolDownloadAllSymbols_set, METH_VARARGS, (char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_set(DBGFUNCTIONS self, SYMBOLDOWNLOADALLSYMBOLS SymbolDownloadAllSymbols)"},
	 { (char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_get", _wrap_DBGFUNCTIONS_SymbolDownloadAllSymbols_get, METH_VARARGS, (char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_get(DBGFUNCTIONS self) -> SYMBOLDOWNLOADALLSYMBOLS"},
	 { (char *)"DBGFUNCTIONS_GetJitAuto_set", _wrap_DBGFUNCTIONS_GetJitAuto_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetJitAuto_set(DBGFUNCTIONS self, GETJITAUTO GetJitAuto)"},
	 { (char *)"DBGFUNCTIONS_GetJitAuto_get", _wrap_DBGFUNCTIONS_GetJitAuto_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetJitAuto_get(DBGFUNCTIONS self) -> GETJITAUTO"},
	 { (char *)"DBGFUNCTIONS_GetJit_set", _wrap_DBGFUNCTIONS_GetJit_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetJit_set(DBGFUNCTIONS self, GETJIT GetJit)"},
	 { (char *)"DBGFUNCTIONS_GetJit_get", _wrap_DBGFUNCTIONS_GetJit_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetJit_get(DBGFUNCTIONS self) -> GETJIT"},
	 { (char *)"DBGFUNCTIONS_GetDefJit_set", _wrap_DBGFUNCTIONS_GetDefJit_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetDefJit_set(DBGFUNCTIONS self, GETDEFJIT GetDefJit)"},
	 { (char *)"DBGFUNCTIONS_GetDefJit_get", _wrap_DBGFUNCTIONS_GetDefJit_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetDefJit_get(DBGFUNCTIONS self) -> GETDEFJIT"},
	 { (char *)"DBGFUNCTIONS_GetProcessList_set", _wrap_DBGFUNCTIONS_GetProcessList_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetProcessList_set(DBGFUNCTIONS self, GETPROCESSLIST GetProcessList)"},
	 { (char *)"DBGFUNCTIONS_GetProcessList_get", _wrap_DBGFUNCTIONS_GetProcessList_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetProcessList_get(DBGFUNCTIONS self) -> GETPROCESSLIST"},
	 { (char *)"DBGFUNCTIONS_GetPageRights_set", _wrap_DBGFUNCTIONS_GetPageRights_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetPageRights_set(DBGFUNCTIONS self, GETPAGERIGHTS GetPageRights)"},
	 { (char *)"DBGFUNCTIONS_GetPageRights_get", _wrap_DBGFUNCTIONS_GetPageRights_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetPageRights_get(DBGFUNCTIONS self) -> GETPAGERIGHTS"},
	 { (char *)"DBGFUNCTIONS_SetPageRights_set", _wrap_DBGFUNCTIONS_SetPageRights_set, METH_VARARGS, (char *)"DBGFUNCTIONS_SetPageRights_set(DBGFUNCTIONS self, SETPAGERIGHTS SetPageRights)"},
	 { (char *)"DBGFUNCTIONS_SetPageRights_get", _wrap_DBGFUNCTIONS_SetPageRights_get, METH_VARARGS, (char *)"DBGFUNCTIONS_SetPageRights_get(DBGFUNCTIONS self) -> SETPAGERIGHTS"},
	 { (char *)"DBGFUNCTIONS_PageRightsToString_set", _wrap_DBGFUNCTIONS_PageRightsToString_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PageRightsToString_set(DBGFUNCTIONS self, PAGERIGHTSTOSTRING PageRightsToString)"},
	 { (char *)"DBGFUNCTIONS_PageRightsToString_get", _wrap_DBGFUNCTIONS_PageRightsToString_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PageRightsToString_get(DBGFUNCTIONS self) -> PAGERIGHTSTOSTRING"},
	 { (char *)"DBGFUNCTIONS_IsProcessElevated_set", _wrap_DBGFUNCTIONS_IsProcessElevated_set, METH_VARARGS, (char *)"DBGFUNCTIONS_IsProcessElevated_set(DBGFUNCTIONS self, ISPROCESSELEVATED IsProcessElevated)"},
	 { (char *)"DBGFUNCTIONS_IsProcessElevated_get", _wrap_DBGFUNCTIONS_IsProcessElevated_get, METH_VARARGS, (char *)"DBGFUNCTIONS_IsProcessElevated_get(DBGFUNCTIONS self) -> ISPROCESSELEVATED"},
	 { (char *)"DBGFUNCTIONS_GetCmdline_set", _wrap_DBGFUNCTIONS_GetCmdline_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCmdline_set(DBGFUNCTIONS self, GETCMDLINE GetCmdline)"},
	 { (char *)"DBGFUNCTIONS_GetCmdline_get", _wrap_DBGFUNCTIONS_GetCmdline_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCmdline_get(DBGFUNCTIONS self) -> GETCMDLINE"},
	 { (char *)"DBGFUNCTIONS_SetCmdline_set", _wrap_DBGFUNCTIONS_SetCmdline_set, METH_VARARGS, (char *)"DBGFUNCTIONS_SetCmdline_set(DBGFUNCTIONS self, SETCMDLINE SetCmdline)"},
	 { (char *)"DBGFUNCTIONS_SetCmdline_get", _wrap_DBGFUNCTIONS_SetCmdline_get, METH_VARARGS, (char *)"DBGFUNCTIONS_SetCmdline_get(DBGFUNCTIONS self) -> SETCMDLINE"},
	 { (char *)"DBGFUNCTIONS_FileOffsetToVa_set", _wrap_DBGFUNCTIONS_FileOffsetToVa_set, METH_VARARGS, (char *)"DBGFUNCTIONS_FileOffsetToVa_set(DBGFUNCTIONS self, FILEOFFSETTOVA FileOffsetToVa)"},
	 { (char *)"DBGFUNCTIONS_FileOffsetToVa_get", _wrap_DBGFUNCTIONS_FileOffsetToVa_get, METH_VARARGS, (char *)"DBGFUNCTIONS_FileOffsetToVa_get(DBGFUNCTIONS self) -> FILEOFFSETTOVA"},
	 { (char *)"DBGFUNCTIONS_VaToFileOffset_set", _wrap_DBGFUNCTIONS_VaToFileOffset_set, METH_VARARGS, (char *)"DBGFUNCTIONS_VaToFileOffset_set(DBGFUNCTIONS self, VATOFILEOFFSET VaToFileOffset)"},
	 { (char *)"DBGFUNCTIONS_VaToFileOffset_get", _wrap_DBGFUNCTIONS_VaToFileOffset_get, METH_VARARGS, (char *)"DBGFUNCTIONS_VaToFileOffset_get(DBGFUNCTIONS self) -> VATOFILEOFFSET"},
	 { (char *)"DBGFUNCTIONS_GetAddrFromLine_set", _wrap_DBGFUNCTIONS_GetAddrFromLine_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetAddrFromLine_set(DBGFUNCTIONS self, GETADDRFROMLINE GetAddrFromLine)"},
	 { (char *)"DBGFUNCTIONS_GetAddrFromLine_get", _wrap_DBGFUNCTIONS_GetAddrFromLine_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetAddrFromLine_get(DBGFUNCTIONS self) -> GETADDRFROMLINE"},
	 { (char *)"DBGFUNCTIONS_GetSourceFromAddr_set", _wrap_DBGFUNCTIONS_GetSourceFromAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetSourceFromAddr_set(DBGFUNCTIONS self, GETSOURCEFROMADDR GetSourceFromAddr)"},
	 { (char *)"DBGFUNCTIONS_GetSourceFromAddr_get", _wrap_DBGFUNCTIONS_GetSourceFromAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetSourceFromAddr_get(DBGFUNCTIONS self) -> GETSOURCEFROMADDR"},
	 { (char *)"DBGFUNCTIONS_ValFromString_set", _wrap_DBGFUNCTIONS_ValFromString_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ValFromString_set(DBGFUNCTIONS self, VALFROMSTRING ValFromString)"},
	 { (char *)"DBGFUNCTIONS_ValFromString_get", _wrap_DBGFUNCTIONS_ValFromString_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ValFromString_get(DBGFUNCTIONS self) -> VALFROMSTRING"},
	 { (char *)"DBGFUNCTIONS_PatchGetEx_set", _wrap_DBGFUNCTIONS_PatchGetEx_set, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchGetEx_set(DBGFUNCTIONS self, PATCHGETEX PatchGetEx)"},
	 { (char *)"DBGFUNCTIONS_PatchGetEx_get", _wrap_DBGFUNCTIONS_PatchGetEx_get, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchGetEx_get(DBGFUNCTIONS self) -> PATCHGETEX"},
	 { (char *)"DBGFUNCTIONS_GetBridgeBp_set", _wrap_DBGFUNCTIONS_GetBridgeBp_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetBridgeBp_set(DBGFUNCTIONS self, GETBRIDGEBP GetBridgeBp)"},
	 { (char *)"DBGFUNCTIONS_GetBridgeBp_get", _wrap_DBGFUNCTIONS_GetBridgeBp_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetBridgeBp_get(DBGFUNCTIONS self) -> GETBRIDGEBP"},
	 { (char *)"DBGFUNCTIONS_StringFormatInline_set", _wrap_DBGFUNCTIONS_StringFormatInline_set, METH_VARARGS, (char *)"DBGFUNCTIONS_StringFormatInline_set(DBGFUNCTIONS self, STRINGFORMATINLINE StringFormatInline)"},
	 { (char *)"DBGFUNCTIONS_StringFormatInline_get", _wrap_DBGFUNCTIONS_StringFormatInline_get, METH_VARARGS, (char *)"DBGFUNCTIONS_StringFormatInline_get(DBGFUNCTIONS self) -> STRINGFORMATINLINE"},
	 { (char *)"DBGFUNCTIONS_GetMnemonicBrief_set", _wrap_DBGFUNCTIONS_GetMnemonicBrief_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetMnemonicBrief_set(DBGFUNCTIONS self, GETMNEMONICBRIEF GetMnemonicBrief)"},
	 { (char *)"DBGFUNCTIONS_GetMnemonicBrief_get", _wrap_DBGFUNCTIONS_GetMnemonicBrief_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetMnemonicBrief_get(DBGFUNCTIONS self) -> GETMNEMONICBRIEF"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordHitCount_set", _wrap_DBGFUNCTIONS_GetTraceRecordHitCount_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordHitCount_set(DBGFUNCTIONS self, GETTRACERECORDHITCOUNT GetTraceRecordHitCount)"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordHitCount_get", _wrap_DBGFUNCTIONS_GetTraceRecordHitCount_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordHitCount_get(DBGFUNCTIONS self) -> GETTRACERECORDHITCOUNT"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordByteType_set", _wrap_DBGFUNCTIONS_GetTraceRecordByteType_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordByteType_set(DBGFUNCTIONS self, GETTRACERECORDBYTETYPE GetTraceRecordByteType)"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordByteType_get", _wrap_DBGFUNCTIONS_GetTraceRecordByteType_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordByteType_get(DBGFUNCTIONS self) -> GETTRACERECORDBYTETYPE"},
	 { (char *)"DBGFUNCTIONS_SetTraceRecordType_set", _wrap_DBGFUNCTIONS_SetTraceRecordType_set, METH_VARARGS, (char *)"DBGFUNCTIONS_SetTraceRecordType_set(DBGFUNCTIONS self, SETTRACERECORDTYPE SetTraceRecordType)"},
	 { (char *)"DBGFUNCTIONS_SetTraceRecordType_get", _wrap_DBGFUNCTIONS_SetTraceRecordType_get, METH_VARARGS, (char *)"DBGFUNCTIONS_SetTraceRecordType_get(DBGFUNCTIONS self) -> SETTRACERECORDTYPE"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordType_set", _wrap_DBGFUNCTIONS_GetTraceRecordType_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordType_set(DBGFUNCTIONS self, GETTRACERECORDTYPE GetTraceRecordType)"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordType_get", _wrap_DBGFUNCTIONS_GetTraceRecordType_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordType_get(DBGFUNCTIONS self) -> GETTRACERECORDTYPE"},
	 { (char *)"DBGFUNCTIONS_EnumHandles_set", _wrap_DBGFUNCTIONS_EnumHandles_set, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumHandles_set(DBGFUNCTIONS self, ENUMHANDLES EnumHandles)"},
	 { (char *)"DBGFUNCTIONS_EnumHandles_get", _wrap_DBGFUNCTIONS_EnumHandles_get, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumHandles_get(DBGFUNCTIONS self) -> ENUMHANDLES"},
	 { (char *)"DBGFUNCTIONS_GetHandleName_set", _wrap_DBGFUNCTIONS_GetHandleName_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetHandleName_set(DBGFUNCTIONS self, GETHANDLENAME GetHandleName)"},
	 { (char *)"DBGFUNCTIONS_GetHandleName_get", _wrap_DBGFUNCTIONS_GetHandleName_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetHandleName_get(DBGFUNCTIONS self) -> GETHANDLENAME"},
	 { (char *)"DBGFUNCTIONS_EnumTcpConnections_set", _wrap_DBGFUNCTIONS_EnumTcpConnections_set, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumTcpConnections_set(DBGFUNCTIONS self, ENUMTCPCONNECTIONS EnumTcpConnections)"},
	 { (char *)"DBGFUNCTIONS_EnumTcpConnections_get", _wrap_DBGFUNCTIONS_EnumTcpConnections_get, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumTcpConnections_get(DBGFUNCTIONS self) -> ENUMTCPCONNECTIONS"},
	 { (char *)"DBGFUNCTIONS_GetDbgEvents_set", _wrap_DBGFUNCTIONS_GetDbgEvents_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetDbgEvents_set(DBGFUNCTIONS self, GETDBGEVENTS GetDbgEvents)"},
	 { (char *)"DBGFUNCTIONS_GetDbgEvents_get", _wrap_DBGFUNCTIONS_GetDbgEvents_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetDbgEvents_get(DBGFUNCTIONS self) -> GETDBGEVENTS"},
	 { (char *)"DBGFUNCTIONS_ModGetParty_set", _wrap_DBGFUNCTIONS_ModGetParty_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModGetParty_set(DBGFUNCTIONS self, MODGETPARTY ModGetParty)"},
	 { (char *)"DBGFUNCTIONS_ModGetParty_get", _wrap_DBGFUNCTIONS_ModGetParty_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModGetParty_get(DBGFUNCTIONS self) -> MODGETPARTY"},
	 { (char *)"DBGFUNCTIONS_ModSetParty_set", _wrap_DBGFUNCTIONS_ModSetParty_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModSetParty_set(DBGFUNCTIONS self, MODSETPARTY ModSetParty)"},
	 { (char *)"DBGFUNCTIONS_ModSetParty_get", _wrap_DBGFUNCTIONS_ModSetParty_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModSetParty_get(DBGFUNCTIONS self) -> MODSETPARTY"},
	 { (char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_set", _wrap_DBGFUNCTIONS_WatchIsWatchdogTriggered_set, METH_VARARGS, (char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_set(DBGFUNCTIONS self, WATCHISWATCHDOGTRIGGERED WatchIsWatchdogTriggered)"},
	 { (char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_get", _wrap_DBGFUNCTIONS_WatchIsWatchdogTriggered_get, METH_VARARGS, (char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_get(DBGFUNCTIONS self) -> WATCHISWATCHDOGTRIGGERED"},
	 { (char *)"DBGFUNCTIONS_MemIsCodePage_set", _wrap_DBGFUNCTIONS_MemIsCodePage_set, METH_VARARGS, (char *)"DBGFUNCTIONS_MemIsCodePage_set(DBGFUNCTIONS self, MEMISCODEPAGE MemIsCodePage)"},
	 { (char *)"DBGFUNCTIONS_MemIsCodePage_get", _wrap_DBGFUNCTIONS_MemIsCodePage_get, METH_VARARGS, (char *)"DBGFUNCTIONS_MemIsCodePage_get(DBGFUNCTIONS self) -> MEMISCODEPAGE"},
	 { (char *)"DBGFUNCTIONS_AnimateCommand_set", _wrap_DBGFUNCTIONS_AnimateCommand_set, METH_VARARGS, (char *)"DBGFUNCTIONS_AnimateCommand_set(DBGFUNCTIONS self, ANIMATECOMMAND AnimateCommand)"},
	 { (char *)"DBGFUNCTIONS_AnimateCommand_get", _wrap_DBGFUNCTIONS_AnimateCommand_get, METH_VARARGS, (char *)"DBGFUNCTIONS_AnimateCommand_get(DBGFUNCTIONS self) -> ANIMATECOMMAND"},
	 { (char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_set", _wrap_DBGFUNCTIONS_DbgSetDebuggeeInitScript_set, METH_VARARGS, (char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_set(DBGFUNCTIONS self, DBGSETDEBUGGEEINITSCRIPT DbgSetDebuggeeInitScript)"},
	 { (char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_get", _wrap_DBGFUNCTIONS_DbgSetDebuggeeInitScript_get, METH_VARARGS, (char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_get(DBGFUNCTIONS self) -> DBGSETDEBUGGEEINITSCRIPT"},
	 { (char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_set", _wrap_DBGFUNCTIONS_DbgGetDebuggeeInitScript_set, METH_VARARGS, (char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_set(DBGFUNCTIONS self, DBGGETDEBUGGEEINITSCRIPT DbgGetDebuggeeInitScript)"},
	 { (char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_get", _wrap_DBGFUNCTIONS_DbgGetDebuggeeInitScript_get, METH_VARARGS, (char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_get(DBGFUNCTIONS self) -> DBGGETDEBUGGEEINITSCRIPT"},
	 { (char *)"DBGFUNCTIONS_EnumWindows_set", _wrap_DBGFUNCTIONS_EnumWindows_set, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumWindows_set(DBGFUNCTIONS self, HANDLESENUMWINDOWS EnumWindows)"},
	 { (char *)"DBGFUNCTIONS_EnumWindows_get", _wrap_DBGFUNCTIONS_EnumWindows_get, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumWindows_get(DBGFUNCTIONS self) -> HANDLESENUMWINDOWS"},
	 { (char *)"DBGFUNCTIONS_EnumHeaps_set", _wrap_DBGFUNCTIONS_EnumHeaps_set, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumHeaps_set(DBGFUNCTIONS self, HANDLESENUMHEAPS EnumHeaps)"},
	 { (char *)"DBGFUNCTIONS_EnumHeaps_get", _wrap_DBGFUNCTIONS_EnumHeaps_get, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumHeaps_get(DBGFUNCTIONS self) -> HANDLESENUMHEAPS"},
	 { (char *)"DBGFUNCTIONS_ThreadGetName_set", _wrap_DBGFUNCTIONS_ThreadGetName_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ThreadGetName_set(DBGFUNCTIONS self, THREADGETNAME ThreadGetName)"},
	 { (char *)"DBGFUNCTIONS_ThreadGetName_get", _wrap_DBGFUNCTIONS_ThreadGetName_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ThreadGetName_get(DBGFUNCTIONS self) -> THREADGETNAME"},
	 { (char *)"DBGFUNCTIONS_IsDepEnabled_set", _wrap_DBGFUNCTIONS_IsDepEnabled_set, METH_VARARGS, (char *)"DBGFUNCTIONS_IsDepEnabled_set(DBGFUNCTIONS self, ISDEPENABLED IsDepEnabled)"},
	 { (char *)"DBGFUNCTIONS_IsDepEnabled_get", _wrap_DBGFUNCTIONS_IsDepEnabled_get, METH_VARARGS, (char *)"DBGFUNCTIONS_IsDepEnabled_get(DBGFUNCTIONS self) -> ISDEPENABLED"},
	 { (char *)"DBGFUNCTIONS_GetCallStackEx_set", _wrap_DBGFUNCTIONS_GetCallStackEx_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCallStackEx_set(DBGFUNCTIONS self, GETCALLSTACKEX GetCallStackEx)"},
	 { (char *)"DBGFUNCTIONS_GetCallStackEx_get", _wrap_DBGFUNCTIONS_GetCallStackEx_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCallStackEx_get(DBGFUNCTIONS self) -> GETCALLSTACKEX"},
	 { (char *)"DBGFUNCTIONS_GetUserComment_set", _wrap_DBGFUNCTIONS_GetUserComment_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetUserComment_set(DBGFUNCTIONS self, GETUSERCOMMENT GetUserComment)"},
	 { (char *)"DBGFUNCTIONS_GetUserComment_get", _wrap_DBGFUNCTIONS_GetUserComment_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetUserComment_get(DBGFUNCTIONS self) -> GETUSERCOMMENT"},
	 { (char *)"DBGFUNCTIONS_EnumConstants_set", _wrap_DBGFUNCTIONS_EnumConstants_set, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumConstants_set(DBGFUNCTIONS self, ENUMCONSTANTS EnumConstants)"},
	 { (char *)"DBGFUNCTIONS_EnumConstants_get", _wrap_DBGFUNCTIONS_EnumConstants_get, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumConstants_get(DBGFUNCTIONS self) -> ENUMCONSTANTS"},
	 { (char *)"DBGFUNCTIONS_EnumErrorCodes_set", _wrap_DBGFUNCTIONS_EnumErrorCodes_set, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumErrorCodes_set(DBGFUNCTIONS self, ENUMCONSTANTS EnumErrorCodes)"},
	 { (char *)"DBGFUNCTIONS_EnumErrorCodes_get", _wrap_DBGFUNCTIONS_EnumErrorCodes_get, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumErrorCodes_get(DBGFUNCTIONS self) -> ENUMCONSTANTS"},
	 { (char *)"DBGFUNCTIONS_EnumExceptions_set", _wrap_DBGFUNCTIONS_EnumExceptions_set, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumExceptions_set(DBGFUNCTIONS self, ENUMCONSTANTS EnumExceptions)"},
	 { (char *)"DBGFUNCTIONS_EnumExceptions_get", _wrap_DBGFUNCTIONS_EnumExceptions_get, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumExceptions_get(DBGFUNCTIONS self) -> ENUMCONSTANTS"},
	 { (char *)"DBGFUNCTIONS_MemBpSize_set", _wrap_DBGFUNCTIONS_MemBpSize_set, METH_VARARGS, (char *)"DBGFUNCTIONS_MemBpSize_set(DBGFUNCTIONS self, MEMBPSIZE MemBpSize)"},
	 { (char *)"DBGFUNCTIONS_MemBpSize_get", _wrap_DBGFUNCTIONS_MemBpSize_get, METH_VARARGS, (char *)"DBGFUNCTIONS_MemBpSize_get(DBGFUNCTIONS self) -> MEMBPSIZE"},
	 { (char *)"DBGFUNCTIONS_ModRelocationsFromAddr_set", _wrap_DBGFUNCTIONS_ModRelocationsFromAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationsFromAddr_set(DBGFUNCTIONS self, MODRELOCATIONSFROMADDR ModRelocationsFromAddr)"},
	 { (char *)"DBGFUNCTIONS_ModRelocationsFromAddr_get", _wrap_DBGFUNCTIONS_ModRelocationsFromAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationsFromAddr_get(DBGFUNCTIONS self) -> MODRELOCATIONSFROMADDR"},
	 { (char *)"DBGFUNCTIONS_ModRelocationAtAddr_set", _wrap_DBGFUNCTIONS_ModRelocationAtAddr_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationAtAddr_set(DBGFUNCTIONS self, MODRELOCATIONATADDR ModRelocationAtAddr)"},
	 { (char *)"DBGFUNCTIONS_ModRelocationAtAddr_get", _wrap_DBGFUNCTIONS_ModRelocationAtAddr_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationAtAddr_get(DBGFUNCTIONS self) -> MODRELOCATIONATADDR"},
	 { (char *)"DBGFUNCTIONS_ModRelocationsInRange_set", _wrap_DBGFUNCTIONS_ModRelocationsInRange_set, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationsInRange_set(DBGFUNCTIONS self, MODRELOCATIONSINRANGE ModRelocationsInRange)"},
	 { (char *)"DBGFUNCTIONS_ModRelocationsInRange_get", _wrap_DBGFUNCTIONS_ModRelocationsInRange_get, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationsInRange_get(DBGFUNCTIONS self) -> MODRELOCATIONSINRANGE"},
	 { (char *)"DBGFUNCTIONS_DbGetHash_set", _wrap_DBGFUNCTIONS_DbGetHash_set, METH_VARARGS, (char *)"DBGFUNCTIONS_DbGetHash_set(DBGFUNCTIONS self, DBGETHASH DbGetHash)"},
	 { (char *)"DBGFUNCTIONS_DbGetHash_get", _wrap_DBGFUNCTIONS_DbGetHash_get, METH_VARARGS, (char *)"DBGFUNCTIONS_DbGetHash_get(DBGFUNCTIONS self) -> DBGETHASH"},
	 { (char *)"DBGFUNCTIONS_SymAutoComplete_set", _wrap_DBGFUNCTIONS_SymAutoComplete_set, METH_VARARGS, (char *)"DBGFUNCTIONS_SymAutoComplete_set(DBGFUNCTIONS self, SYMAUTOCOMPLETE SymAutoComplete)"},
	 { (char *)"DBGFUNCTIONS_SymAutoComplete_get", _wrap_DBGFUNCTIONS_SymAutoComplete_get, METH_VARARGS, (char *)"DBGFUNCTIONS_SymAutoComplete_get(DBGFUNCTIONS self) -> SYMAUTOCOMPLETE"},
	 { (char *)"DBGFUNCTIONS_RefreshModuleList_set", _wrap_DBGFUNCTIONS_RefreshModuleList_set, METH_VARARGS, (char *)"DBGFUNCTIONS_RefreshModuleList_set(DBGFUNCTIONS self, REFRESHMODULELIST RefreshModuleList)"},
	 { (char *)"DBGFUNCTIONS_RefreshModuleList_get", _wrap_DBGFUNCTIONS_RefreshModuleList_get, METH_VARARGS, (char *)"DBGFUNCTIONS_RefreshModuleList_get(DBGFUNCTIONS self) -> REFRESHMODULELIST"},
	 { (char *)"DBGFUNCTIONS_GetAddrFromLineEx_set", _wrap_DBGFUNCTIONS_GetAddrFromLineEx_set, METH_VARARGS, (char *)"DBGFUNCTIONS_GetAddrFromLineEx_set(DBGFUNCTIONS self, GETADDRFROMLINEEX GetAddrFromLineEx)"},
	 { (char *)"DBGFUNCTIONS_GetAddrFromLineEx_get", _wrap_DBGFUNCTIONS_GetAddrFromLineEx_get, METH_VARARGS, (char *)"DBGFUNCTIONS_GetAddrFromLineEx_get(DBGFUNCTIONS self) -> GETADDRFROMLINEEX"},
	 { (char *)"DBGFUNCTIONS_AssembleAtEx_", _wrap_DBGFUNCTIONS_AssembleAtEx_, METH_VARARGS, (char *)"DBGFUNCTIONS_AssembleAtEx_(DBGFUNCTIONS self, duint addr, char const * instruction, char * error, bool fillnop) -> bool"},
	 { (char *)"DBGFUNCTIONS_SectionFromAddr_", _wrap_DBGFUNCTIONS_SectionFromAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_SectionFromAddr_(DBGFUNCTIONS self, duint addr, char * section) -> bool"},
	 { (char *)"DBGFUNCTIONS_ModNameFromAddr_", _wrap_DBGFUNCTIONS_ModNameFromAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModNameFromAddr_(DBGFUNCTIONS self, duint addr, char * modname, bool extension) -> bool"},
	 { (char *)"DBGFUNCTIONS_ModBaseFromAddr_", _wrap_DBGFUNCTIONS_ModBaseFromAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModBaseFromAddr_(DBGFUNCTIONS self, duint addr) -> duint"},
	 { (char *)"DBGFUNCTIONS_ModBaseFromName_", _wrap_DBGFUNCTIONS_ModBaseFromName_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModBaseFromName_(DBGFUNCTIONS self, char const * modname) -> duint"},
	 { (char *)"DBGFUNCTIONS_ModSizeFromAddr_", _wrap_DBGFUNCTIONS_ModSizeFromAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModSizeFromAddr_(DBGFUNCTIONS self, duint addr) -> duint"},
	 { (char *)"DBGFUNCTIONS_Assemble_", _wrap_DBGFUNCTIONS_Assemble_, METH_VARARGS, (char *)"\n"
		"DBGFUNCTIONS_Assemble_(DBGFUNCTIONS self, duint addr, unsigned char * dest, int * size, char const * instruction, \n"
		"    char * error) -> bool\n"
		""},
	 { (char *)"DBGFUNCTIONS_PatchGet_", _wrap_DBGFUNCTIONS_PatchGet_, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchGet_(DBGFUNCTIONS self, duint addr) -> bool"},
	 { (char *)"DBGFUNCTIONS_PatchInRange_", _wrap_DBGFUNCTIONS_PatchInRange_, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchInRange_(DBGFUNCTIONS self, duint start, duint end) -> bool"},
	 { (char *)"DBGFUNCTIONS_MemPatch_", _wrap_DBGFUNCTIONS_MemPatch_, METH_VARARGS, (char *)"DBGFUNCTIONS_MemPatch_(DBGFUNCTIONS self, duint va, unsigned char const * src, duint size) -> bool"},
	 { (char *)"DBGFUNCTIONS_PatchRestoreRange_", _wrap_DBGFUNCTIONS_PatchRestoreRange_, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchRestoreRange_(DBGFUNCTIONS self, duint start, duint end)"},
	 { (char *)"DBGFUNCTIONS_PatchEnum_", _wrap_DBGFUNCTIONS_PatchEnum_, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchEnum_(DBGFUNCTIONS self, DBGPATCHINFO patchlist, size_t * cbsize) -> bool"},
	 { (char *)"DBGFUNCTIONS_PatchRestore_", _wrap_DBGFUNCTIONS_PatchRestore_, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchRestore_(DBGFUNCTIONS self, duint addr) -> bool"},
	 { (char *)"DBGFUNCTIONS_PatchFile_", _wrap_DBGFUNCTIONS_PatchFile_, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchFile_(DBGFUNCTIONS self, DBGPATCHINFO patchlist, int count, char const * szFileName, char * error) -> int"},
	 { (char *)"DBGFUNCTIONS_ModPathFromAddr_", _wrap_DBGFUNCTIONS_ModPathFromAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModPathFromAddr_(DBGFUNCTIONS self, duint addr, char * path, int size) -> int"},
	 { (char *)"DBGFUNCTIONS_ModPathFromName_", _wrap_DBGFUNCTIONS_ModPathFromName_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModPathFromName_(DBGFUNCTIONS self, char const * modname, char * path, int size) -> int"},
	 { (char *)"DBGFUNCTIONS_DisasmFast_", _wrap_DBGFUNCTIONS_DisasmFast_, METH_VARARGS, (char *)"DBGFUNCTIONS_DisasmFast_(DBGFUNCTIONS self, unsigned char const * data, duint addr, BASIC_INSTRUCTION_INFO basicinfo) -> bool"},
	 { (char *)"DBGFUNCTIONS_MemUpdateMap_", _wrap_DBGFUNCTIONS_MemUpdateMap_, METH_VARARGS, (char *)"DBGFUNCTIONS_MemUpdateMap_(DBGFUNCTIONS self)"},
	 { (char *)"DBGFUNCTIONS_GetCallStack_", _wrap_DBGFUNCTIONS_GetCallStack_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCallStack_(DBGFUNCTIONS self, DBGCALLSTACK callstack)"},
	 { (char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_", _wrap_DBGFUNCTIONS_SymbolDownloadAllSymbols_, METH_VARARGS, (char *)"DBGFUNCTIONS_SymbolDownloadAllSymbols_(DBGFUNCTIONS self, char const * szSymbolStore)"},
	 { (char *)"DBGFUNCTIONS_GetJit_", _wrap_DBGFUNCTIONS_GetJit_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetJit_(DBGFUNCTIONS self, char * jit, bool x64) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetJitAuto_", _wrap_DBGFUNCTIONS_GetJitAuto_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetJitAuto_(DBGFUNCTIONS self, bool * jitauto) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetDefJit_", _wrap_DBGFUNCTIONS_GetDefJit_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetDefJit_(DBGFUNCTIONS self, char * defjit) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetProcessList_", _wrap_DBGFUNCTIONS_GetProcessList_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetProcessList_(DBGFUNCTIONS self, DBGPROCESSINFO ** entries, int * count) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetPageRights_", _wrap_DBGFUNCTIONS_GetPageRights_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetPageRights_(DBGFUNCTIONS self, duint addr, char * rights) -> bool"},
	 { (char *)"DBGFUNCTIONS_SetPageRights_", _wrap_DBGFUNCTIONS_SetPageRights_, METH_VARARGS, (char *)"DBGFUNCTIONS_SetPageRights_(DBGFUNCTIONS self, duint addr, char const * rights) -> bool"},
	 { (char *)"DBGFUNCTIONS_PageRightsToString_", _wrap_DBGFUNCTIONS_PageRightsToString_, METH_VARARGS, (char *)"DBGFUNCTIONS_PageRightsToString_(DBGFUNCTIONS self, DWORD protect, char * rights) -> bool"},
	 { (char *)"DBGFUNCTIONS_IsProcessElevated_", _wrap_DBGFUNCTIONS_IsProcessElevated_, METH_VARARGS, (char *)"DBGFUNCTIONS_IsProcessElevated_(DBGFUNCTIONS self) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetCmdline_", _wrap_DBGFUNCTIONS_GetCmdline_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCmdline_(DBGFUNCTIONS self, char * cmdline, size_t * cbsize) -> bool"},
	 { (char *)"DBGFUNCTIONS_SetCmdline_", _wrap_DBGFUNCTIONS_SetCmdline_, METH_VARARGS, (char *)"DBGFUNCTIONS_SetCmdline_(DBGFUNCTIONS self, char const * cmdline) -> bool"},
	 { (char *)"DBGFUNCTIONS_FileOffsetToVa_", _wrap_DBGFUNCTIONS_FileOffsetToVa_, METH_VARARGS, (char *)"DBGFUNCTIONS_FileOffsetToVa_(DBGFUNCTIONS self, char const * modname, duint offset) -> duint"},
	 { (char *)"DBGFUNCTIONS_VaToFileOffset_", _wrap_DBGFUNCTIONS_VaToFileOffset_, METH_VARARGS, (char *)"DBGFUNCTIONS_VaToFileOffset_(DBGFUNCTIONS self, duint va) -> duint"},
	 { (char *)"DBGFUNCTIONS_GetAddrFromLine_", _wrap_DBGFUNCTIONS_GetAddrFromLine_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetAddrFromLine_(DBGFUNCTIONS self, char const * szSourceFile, int line, duint * displacement) -> duint"},
	 { (char *)"DBGFUNCTIONS_GetSourceFromAddr_", _wrap_DBGFUNCTIONS_GetSourceFromAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetSourceFromAddr_(DBGFUNCTIONS self, duint addr, char * szSourceFile, int * line) -> bool"},
	 { (char *)"DBGFUNCTIONS_ValFromString_", _wrap_DBGFUNCTIONS_ValFromString_, METH_VARARGS, (char *)"DBGFUNCTIONS_ValFromString_(DBGFUNCTIONS self, char const * string, duint * value) -> bool"},
	 { (char *)"DBGFUNCTIONS_PatchGetEx_", _wrap_DBGFUNCTIONS_PatchGetEx_, METH_VARARGS, (char *)"DBGFUNCTIONS_PatchGetEx_(DBGFUNCTIONS self, duint addr, DBGPATCHINFO info) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetBridgeBp_", _wrap_DBGFUNCTIONS_GetBridgeBp_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetBridgeBp_(DBGFUNCTIONS self, BPXTYPE type, duint addr, BRIDGEBP bp) -> bool"},
	 { (char *)"DBGFUNCTIONS_StringFormatInline_", _wrap_DBGFUNCTIONS_StringFormatInline_, METH_VARARGS, (char *)"DBGFUNCTIONS_StringFormatInline_(DBGFUNCTIONS self, char const * format, size_t resultSize, char * result) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetMnemonicBrief_", _wrap_DBGFUNCTIONS_GetMnemonicBrief_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetMnemonicBrief_(DBGFUNCTIONS self, char const * mnem, size_t resultSize, char * result)"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordHitCount_", _wrap_DBGFUNCTIONS_GetTraceRecordHitCount_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordHitCount_(DBGFUNCTIONS self, duint address) -> unsigned int"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordByteType_", _wrap_DBGFUNCTIONS_GetTraceRecordByteType_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordByteType_(DBGFUNCTIONS self, duint address) -> TRACERECORDBYTETYPE"},
	 { (char *)"DBGFUNCTIONS_SetTraceRecordType_", _wrap_DBGFUNCTIONS_SetTraceRecordType_, METH_VARARGS, (char *)"DBGFUNCTIONS_SetTraceRecordType_(DBGFUNCTIONS self, duint pageAddress, TRACERECORDTYPE type) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetTraceRecordType_", _wrap_DBGFUNCTIONS_GetTraceRecordType_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetTraceRecordType_(DBGFUNCTIONS self, duint pageAddress) -> TRACERECORDTYPE"},
	 { (char *)"DBGFUNCTIONS_EnumHandles_", _wrap_DBGFUNCTIONS_EnumHandles_, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumHandles_(DBGFUNCTIONS self, ListInfo handles) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetHandleName_", _wrap_DBGFUNCTIONS_GetHandleName_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetHandleName_(DBGFUNCTIONS self, duint handle, char * name, size_t nameSize, char * typeName, size_t typeNameSize) -> bool"},
	 { (char *)"DBGFUNCTIONS_EnumTcpConnections_", _wrap_DBGFUNCTIONS_EnumTcpConnections_, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumTcpConnections_(DBGFUNCTIONS self, ListInfo connections) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetDbgEvents_", _wrap_DBGFUNCTIONS_GetDbgEvents_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetDbgEvents_(DBGFUNCTIONS self) -> duint"},
	 { (char *)"DBGFUNCTIONS_ModGetParty_", _wrap_DBGFUNCTIONS_ModGetParty_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModGetParty_(DBGFUNCTIONS self, duint base) -> int"},
	 { (char *)"DBGFUNCTIONS_ModSetParty_", _wrap_DBGFUNCTIONS_ModSetParty_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModSetParty_(DBGFUNCTIONS self, duint base, int party)"},
	 { (char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_", _wrap_DBGFUNCTIONS_WatchIsWatchdogTriggered_, METH_VARARGS, (char *)"DBGFUNCTIONS_WatchIsWatchdogTriggered_(DBGFUNCTIONS self, unsigned int id) -> bool"},
	 { (char *)"DBGFUNCTIONS_MemIsCodePage_", _wrap_DBGFUNCTIONS_MemIsCodePage_, METH_VARARGS, (char *)"DBGFUNCTIONS_MemIsCodePage_(DBGFUNCTIONS self, duint addr, bool refresh) -> bool"},
	 { (char *)"DBGFUNCTIONS_AnimateCommand_", _wrap_DBGFUNCTIONS_AnimateCommand_, METH_VARARGS, (char *)"DBGFUNCTIONS_AnimateCommand_(DBGFUNCTIONS self, char const * command) -> bool"},
	 { (char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_", _wrap_DBGFUNCTIONS_DbgSetDebuggeeInitScript_, METH_VARARGS, (char *)"DBGFUNCTIONS_DbgSetDebuggeeInitScript_(DBGFUNCTIONS self, char const * fileName)"},
	 { (char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_", _wrap_DBGFUNCTIONS_DbgGetDebuggeeInitScript_, METH_VARARGS, (char *)"DBGFUNCTIONS_DbgGetDebuggeeInitScript_(DBGFUNCTIONS self) -> char const *"},
	 { (char *)"DBGFUNCTIONS_EnumWindows_", _wrap_DBGFUNCTIONS_EnumWindows_, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumWindows_(DBGFUNCTIONS self, ListInfo windows) -> bool"},
	 { (char *)"DBGFUNCTIONS_EnumHeaps_", _wrap_DBGFUNCTIONS_EnumHeaps_, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumHeaps_(DBGFUNCTIONS self, ListInfo heaps) -> bool"},
	 { (char *)"DBGFUNCTIONS_ThreadGetName_", _wrap_DBGFUNCTIONS_ThreadGetName_, METH_VARARGS, (char *)"DBGFUNCTIONS_ThreadGetName_(DBGFUNCTIONS self, DWORD tid, char * name) -> bool"},
	 { (char *)"DBGFUNCTIONS_IsDepEnabled_", _wrap_DBGFUNCTIONS_IsDepEnabled_, METH_VARARGS, (char *)"DBGFUNCTIONS_IsDepEnabled_(DBGFUNCTIONS self) -> bool"},
	 { (char *)"DBGFUNCTIONS_GetCallStackEx_", _wrap_DBGFUNCTIONS_GetCallStackEx_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetCallStackEx_(DBGFUNCTIONS self, DBGCALLSTACK callstack, bool cache)"},
	 { (char *)"DBGFUNCTIONS_GetUserComment_", _wrap_DBGFUNCTIONS_GetUserComment_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetUserComment_(DBGFUNCTIONS self, duint addr, char * comment) -> bool"},
	 { (char *)"DBGFUNCTIONS_EnumConstants_", _wrap_DBGFUNCTIONS_EnumConstants_, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumConstants_(DBGFUNCTIONS self, ListInfo constants)"},
	 { (char *)"DBGFUNCTIONS_EnumErrorCodes_", _wrap_DBGFUNCTIONS_EnumErrorCodes_, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumErrorCodes_(DBGFUNCTIONS self, ListInfo constants)"},
	 { (char *)"DBGFUNCTIONS_EnumExceptions_", _wrap_DBGFUNCTIONS_EnumExceptions_, METH_VARARGS, (char *)"DBGFUNCTIONS_EnumExceptions_(DBGFUNCTIONS self, ListInfo constants)"},
	 { (char *)"DBGFUNCTIONS_MemBpSize_", _wrap_DBGFUNCTIONS_MemBpSize_, METH_VARARGS, (char *)"DBGFUNCTIONS_MemBpSize_(DBGFUNCTIONS self, duint addr) -> duint"},
	 { (char *)"DBGFUNCTIONS_ModRelocationsFromAddr_", _wrap_DBGFUNCTIONS_ModRelocationsFromAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationsFromAddr_(DBGFUNCTIONS self, duint addr, ListInfo relocations) -> bool"},
	 { (char *)"DBGFUNCTIONS_ModRelocationAtAddr_", _wrap_DBGFUNCTIONS_ModRelocationAtAddr_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationAtAddr_(DBGFUNCTIONS self, duint addr, DBGRELOCATIONINFO relocation) -> bool"},
	 { (char *)"DBGFUNCTIONS_ModRelocationsInRange_", _wrap_DBGFUNCTIONS_ModRelocationsInRange_, METH_VARARGS, (char *)"DBGFUNCTIONS_ModRelocationsInRange_(DBGFUNCTIONS self, duint addr, duint size, ListInfo relocations) -> bool"},
	 { (char *)"DBGFUNCTIONS_DbGetHash_", _wrap_DBGFUNCTIONS_DbGetHash_, METH_VARARGS, (char *)"DBGFUNCTIONS_DbGetHash_(DBGFUNCTIONS self) -> duint"},
	 { (char *)"DBGFUNCTIONS_SymAutoComplete_", _wrap_DBGFUNCTIONS_SymAutoComplete_, METH_VARARGS, (char *)"DBGFUNCTIONS_SymAutoComplete_(DBGFUNCTIONS self, char const * Search, char ** Buffer, int MaxSymbols) -> int"},
	 { (char *)"DBGFUNCTIONS_RefreshModuleList_", _wrap_DBGFUNCTIONS_RefreshModuleList_, METH_VARARGS, (char *)"DBGFUNCTIONS_RefreshModuleList_(DBGFUNCTIONS self)"},
	 { (char *)"DBGFUNCTIONS_GetAddrFromLineEx_", _wrap_DBGFUNCTIONS_GetAddrFromLineEx_, METH_VARARGS, (char *)"DBGFUNCTIONS_GetAddrFromLineEx_(DBGFUNCTIONS self, duint mod, char const * szSourceFile, int line) -> duint"},
	 { (char *)"new_DBGFUNCTIONS", _wrap_new_DBGFUNCTIONS, METH_VARARGS, (char *)"new_DBGFUNCTIONS() -> DBGFUNCTIONS"},
	 { (char *)"delete_DBGFUNCTIONS", _wrap_delete_DBGFUNCTIONS, METH_VARARGS, (char *)"delete_DBGFUNCTIONS(DBGFUNCTIONS self)"},
	 { (char *)"DBGFUNCTIONS_swigregister", DBGFUNCTIONS_swigregister, METH_VARARGS, NULL},
	 { (char *)"_plugin_logprintf", _wrap__plugin_logprintf, METH_VARARGS, (char *)"_plugin_logprintf(char const * format)"},
	 { (char *)"ArgumentInfo_mod_set", _wrap_ArgumentInfo_mod_set, METH_VARARGS, (char *)"ArgumentInfo_mod_set(ArgumentInfo self, char [256] mod)"},
	 { (char *)"ArgumentInfo_mod_get", _wrap_ArgumentInfo_mod_get, METH_VARARGS, (char *)"ArgumentInfo_mod_get(ArgumentInfo self) -> char [256]"},
	 { (char *)"ArgumentInfo_rvaStart_set", _wrap_ArgumentInfo_rvaStart_set, METH_VARARGS, (char *)"ArgumentInfo_rvaStart_set(ArgumentInfo self, duint rvaStart)"},
	 { (char *)"ArgumentInfo_rvaStart_get", _wrap_ArgumentInfo_rvaStart_get, METH_VARARGS, (char *)"ArgumentInfo_rvaStart_get(ArgumentInfo self) -> duint"},
	 { (char *)"ArgumentInfo_rvaEnd_set", _wrap_ArgumentInfo_rvaEnd_set, METH_VARARGS, (char *)"ArgumentInfo_rvaEnd_set(ArgumentInfo self, duint rvaEnd)"},
	 { (char *)"ArgumentInfo_rvaEnd_get", _wrap_ArgumentInfo_rvaEnd_get, METH_VARARGS, (char *)"ArgumentInfo_rvaEnd_get(ArgumentInfo self) -> duint"},
	 { (char *)"ArgumentInfo_manual_set", _wrap_ArgumentInfo_manual_set, METH_VARARGS, (char *)"ArgumentInfo_manual_set(ArgumentInfo self, bool manual)"},
	 { (char *)"ArgumentInfo_manual_get", _wrap_ArgumentInfo_manual_get, METH_VARARGS, (char *)"ArgumentInfo_manual_get(ArgumentInfo self) -> bool"},
	 { (char *)"ArgumentInfo_instructioncount_set", _wrap_ArgumentInfo_instructioncount_set, METH_VARARGS, (char *)"ArgumentInfo_instructioncount_set(ArgumentInfo self, duint instructioncount)"},
	 { (char *)"ArgumentInfo_instructioncount_get", _wrap_ArgumentInfo_instructioncount_get, METH_VARARGS, (char *)"ArgumentInfo_instructioncount_get(ArgumentInfo self) -> duint"},
	 { (char *)"new_ArgumentInfo", _wrap_new_ArgumentInfo, METH_VARARGS, (char *)"new_ArgumentInfo() -> ArgumentInfo"},
	 { (char *)"delete_ArgumentInfo", _wrap_delete_ArgumentInfo, METH_VARARGS, (char *)"delete_ArgumentInfo(ArgumentInfo self)"},
	 { (char *)"ArgumentInfo_swigregister", ArgumentInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"Argument_Add", _wrap_Argument_Add, METH_VARARGS, (char *)"\n"
		"Argument_Add(duint start, duint end, bool manual, duint instructionCount=0) -> bool\n"
		"Argument_Add(duint start, duint end, bool manual) -> bool\n"
		""},
	 { (char *)"Argument_AddByArgumentInfo", _wrap_Argument_AddByArgumentInfo, METH_VARARGS, (char *)"Argument_AddByArgumentInfo(ArgumentInfo info) -> bool"},
	 { (char *)"Argument_Get", _wrap_Argument_Get, METH_VARARGS, (char *)"\n"
		"Argument_Get(duint addr, duint * start=None, duint * end=None, duint * instructionCount=None) -> bool\n"
		"Argument_Get(duint addr, duint * start=None, duint * end=None) -> bool\n"
		"Argument_Get(duint addr, duint * start=None) -> bool\n"
		"Argument_Get(duint addr) -> bool\n"
		""},
	 { (char *)"Argument_GetInfo", _wrap_Argument_GetInfo, METH_VARARGS, (char *)"Argument_GetInfo(duint addr, ArgumentInfo info) -> bool"},
	 { (char *)"Argument_Overlaps", _wrap_Argument_Overlaps, METH_VARARGS, (char *)"Argument_Overlaps(duint start, duint end) -> bool"},
	 { (char *)"Argument_Delete", _wrap_Argument_Delete, METH_VARARGS, (char *)"Argument_Delete(duint address) -> bool"},
	 { (char *)"Argument_DeleteRange", _wrap_Argument_DeleteRange, METH_VARARGS, (char *)"\n"
		"Argument_DeleteRange(duint start, duint end, bool deleteManual=False)\n"
		"Argument_DeleteRange(duint start, duint end)\n"
		""},
	 { (char *)"Argument_Clear", _wrap_Argument_Clear, METH_VARARGS, (char *)"Argument_Clear()"},
	 { (char *)"Argument_GetList", _wrap_Argument_GetList, METH_VARARGS, (char *)"Argument_GetList(ListInfo list) -> bool"},
	 { (char *)"Assembler_Assemble", _wrap_Assembler_Assemble, METH_VARARGS, (char *)"Assembler_Assemble(duint addr, unsigned char * dest, int * size, char const * instruction) -> bool"},
	 { (char *)"Assembler_AssembleEx", _wrap_Assembler_AssembleEx, METH_VARARGS, (char *)"Assembler_AssembleEx(duint addr, unsigned char * dest, int * size, char const * instruction, char * error) -> bool"},
	 { (char *)"Assembler_AssembleMem", _wrap_Assembler_AssembleMem, METH_VARARGS, (char *)"Assembler_AssembleMem(duint addr, char const * instruction) -> bool"},
	 { (char *)"Assembler_AssembleMemEx", _wrap_Assembler_AssembleMemEx, METH_VARARGS, (char *)"Assembler_AssembleMemEx(duint addr, char const * instruction, int * size, char * error, bool fillnop) -> bool"},
	 { (char *)"BookmarkInfo_mod_set", _wrap_BookmarkInfo_mod_set, METH_VARARGS, (char *)"BookmarkInfo_mod_set(BookmarkInfo self, char [256] mod)"},
	 { (char *)"BookmarkInfo_mod_get", _wrap_BookmarkInfo_mod_get, METH_VARARGS, (char *)"BookmarkInfo_mod_get(BookmarkInfo self) -> char [256]"},
	 { (char *)"BookmarkInfo_rva_set", _wrap_BookmarkInfo_rva_set, METH_VARARGS, (char *)"BookmarkInfo_rva_set(BookmarkInfo self, duint rva)"},
	 { (char *)"BookmarkInfo_rva_get", _wrap_BookmarkInfo_rva_get, METH_VARARGS, (char *)"BookmarkInfo_rva_get(BookmarkInfo self) -> duint"},
	 { (char *)"BookmarkInfo_manual_set", _wrap_BookmarkInfo_manual_set, METH_VARARGS, (char *)"BookmarkInfo_manual_set(BookmarkInfo self, bool manual)"},
	 { (char *)"BookmarkInfo_manual_get", _wrap_BookmarkInfo_manual_get, METH_VARARGS, (char *)"BookmarkInfo_manual_get(BookmarkInfo self) -> bool"},
	 { (char *)"new_BookmarkInfo", _wrap_new_BookmarkInfo, METH_VARARGS, (char *)"new_BookmarkInfo() -> BookmarkInfo"},
	 { (char *)"delete_BookmarkInfo", _wrap_delete_BookmarkInfo, METH_VARARGS, (char *)"delete_BookmarkInfo(BookmarkInfo self)"},
	 { (char *)"BookmarkInfo_swigregister", BookmarkInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"Bookmark_Set", _wrap_Bookmark_Set, METH_VARARGS, (char *)"\n"
		"Bookmark_Set(duint addr, bool manual=False) -> bool\n"
		"Bookmark_Set(duint addr) -> bool\n"
		""},
	 { (char *)"Bookmark_SetByBookmarkInfo", _wrap_Bookmark_SetByBookmarkInfo, METH_VARARGS, (char *)"Bookmark_SetByBookmarkInfo(BookmarkInfo info) -> bool"},
	 { (char *)"Bookmark_Get", _wrap_Bookmark_Get, METH_VARARGS, (char *)"Bookmark_Get(duint addr) -> bool"},
	 { (char *)"Bookmark_GetInfo", _wrap_Bookmark_GetInfo, METH_VARARGS, (char *)"Bookmark_GetInfo(duint addr, BookmarkInfo info) -> bool"},
	 { (char *)"Bookmark_Delete", _wrap_Bookmark_Delete, METH_VARARGS, (char *)"Bookmark_Delete(duint addr) -> bool"},
	 { (char *)"Bookmark_DeleteRange", _wrap_Bookmark_DeleteRange, METH_VARARGS, (char *)"Bookmark_DeleteRange(duint start, duint end)"},
	 { (char *)"Bookmark_Clear", _wrap_Bookmark_Clear, METH_VARARGS, (char *)"Bookmark_Clear()"},
	 { (char *)"Bookmark_GetList", _wrap_Bookmark_GetList, METH_VARARGS, (char *)"Bookmark_GetList(ListInfo list) -> bool"},
	 { (char *)"CommentInfo_mod_set", _wrap_CommentInfo_mod_set, METH_VARARGS, (char *)"CommentInfo_mod_set(CommentInfo self, char [256] mod)"},
	 { (char *)"CommentInfo_mod_get", _wrap_CommentInfo_mod_get, METH_VARARGS, (char *)"CommentInfo_mod_get(CommentInfo self) -> char [256]"},
	 { (char *)"CommentInfo_rva_set", _wrap_CommentInfo_rva_set, METH_VARARGS, (char *)"CommentInfo_rva_set(CommentInfo self, duint rva)"},
	 { (char *)"CommentInfo_rva_get", _wrap_CommentInfo_rva_get, METH_VARARGS, (char *)"CommentInfo_rva_get(CommentInfo self) -> duint"},
	 { (char *)"CommentInfo_text_set", _wrap_CommentInfo_text_set, METH_VARARGS, (char *)"CommentInfo_text_set(CommentInfo self, char [256] text)"},
	 { (char *)"CommentInfo_text_get", _wrap_CommentInfo_text_get, METH_VARARGS, (char *)"CommentInfo_text_get(CommentInfo self) -> char [256]"},
	 { (char *)"CommentInfo_manual_set", _wrap_CommentInfo_manual_set, METH_VARARGS, (char *)"CommentInfo_manual_set(CommentInfo self, bool manual)"},
	 { (char *)"CommentInfo_manual_get", _wrap_CommentInfo_manual_get, METH_VARARGS, (char *)"CommentInfo_manual_get(CommentInfo self) -> bool"},
	 { (char *)"new_CommentInfo", _wrap_new_CommentInfo, METH_VARARGS, (char *)"new_CommentInfo() -> CommentInfo"},
	 { (char *)"delete_CommentInfo", _wrap_delete_CommentInfo, METH_VARARGS, (char *)"delete_CommentInfo(CommentInfo self)"},
	 { (char *)"CommentInfo_swigregister", CommentInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"Comment_Set", _wrap_Comment_Set, METH_VARARGS, (char *)"\n"
		"Comment_Set(duint addr, char const * text, bool manual=False) -> bool\n"
		"Comment_Set(duint addr, char const * text) -> bool\n"
		""},
	 { (char *)"Comment_ByCommentInfo", _wrap_Comment_ByCommentInfo, METH_VARARGS, (char *)"Comment_ByCommentInfo(CommentInfo info) -> bool"},
	 { (char *)"Comment_Get", _wrap_Comment_Get, METH_VARARGS, (char *)"Comment_Get(duint addr, char * text) -> bool"},
	 { (char *)"Comment_GetInfo", _wrap_Comment_GetInfo, METH_VARARGS, (char *)"Comment_GetInfo(duint addr, CommentInfo info) -> bool"},
	 { (char *)"Comment_Delete", _wrap_Comment_Delete, METH_VARARGS, (char *)"Comment_Delete(duint addr) -> bool"},
	 { (char *)"Comment_DeleteRange", _wrap_Comment_DeleteRange, METH_VARARGS, (char *)"Comment_DeleteRange(duint start, duint end)"},
	 { (char *)"Comment_Clear", _wrap_Comment_Clear, METH_VARARGS, (char *)"Comment_Clear()"},
	 { (char *)"Comment_GetList", _wrap_Comment_GetList, METH_VARARGS, (char *)"Comment_GetList(ListInfo list) -> bool"},
	 { (char *)"Debug_Wait", _wrap_Debug_Wait, METH_VARARGS, (char *)"Debug_Wait()"},
	 { (char *)"Debug_Run", _wrap_Debug_Run, METH_VARARGS, (char *)"Debug_Run()"},
	 { (char *)"Debug_Pause", _wrap_Debug_Pause, METH_VARARGS, (char *)"Debug_Pause()"},
	 { (char *)"Debug_Stop", _wrap_Debug_Stop, METH_VARARGS, (char *)"Debug_Stop()"},
	 { (char *)"Debug_StepIn", _wrap_Debug_StepIn, METH_VARARGS, (char *)"Debug_StepIn()"},
	 { (char *)"Debug_StepOver", _wrap_Debug_StepOver, METH_VARARGS, (char *)"Debug_StepOver()"},
	 { (char *)"Debug_StepOut", _wrap_Debug_StepOut, METH_VARARGS, (char *)"Debug_StepOut()"},
	 { (char *)"Debug_SetBreakpoint", _wrap_Debug_SetBreakpoint, METH_VARARGS, (char *)"Debug_SetBreakpoint(duint address) -> bool"},
	 { (char *)"Debug_DeleteBreakpoint", _wrap_Debug_DeleteBreakpoint, METH_VARARGS, (char *)"Debug_DeleteBreakpoint(duint address) -> bool"},
	 { (char *)"Debug_DisableBreakpoint", _wrap_Debug_DisableBreakpoint, METH_VARARGS, (char *)"Debug_DisableBreakpoint(duint address) -> bool"},
	 { (char *)"Debug_SetHardwareBreakpoint", _wrap_Debug_SetHardwareBreakpoint, METH_VARARGS, (char *)"\n"
		"Debug_SetHardwareBreakpoint(duint address, Script::Debug::HardwareType type=HardwareExecute) -> bool\n"
		"Debug_SetHardwareBreakpoint(duint address) -> bool\n"
		""},
	 { (char *)"Debug_DeleteHardwareBreakpoint", _wrap_Debug_DeleteHardwareBreakpoint, METH_VARARGS, (char *)"Debug_DeleteHardwareBreakpoint(duint address) -> bool"},
	 { (char *)"Flag_Get", _wrap_Flag_Get, METH_VARARGS, (char *)"Flag_Get(Script::Flag::FlagEnum flag) -> bool"},
	 { (char *)"Flag_Set", _wrap_Flag_Set, METH_VARARGS, (char *)"Flag_Set(Script::Flag::FlagEnum flag, bool value) -> bool"},
	 { (char *)"Flag_GetZF", _wrap_Flag_GetZF, METH_VARARGS, (char *)"Flag_GetZF() -> bool"},
	 { (char *)"Flag_SetZF", _wrap_Flag_SetZF, METH_VARARGS, (char *)"Flag_SetZF(bool value) -> bool"},
	 { (char *)"Flag_GetOF", _wrap_Flag_GetOF, METH_VARARGS, (char *)"Flag_GetOF() -> bool"},
	 { (char *)"Flag_SetOF", _wrap_Flag_SetOF, METH_VARARGS, (char *)"Flag_SetOF(bool value) -> bool"},
	 { (char *)"Flag_GetCF", _wrap_Flag_GetCF, METH_VARARGS, (char *)"Flag_GetCF() -> bool"},
	 { (char *)"Flag_SetCF", _wrap_Flag_SetCF, METH_VARARGS, (char *)"Flag_SetCF(bool value) -> bool"},
	 { (char *)"Flag_GetPF", _wrap_Flag_GetPF, METH_VARARGS, (char *)"Flag_GetPF() -> bool"},
	 { (char *)"Flag_SetPF", _wrap_Flag_SetPF, METH_VARARGS, (char *)"Flag_SetPF(bool value) -> bool"},
	 { (char *)"Flag_GetSF", _wrap_Flag_GetSF, METH_VARARGS, (char *)"Flag_GetSF() -> bool"},
	 { (char *)"Flag_SetSF", _wrap_Flag_SetSF, METH_VARARGS, (char *)"Flag_SetSF(bool value) -> bool"},
	 { (char *)"Flag_GetTF", _wrap_Flag_GetTF, METH_VARARGS, (char *)"Flag_GetTF() -> bool"},
	 { (char *)"Flag_SetTF", _wrap_Flag_SetTF, METH_VARARGS, (char *)"Flag_SetTF(bool value) -> bool"},
	 { (char *)"Flag_GetAF", _wrap_Flag_GetAF, METH_VARARGS, (char *)"Flag_GetAF() -> bool"},
	 { (char *)"Flag_SetAF", _wrap_Flag_SetAF, METH_VARARGS, (char *)"Flag_SetAF(bool value) -> bool"},
	 { (char *)"Flag_GetDF", _wrap_Flag_GetDF, METH_VARARGS, (char *)"Flag_GetDF() -> bool"},
	 { (char *)"Flag_SetDF", _wrap_Flag_SetDF, METH_VARARGS, (char *)"Flag_SetDF(bool value) -> bool"},
	 { (char *)"Flag_GetIF", _wrap_Flag_GetIF, METH_VARARGS, (char *)"Flag_GetIF() -> bool"},
	 { (char *)"Flag_SetIF", _wrap_Flag_SetIF, METH_VARARGS, (char *)"Flag_SetIF(bool value) -> bool"},
	 { (char *)"FunctionInfo_mod_set", _wrap_FunctionInfo_mod_set, METH_VARARGS, (char *)"FunctionInfo_mod_set(FunctionInfo self, char [256] mod)"},
	 { (char *)"FunctionInfo_mod_get", _wrap_FunctionInfo_mod_get, METH_VARARGS, (char *)"FunctionInfo_mod_get(FunctionInfo self) -> char [256]"},
	 { (char *)"FunctionInfo_rvaStart_set", _wrap_FunctionInfo_rvaStart_set, METH_VARARGS, (char *)"FunctionInfo_rvaStart_set(FunctionInfo self, duint rvaStart)"},
	 { (char *)"FunctionInfo_rvaStart_get", _wrap_FunctionInfo_rvaStart_get, METH_VARARGS, (char *)"FunctionInfo_rvaStart_get(FunctionInfo self) -> duint"},
	 { (char *)"FunctionInfo_rvaEnd_set", _wrap_FunctionInfo_rvaEnd_set, METH_VARARGS, (char *)"FunctionInfo_rvaEnd_set(FunctionInfo self, duint rvaEnd)"},
	 { (char *)"FunctionInfo_rvaEnd_get", _wrap_FunctionInfo_rvaEnd_get, METH_VARARGS, (char *)"FunctionInfo_rvaEnd_get(FunctionInfo self) -> duint"},
	 { (char *)"FunctionInfo_manual_set", _wrap_FunctionInfo_manual_set, METH_VARARGS, (char *)"FunctionInfo_manual_set(FunctionInfo self, bool manual)"},
	 { (char *)"FunctionInfo_manual_get", _wrap_FunctionInfo_manual_get, METH_VARARGS, (char *)"FunctionInfo_manual_get(FunctionInfo self) -> bool"},
	 { (char *)"FunctionInfo_instructioncount_set", _wrap_FunctionInfo_instructioncount_set, METH_VARARGS, (char *)"FunctionInfo_instructioncount_set(FunctionInfo self, duint instructioncount)"},
	 { (char *)"FunctionInfo_instructioncount_get", _wrap_FunctionInfo_instructioncount_get, METH_VARARGS, (char *)"FunctionInfo_instructioncount_get(FunctionInfo self) -> duint"},
	 { (char *)"new_FunctionInfo", _wrap_new_FunctionInfo, METH_VARARGS, (char *)"new_FunctionInfo() -> FunctionInfo"},
	 { (char *)"delete_FunctionInfo", _wrap_delete_FunctionInfo, METH_VARARGS, (char *)"delete_FunctionInfo(FunctionInfo self)"},
	 { (char *)"FunctionInfo_swigregister", FunctionInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"Function_Add", _wrap_Function_Add, METH_VARARGS, (char *)"\n"
		"Function_Add(duint start, duint end, bool manual, duint instructionCount=0) -> bool\n"
		"Function_Add(duint start, duint end, bool manual) -> bool\n"
		""},
	 { (char *)"Function_AddByFuncInfo", _wrap_Function_AddByFuncInfo, METH_VARARGS, (char *)"Function_AddByFuncInfo(FunctionInfo info) -> bool"},
	 { (char *)"Function_Get", _wrap_Function_Get, METH_VARARGS, (char *)"\n"
		"Function_Get(duint addr, duint * start=None, duint * end=None, duint * instructionCount=None) -> bool\n"
		"Function_Get(duint addr, duint * start=None, duint * end=None) -> bool\n"
		"Function_Get(duint addr, duint * start=None) -> bool\n"
		"Function_Get(duint addr) -> bool\n"
		""},
	 { (char *)"Function_GetInfo", _wrap_Function_GetInfo, METH_VARARGS, (char *)"Function_GetInfo(duint addr, FunctionInfo info) -> bool"},
	 { (char *)"Function_Overlaps", _wrap_Function_Overlaps, METH_VARARGS, (char *)"Function_Overlaps(duint start, duint end) -> bool"},
	 { (char *)"Function_Delete", _wrap_Function_Delete, METH_VARARGS, (char *)"Function_Delete(duint address) -> bool"},
	 { (char *)"Function_DeleteRange", _wrap_Function_DeleteRange, METH_VARARGS, (char *)"Function_DeleteRange(duint start, duint end, bool deleteManual)"},
	 { (char *)"Function_DeleteRangeAuto", _wrap_Function_DeleteRangeAuto, METH_VARARGS, (char *)"Function_DeleteRangeAuto(duint start, duint end)"},
	 { (char *)"Function_Clear", _wrap_Function_Clear, METH_VARARGS, (char *)"Function_Clear()"},
	 { (char *)"Function_GetList", _wrap_Function_GetList, METH_VARARGS, (char *)"Function_GetList(ListInfo list) -> bool"},
	 { (char *)"Gui_Disassembly_SelectionGet", _wrap_Gui_Disassembly_SelectionGet, METH_VARARGS, (char *)"Gui_Disassembly_SelectionGet(duint * start, duint * end) -> bool"},
	 { (char *)"Gui_Disassembly_SelectionSet", _wrap_Gui_Disassembly_SelectionSet, METH_VARARGS, (char *)"Gui_Disassembly_SelectionSet(duint start, duint end) -> bool"},
	 { (char *)"Gui_Disassembly_SelectionGetStart", _wrap_Gui_Disassembly_SelectionGetStart, METH_VARARGS, (char *)"Gui_Disassembly_SelectionGetStart() -> duint"},
	 { (char *)"Gui_Disassembly_SelectionGetEnd", _wrap_Gui_Disassembly_SelectionGetEnd, METH_VARARGS, (char *)"Gui_Disassembly_SelectionGetEnd() -> duint"},
	 { (char *)"Gui_Dump_SelectionGet", _wrap_Gui_Dump_SelectionGet, METH_VARARGS, (char *)"Gui_Dump_SelectionGet(duint * start, duint * end) -> bool"},
	 { (char *)"Gui_Dump_SelectionSet", _wrap_Gui_Dump_SelectionSet, METH_VARARGS, (char *)"Gui_Dump_SelectionSet(duint start, duint end) -> bool"},
	 { (char *)"Gui_Dump_SelectionGetStart", _wrap_Gui_Dump_SelectionGetStart, METH_VARARGS, (char *)"Gui_Dump_SelectionGetStart() -> duint"},
	 { (char *)"Gui_Dump_SelectionGetEnd", _wrap_Gui_Dump_SelectionGetEnd, METH_VARARGS, (char *)"Gui_Dump_SelectionGetEnd() -> duint"},
	 { (char *)"Gui_Stack_SelectionGet", _wrap_Gui_Stack_SelectionGet, METH_VARARGS, (char *)"Gui_Stack_SelectionGet(duint * start, duint * end) -> bool"},
	 { (char *)"Gui_Stack_SelectionSet", _wrap_Gui_Stack_SelectionSet, METH_VARARGS, (char *)"Gui_Stack_SelectionSet(duint start, duint end) -> bool"},
	 { (char *)"Gui_Stack_SelectionGetStart", _wrap_Gui_Stack_SelectionGetStart, METH_VARARGS, (char *)"Gui_Stack_SelectionGetStart() -> duint"},
	 { (char *)"Gui_Stack_SelectionGetEnd", _wrap_Gui_Stack_SelectionGetEnd, METH_VARARGS, (char *)"Gui_Stack_SelectionGetEnd() -> duint"},
	 { (char *)"Gui_Graph_SelectionGetStart", _wrap_Gui_Graph_SelectionGetStart, METH_VARARGS, (char *)"Gui_Graph_SelectionGetStart() -> duint"},
	 { (char *)"Gui_MemMap_SelectionGetStart", _wrap_Gui_MemMap_SelectionGetStart, METH_VARARGS, (char *)"Gui_MemMap_SelectionGetStart() -> duint"},
	 { (char *)"Gui_SymMod_SelectionGetStart", _wrap_Gui_SymMod_SelectionGetStart, METH_VARARGS, (char *)"Gui_SymMod_SelectionGetStart() -> duint"},
	 { (char *)"Gui_SelectionGet", _wrap_Gui_SelectionGet, METH_VARARGS, (char *)"Gui_SelectionGet(Script::Gui::Window window, duint * start, duint * end) -> bool"},
	 { (char *)"Gui_SelectionSet", _wrap_Gui_SelectionSet, METH_VARARGS, (char *)"Gui_SelectionSet(Script::Gui::Window window, duint start, duint end) -> bool"},
	 { (char *)"Gui_SelectionGetStart", _wrap_Gui_SelectionGetStart, METH_VARARGS, (char *)"Gui_SelectionGetStart(Script::Gui::Window window) -> duint"},
	 { (char *)"Gui_SelectionGetEnd", _wrap_Gui_SelectionGetEnd, METH_VARARGS, (char *)"Gui_SelectionGetEnd(Script::Gui::Window window) -> duint"},
	 { (char *)"Gui_Message", _wrap_Gui_Message, METH_VARARGS, (char *)"Gui_Message(char const * message)"},
	 { (char *)"Gui_MessageYesNo", _wrap_Gui_MessageYesNo, METH_VARARGS, (char *)"Gui_MessageYesNo(char const * message) -> bool"},
	 { (char *)"Gui_InputLine", _wrap_Gui_InputLine, METH_VARARGS, (char *)"Gui_InputLine(char const * title, char * text) -> bool"},
	 { (char *)"Gui_InputValue", _wrap_Gui_InputValue, METH_VARARGS, (char *)"Gui_InputValue(char const * title, duint * value) -> bool"},
	 { (char *)"Gui_Refresh", _wrap_Gui_Refresh, METH_VARARGS, (char *)"Gui_Refresh()"},
	 { (char *)"Gui_AddQWidgetTab", _wrap_Gui_AddQWidgetTab, METH_VARARGS, (char *)"Gui_AddQWidgetTab(void * qWidget)"},
	 { (char *)"Gui_ShowQWidgetTab", _wrap_Gui_ShowQWidgetTab, METH_VARARGS, (char *)"Gui_ShowQWidgetTab(void * qWidget)"},
	 { (char *)"Gui_CloseQWidgetTab", _wrap_Gui_CloseQWidgetTab, METH_VARARGS, (char *)"Gui_CloseQWidgetTab(void * qWidget)"},
	 { (char *)"LabelInfo_mod_set", _wrap_LabelInfo_mod_set, METH_VARARGS, (char *)"LabelInfo_mod_set(LabelInfo self, char [256] mod)"},
	 { (char *)"LabelInfo_mod_get", _wrap_LabelInfo_mod_get, METH_VARARGS, (char *)"LabelInfo_mod_get(LabelInfo self) -> char [256]"},
	 { (char *)"LabelInfo_rva_set", _wrap_LabelInfo_rva_set, METH_VARARGS, (char *)"LabelInfo_rva_set(LabelInfo self, duint rva)"},
	 { (char *)"LabelInfo_rva_get", _wrap_LabelInfo_rva_get, METH_VARARGS, (char *)"LabelInfo_rva_get(LabelInfo self) -> duint"},
	 { (char *)"LabelInfo_text_set", _wrap_LabelInfo_text_set, METH_VARARGS, (char *)"LabelInfo_text_set(LabelInfo self, char [256] text)"},
	 { (char *)"LabelInfo_text_get", _wrap_LabelInfo_text_get, METH_VARARGS, (char *)"LabelInfo_text_get(LabelInfo self) -> char [256]"},
	 { (char *)"LabelInfo_manual_set", _wrap_LabelInfo_manual_set, METH_VARARGS, (char *)"LabelInfo_manual_set(LabelInfo self, bool manual)"},
	 { (char *)"LabelInfo_manual_get", _wrap_LabelInfo_manual_get, METH_VARARGS, (char *)"LabelInfo_manual_get(LabelInfo self) -> bool"},
	 { (char *)"new_LabelInfo", _wrap_new_LabelInfo, METH_VARARGS, (char *)"new_LabelInfo() -> LabelInfo"},
	 { (char *)"delete_LabelInfo", _wrap_delete_LabelInfo, METH_VARARGS, (char *)"delete_LabelInfo(LabelInfo self)"},
	 { (char *)"LabelInfo_swigregister", LabelInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"Label_Set", _wrap_Label_Set, METH_VARARGS, (char *)"\n"
		"Label_Set(duint addr, char const * text, bool manual=False) -> bool\n"
		"Label_Set(duint addr, char const * text) -> bool\n"
		""},
	 { (char *)"Label_SetByLabelInfo", _wrap_Label_SetByLabelInfo, METH_VARARGS, (char *)"Label_SetByLabelInfo(LabelInfo info) -> bool"},
	 { (char *)"Label_FromString", _wrap_Label_FromString, METH_VARARGS, (char *)"Label_FromString(char const * label, duint * addr) -> bool"},
	 { (char *)"Label_Get", _wrap_Label_Get, METH_VARARGS, (char *)"Label_Get(duint addr, char * text) -> bool"},
	 { (char *)"Label_GetInfo", _wrap_Label_GetInfo, METH_VARARGS, (char *)"Label_GetInfo(duint addr, LabelInfo info) -> bool"},
	 { (char *)"Label_Delete", _wrap_Label_Delete, METH_VARARGS, (char *)"Label_Delete(duint addr) -> bool"},
	 { (char *)"Label_DeleteRange", _wrap_Label_DeleteRange, METH_VARARGS, (char *)"Label_DeleteRange(duint start, duint end)"},
	 { (char *)"Label_Clear", _wrap_Label_Clear, METH_VARARGS, (char *)"Label_Clear()"},
	 { (char *)"Label_GetList", _wrap_Label_GetList, METH_VARARGS, (char *)"Label_GetList(ListInfo list) -> bool"},
	 { (char *)"Memory_Read", _wrap_Memory_Read, METH_VARARGS, (char *)"Memory_Read(duint addr, void * data, duint size, duint * sizeRead) -> bool"},
	 { (char *)"Memory_Write", _wrap_Memory_Write, METH_VARARGS, (char *)"Memory_Write(duint addr, void const * data, duint size, duint * sizeWritten) -> bool"},
	 { (char *)"Memory_IsValidPtr", _wrap_Memory_IsValidPtr, METH_VARARGS, (char *)"Memory_IsValidPtr(duint addr) -> bool"},
	 { (char *)"Memory_RemoteAlloc", _wrap_Memory_RemoteAlloc, METH_VARARGS, (char *)"Memory_RemoteAlloc(duint addr, duint size) -> duint"},
	 { (char *)"Memory_RemoteFree", _wrap_Memory_RemoteFree, METH_VARARGS, (char *)"Memory_RemoteFree(duint addr) -> bool"},
	 { (char *)"Memory_GetProtect", _wrap_Memory_GetProtect, METH_VARARGS, (char *)"\n"
		"Memory_GetProtect(duint addr, bool reserved=False, bool cache=True) -> unsigned int\n"
		"Memory_GetProtect(duint addr, bool reserved=False) -> unsigned int\n"
		"Memory_GetProtect(duint addr) -> unsigned int\n"
		""},
	 { (char *)"Memory_GetBase", _wrap_Memory_GetBase, METH_VARARGS, (char *)"\n"
		"Memory_GetBase(duint addr, bool reserved=False, bool cache=True) -> duint\n"
		"Memory_GetBase(duint addr, bool reserved=False) -> duint\n"
		"Memory_GetBase(duint addr) -> duint\n"
		""},
	 { (char *)"Memory_GetSize", _wrap_Memory_GetSize, METH_VARARGS, (char *)"\n"
		"Memory_GetSize(duint addr, bool reserved=False, bool cache=True) -> duint\n"
		"Memory_GetSize(duint addr, bool reserved=False) -> duint\n"
		"Memory_GetSize(duint addr) -> duint\n"
		""},
	 { (char *)"Memory_ReadByte", _wrap_Memory_ReadByte, METH_VARARGS, (char *)"Memory_ReadByte(duint addr) -> unsigned char"},
	 { (char *)"Memory_WriteByte", _wrap_Memory_WriteByte, METH_VARARGS, (char *)"Memory_WriteByte(duint addr, unsigned char data) -> bool"},
	 { (char *)"Memory_ReadWord", _wrap_Memory_ReadWord, METH_VARARGS, (char *)"Memory_ReadWord(duint addr) -> unsigned short"},
	 { (char *)"Memory_WriteWord", _wrap_Memory_WriteWord, METH_VARARGS, (char *)"Memory_WriteWord(duint addr, unsigned short data) -> bool"},
	 { (char *)"Memory_ReadDword", _wrap_Memory_ReadDword, METH_VARARGS, (char *)"Memory_ReadDword(duint addr) -> unsigned int"},
	 { (char *)"Memory_WriteDword", _wrap_Memory_WriteDword, METH_VARARGS, (char *)"Memory_WriteDword(duint addr, unsigned int data) -> bool"},
	 { (char *)"Memory_ReadQword", _wrap_Memory_ReadQword, METH_VARARGS, (char *)"Memory_ReadQword(duint addr) -> unsigned long long"},
	 { (char *)"Memory_WriteQword", _wrap_Memory_WriteQword, METH_VARARGS, (char *)"Memory_WriteQword(duint addr, unsigned long long data) -> bool"},
	 { (char *)"Memory_ReadPtr", _wrap_Memory_ReadPtr, METH_VARARGS, (char *)"Memory_ReadPtr(duint addr) -> duint"},
	 { (char *)"Memory_WritePtr", _wrap_Memory_WritePtr, METH_VARARGS, (char *)"Memory_WritePtr(duint addr, duint data) -> bool"},
	 { (char *)"Misc_ParseExpression", _wrap_Misc_ParseExpression, METH_VARARGS, (char *)"Misc_ParseExpression(char const * expression, duint * value) -> bool"},
	 { (char *)"Misc_RemoteGetProcAddress", _wrap_Misc_RemoteGetProcAddress, METH_VARARGS, (char *)"Misc_RemoteGetProcAddress(char const * module, char const * api) -> duint"},
	 { (char *)"Misc_ResolveLabel", _wrap_Misc_ResolveLabel, METH_VARARGS, (char *)"Misc_ResolveLabel(char const * label) -> duint"},
	 { (char *)"Misc_Alloc", _wrap_Misc_Alloc, METH_VARARGS, (char *)"Misc_Alloc(duint size) -> void *"},
	 { (char *)"Misc_Free", _wrap_Misc_Free, METH_VARARGS, (char *)"Misc_Free(void * ptr)"},
	 { (char *)"ModuleInfo_base_set", _wrap_ModuleInfo_base_set, METH_VARARGS, (char *)"ModuleInfo_base_set(ModuleInfo self, duint base)"},
	 { (char *)"ModuleInfo_base_get", _wrap_ModuleInfo_base_get, METH_VARARGS, (char *)"ModuleInfo_base_get(ModuleInfo self) -> duint"},
	 { (char *)"ModuleInfo_size_set", _wrap_ModuleInfo_size_set, METH_VARARGS, (char *)"ModuleInfo_size_set(ModuleInfo self, duint size)"},
	 { (char *)"ModuleInfo_size_get", _wrap_ModuleInfo_size_get, METH_VARARGS, (char *)"ModuleInfo_size_get(ModuleInfo self) -> duint"},
	 { (char *)"ModuleInfo_entry_set", _wrap_ModuleInfo_entry_set, METH_VARARGS, (char *)"ModuleInfo_entry_set(ModuleInfo self, duint entry)"},
	 { (char *)"ModuleInfo_entry_get", _wrap_ModuleInfo_entry_get, METH_VARARGS, (char *)"ModuleInfo_entry_get(ModuleInfo self) -> duint"},
	 { (char *)"ModuleInfo_sectionCount_set", _wrap_ModuleInfo_sectionCount_set, METH_VARARGS, (char *)"ModuleInfo_sectionCount_set(ModuleInfo self, int sectionCount)"},
	 { (char *)"ModuleInfo_sectionCount_get", _wrap_ModuleInfo_sectionCount_get, METH_VARARGS, (char *)"ModuleInfo_sectionCount_get(ModuleInfo self) -> int"},
	 { (char *)"ModuleInfo_name_set", _wrap_ModuleInfo_name_set, METH_VARARGS, (char *)"ModuleInfo_name_set(ModuleInfo self, char [256] name)"},
	 { (char *)"ModuleInfo_name_get", _wrap_ModuleInfo_name_get, METH_VARARGS, (char *)"ModuleInfo_name_get(ModuleInfo self) -> char [256]"},
	 { (char *)"ModuleInfo_path_set", _wrap_ModuleInfo_path_set, METH_VARARGS, (char *)"ModuleInfo_path_set(ModuleInfo self, char [MAX_PATH] path)"},
	 { (char *)"ModuleInfo_path_get", _wrap_ModuleInfo_path_get, METH_VARARGS, (char *)"ModuleInfo_path_get(ModuleInfo self) -> char [MAX_PATH]"},
	 { (char *)"new_ModuleInfo", _wrap_new_ModuleInfo, METH_VARARGS, (char *)"new_ModuleInfo() -> ModuleInfo"},
	 { (char *)"delete_ModuleInfo", _wrap_delete_ModuleInfo, METH_VARARGS, (char *)"delete_ModuleInfo(ModuleInfo self)"},
	 { (char *)"ModuleInfo_swigregister", ModuleInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"ModuleSectionInfo_addr_set", _wrap_ModuleSectionInfo_addr_set, METH_VARARGS, (char *)"ModuleSectionInfo_addr_set(ModuleSectionInfo self, duint addr)"},
	 { (char *)"ModuleSectionInfo_addr_get", _wrap_ModuleSectionInfo_addr_get, METH_VARARGS, (char *)"ModuleSectionInfo_addr_get(ModuleSectionInfo self) -> duint"},
	 { (char *)"ModuleSectionInfo_size_set", _wrap_ModuleSectionInfo_size_set, METH_VARARGS, (char *)"ModuleSectionInfo_size_set(ModuleSectionInfo self, duint size)"},
	 { (char *)"ModuleSectionInfo_size_get", _wrap_ModuleSectionInfo_size_get, METH_VARARGS, (char *)"ModuleSectionInfo_size_get(ModuleSectionInfo self) -> duint"},
	 { (char *)"ModuleSectionInfo_name_set", _wrap_ModuleSectionInfo_name_set, METH_VARARGS, (char *)"ModuleSectionInfo_name_set(ModuleSectionInfo self, char [10*5] name)"},
	 { (char *)"ModuleSectionInfo_name_get", _wrap_ModuleSectionInfo_name_get, METH_VARARGS, (char *)"ModuleSectionInfo_name_get(ModuleSectionInfo self) -> char [10*5]"},
	 { (char *)"new_ModuleSectionInfo", _wrap_new_ModuleSectionInfo, METH_VARARGS, (char *)"new_ModuleSectionInfo() -> ModuleSectionInfo"},
	 { (char *)"delete_ModuleSectionInfo", _wrap_delete_ModuleSectionInfo, METH_VARARGS, (char *)"delete_ModuleSectionInfo(ModuleSectionInfo self)"},
	 { (char *)"ModuleSectionInfo_swigregister", ModuleSectionInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"Module_InfoFromAddr", _wrap_Module_InfoFromAddr, METH_VARARGS, (char *)"Module_InfoFromAddr(duint addr, ModuleInfo info) -> bool"},
	 { (char *)"Module_InfoFromName", _wrap_Module_InfoFromName, METH_VARARGS, (char *)"Module_InfoFromName(char const * name, ModuleInfo info) -> bool"},
	 { (char *)"Module_BaseFromAddr", _wrap_Module_BaseFromAddr, METH_VARARGS, (char *)"Module_BaseFromAddr(duint addr) -> duint"},
	 { (char *)"Module_BaseFromName", _wrap_Module_BaseFromName, METH_VARARGS, (char *)"Module_BaseFromName(char const * name) -> duint"},
	 { (char *)"Module_SizeFromAddr", _wrap_Module_SizeFromAddr, METH_VARARGS, (char *)"Module_SizeFromAddr(duint addr) -> duint"},
	 { (char *)"Module_SizeFromName", _wrap_Module_SizeFromName, METH_VARARGS, (char *)"Module_SizeFromName(char const * name) -> duint"},
	 { (char *)"Module_NameFromAddr", _wrap_Module_NameFromAddr, METH_VARARGS, (char *)"Module_NameFromAddr(duint addr, char * name) -> bool"},
	 { (char *)"Module_PathFromAddr", _wrap_Module_PathFromAddr, METH_VARARGS, (char *)"Module_PathFromAddr(duint addr, char * path) -> bool"},
	 { (char *)"Module_PathFromName", _wrap_Module_PathFromName, METH_VARARGS, (char *)"Module_PathFromName(char const * name, char * path) -> bool"},
	 { (char *)"Module_EntryFromAddr", _wrap_Module_EntryFromAddr, METH_VARARGS, (char *)"Module_EntryFromAddr(duint addr) -> duint"},
	 { (char *)"Module_EntryFromName", _wrap_Module_EntryFromName, METH_VARARGS, (char *)"Module_EntryFromName(char const * name) -> duint"},
	 { (char *)"Module_SectionCountFromAddr", _wrap_Module_SectionCountFromAddr, METH_VARARGS, (char *)"Module_SectionCountFromAddr(duint addr) -> int"},
	 { (char *)"Module_SectionCountFromName", _wrap_Module_SectionCountFromName, METH_VARARGS, (char *)"Module_SectionCountFromName(char const * name) -> int"},
	 { (char *)"Module_SectionFromAddr", _wrap_Module_SectionFromAddr, METH_VARARGS, (char *)"Module_SectionFromAddr(duint addr, int number, ModuleSectionInfo section) -> bool"},
	 { (char *)"Module_SectionFromName", _wrap_Module_SectionFromName, METH_VARARGS, (char *)"Module_SectionFromName(char const * name, int number, ModuleSectionInfo section) -> bool"},
	 { (char *)"Module_SectionListFromAddr", _wrap_Module_SectionListFromAddr, METH_VARARGS, (char *)"Module_SectionListFromAddr(duint addr, ListInfo list) -> bool"},
	 { (char *)"Module_SectionListFromName", _wrap_Module_SectionListFromName, METH_VARARGS, (char *)"Module_SectionListFromName(char const * name, ListInfo list) -> bool"},
	 { (char *)"Module_GetMainModuleInfo", _wrap_Module_GetMainModuleInfo, METH_VARARGS, (char *)"Module_GetMainModuleInfo(ModuleInfo info) -> bool"},
	 { (char *)"Module_GetMainModuleBase", _wrap_Module_GetMainModuleBase, METH_VARARGS, (char *)"Module_GetMainModuleBase() -> duint"},
	 { (char *)"Module_GetMainModuleSize", _wrap_Module_GetMainModuleSize, METH_VARARGS, (char *)"Module_GetMainModuleSize() -> duint"},
	 { (char *)"Module_GetMainModuleEntry", _wrap_Module_GetMainModuleEntry, METH_VARARGS, (char *)"Module_GetMainModuleEntry() -> duint"},
	 { (char *)"Module_GetMainModuleSectionCount", _wrap_Module_GetMainModuleSectionCount, METH_VARARGS, (char *)"Module_GetMainModuleSectionCount() -> int"},
	 { (char *)"Module_GetMainModuleName", _wrap_Module_GetMainModuleName, METH_VARARGS, (char *)"Module_GetMainModuleName(char * name) -> bool"},
	 { (char *)"Module_GetMainModulePath", _wrap_Module_GetMainModulePath, METH_VARARGS, (char *)"Module_GetMainModulePath(char * path) -> bool"},
	 { (char *)"Module_GetMainModuleSectionList", _wrap_Module_GetMainModuleSectionList, METH_VARARGS, (char *)"Module_GetMainModuleSectionList(ListInfo list) -> bool"},
	 { (char *)"Module_GetList", _wrap_Module_GetList, METH_VARARGS, (char *)"Module_GetList(ListInfo list) -> bool"},
	 { (char *)"Pattern_Find", _wrap_Pattern_Find, METH_VARARGS, (char *)"Pattern_Find(unsigned char * data, duint datasize, char const * pattern) -> duint"},
	 { (char *)"Pattern_FindMem", _wrap_Pattern_FindMem, METH_VARARGS, (char *)"Pattern_FindMem(duint start, duint size, char const * pattern) -> duint"},
	 { (char *)"Pattern_Write", _wrap_Pattern_Write, METH_VARARGS, (char *)"Pattern_Write(unsigned char * data, duint datasize, char const * pattern)"},
	 { (char *)"Pattern_WriteMem", _wrap_Pattern_WriteMem, METH_VARARGS, (char *)"Pattern_WriteMem(duint start, duint size, char const * pattern)"},
	 { (char *)"Pattern_SearchAndReplace", _wrap_Pattern_SearchAndReplace, METH_VARARGS, (char *)"Pattern_SearchAndReplace(unsigned char * data, duint datasize, char const * searchpattern, char const * replacepattern) -> bool"},
	 { (char *)"Pattern_SearchAndReplaceMem", _wrap_Pattern_SearchAndReplaceMem, METH_VARARGS, (char *)"Pattern_SearchAndReplaceMem(duint start, duint size, char const * searchpattern, char const * replacepattern) -> bool"},
	 { (char *)"Register_Get", _wrap_Register_Get, METH_VARARGS, (char *)"Register_Get(Script::Register::RegisterEnum reg) -> duint"},
	 { (char *)"Register_Set", _wrap_Register_Set, METH_VARARGS, (char *)"Register_Set(Script::Register::RegisterEnum reg, duint value) -> bool"},
	 { (char *)"Register_Size", _wrap_Register_Size, METH_VARARGS, (char *)"Register_Size() -> int"},
	 { (char *)"Register_GetDR0", _wrap_Register_GetDR0, METH_VARARGS, (char *)"Register_GetDR0() -> duint"},
	 { (char *)"Register_SetDR0", _wrap_Register_SetDR0, METH_VARARGS, (char *)"Register_SetDR0(duint value) -> bool"},
	 { (char *)"Register_GetDR1", _wrap_Register_GetDR1, METH_VARARGS, (char *)"Register_GetDR1() -> duint"},
	 { (char *)"Register_SetDR1", _wrap_Register_SetDR1, METH_VARARGS, (char *)"Register_SetDR1(duint value) -> bool"},
	 { (char *)"Register_GetDR2", _wrap_Register_GetDR2, METH_VARARGS, (char *)"Register_GetDR2() -> duint"},
	 { (char *)"Register_SetDR2", _wrap_Register_SetDR2, METH_VARARGS, (char *)"Register_SetDR2(duint value) -> bool"},
	 { (char *)"Register_GetDR3", _wrap_Register_GetDR3, METH_VARARGS, (char *)"Register_GetDR3() -> duint"},
	 { (char *)"Register_SetDR3", _wrap_Register_SetDR3, METH_VARARGS, (char *)"Register_SetDR3(duint value) -> bool"},
	 { (char *)"Register_GetDR6", _wrap_Register_GetDR6, METH_VARARGS, (char *)"Register_GetDR6() -> duint"},
	 { (char *)"Register_SetDR6", _wrap_Register_SetDR6, METH_VARARGS, (char *)"Register_SetDR6(duint value) -> bool"},
	 { (char *)"Register_GetDR7", _wrap_Register_GetDR7, METH_VARARGS, (char *)"Register_GetDR7() -> duint"},
	 { (char *)"Register_SetDR7", _wrap_Register_SetDR7, METH_VARARGS, (char *)"Register_SetDR7(duint value) -> bool"},
	 { (char *)"Register_GetEAX", _wrap_Register_GetEAX, METH_VARARGS, (char *)"Register_GetEAX() -> unsigned int"},
	 { (char *)"Register_SetEAX", _wrap_Register_SetEAX, METH_VARARGS, (char *)"Register_SetEAX(unsigned int value) -> bool"},
	 { (char *)"Register_GetAX", _wrap_Register_GetAX, METH_VARARGS, (char *)"Register_GetAX() -> unsigned short"},
	 { (char *)"Register_SetAX", _wrap_Register_SetAX, METH_VARARGS, (char *)"Register_SetAX(unsigned short value) -> bool"},
	 { (char *)"Register_GetAH", _wrap_Register_GetAH, METH_VARARGS, (char *)"Register_GetAH() -> unsigned char"},
	 { (char *)"Register_SetAH", _wrap_Register_SetAH, METH_VARARGS, (char *)"Register_SetAH(unsigned char value) -> bool"},
	 { (char *)"Register_GetAL", _wrap_Register_GetAL, METH_VARARGS, (char *)"Register_GetAL() -> unsigned char"},
	 { (char *)"Register_SetAL", _wrap_Register_SetAL, METH_VARARGS, (char *)"Register_SetAL(unsigned char value) -> bool"},
	 { (char *)"Register_GetEBX", _wrap_Register_GetEBX, METH_VARARGS, (char *)"Register_GetEBX() -> unsigned int"},
	 { (char *)"Register_SetEBX", _wrap_Register_SetEBX, METH_VARARGS, (char *)"Register_SetEBX(unsigned int value) -> bool"},
	 { (char *)"Register_GetBX", _wrap_Register_GetBX, METH_VARARGS, (char *)"Register_GetBX() -> unsigned short"},
	 { (char *)"Register_SetBX", _wrap_Register_SetBX, METH_VARARGS, (char *)"Register_SetBX(unsigned short value) -> bool"},
	 { (char *)"Register_GetBH", _wrap_Register_GetBH, METH_VARARGS, (char *)"Register_GetBH() -> unsigned char"},
	 { (char *)"Register_SetBH", _wrap_Register_SetBH, METH_VARARGS, (char *)"Register_SetBH(unsigned char value) -> bool"},
	 { (char *)"Register_GetBL", _wrap_Register_GetBL, METH_VARARGS, (char *)"Register_GetBL() -> unsigned char"},
	 { (char *)"Register_SetBL", _wrap_Register_SetBL, METH_VARARGS, (char *)"Register_SetBL(unsigned char value) -> bool"},
	 { (char *)"Register_GetECX", _wrap_Register_GetECX, METH_VARARGS, (char *)"Register_GetECX() -> unsigned int"},
	 { (char *)"Register_SetECX", _wrap_Register_SetECX, METH_VARARGS, (char *)"Register_SetECX(unsigned int value) -> bool"},
	 { (char *)"Register_GetCX", _wrap_Register_GetCX, METH_VARARGS, (char *)"Register_GetCX() -> unsigned short"},
	 { (char *)"Register_SetCX", _wrap_Register_SetCX, METH_VARARGS, (char *)"Register_SetCX(unsigned short value) -> bool"},
	 { (char *)"Register_GetCH", _wrap_Register_GetCH, METH_VARARGS, (char *)"Register_GetCH() -> unsigned char"},
	 { (char *)"Register_SetCH", _wrap_Register_SetCH, METH_VARARGS, (char *)"Register_SetCH(unsigned char value) -> bool"},
	 { (char *)"Register_GetCL", _wrap_Register_GetCL, METH_VARARGS, (char *)"Register_GetCL() -> unsigned char"},
	 { (char *)"Register_SetCL", _wrap_Register_SetCL, METH_VARARGS, (char *)"Register_SetCL(unsigned char value) -> bool"},
	 { (char *)"Register_GetEDX", _wrap_Register_GetEDX, METH_VARARGS, (char *)"Register_GetEDX() -> unsigned int"},
	 { (char *)"Register_SetEDX", _wrap_Register_SetEDX, METH_VARARGS, (char *)"Register_SetEDX(unsigned int value) -> bool"},
	 { (char *)"Register_GetDX", _wrap_Register_GetDX, METH_VARARGS, (char *)"Register_GetDX() -> unsigned short"},
	 { (char *)"Register_SetDX", _wrap_Register_SetDX, METH_VARARGS, (char *)"Register_SetDX(unsigned short value) -> bool"},
	 { (char *)"Register_GetDH", _wrap_Register_GetDH, METH_VARARGS, (char *)"Register_GetDH() -> unsigned char"},
	 { (char *)"Register_SetDH", _wrap_Register_SetDH, METH_VARARGS, (char *)"Register_SetDH(unsigned char value) -> bool"},
	 { (char *)"Register_GetDL", _wrap_Register_GetDL, METH_VARARGS, (char *)"Register_GetDL() -> unsigned char"},
	 { (char *)"Register_SetDL", _wrap_Register_SetDL, METH_VARARGS, (char *)"Register_SetDL(unsigned char value) -> bool"},
	 { (char *)"Register_GetEDI", _wrap_Register_GetEDI, METH_VARARGS, (char *)"Register_GetEDI() -> unsigned int"},
	 { (char *)"Register_SetEDI", _wrap_Register_SetEDI, METH_VARARGS, (char *)"Register_SetEDI(unsigned int value) -> bool"},
	 { (char *)"Register_GetDI", _wrap_Register_GetDI, METH_VARARGS, (char *)"Register_GetDI() -> unsigned short"},
	 { (char *)"Register_SetDI", _wrap_Register_SetDI, METH_VARARGS, (char *)"Register_SetDI(unsigned short value) -> bool"},
	 { (char *)"Register_GetESI", _wrap_Register_GetESI, METH_VARARGS, (char *)"Register_GetESI() -> unsigned int"},
	 { (char *)"Register_SetESI", _wrap_Register_SetESI, METH_VARARGS, (char *)"Register_SetESI(unsigned int value) -> bool"},
	 { (char *)"Register_GetSI", _wrap_Register_GetSI, METH_VARARGS, (char *)"Register_GetSI() -> unsigned short"},
	 { (char *)"Register_SetSI", _wrap_Register_SetSI, METH_VARARGS, (char *)"Register_SetSI(unsigned short value) -> bool"},
	 { (char *)"Register_GetEBP", _wrap_Register_GetEBP, METH_VARARGS, (char *)"Register_GetEBP() -> unsigned int"},
	 { (char *)"Register_SetEBP", _wrap_Register_SetEBP, METH_VARARGS, (char *)"Register_SetEBP(unsigned int value) -> bool"},
	 { (char *)"Register_GetBP", _wrap_Register_GetBP, METH_VARARGS, (char *)"Register_GetBP() -> unsigned short"},
	 { (char *)"Register_SetBP", _wrap_Register_SetBP, METH_VARARGS, (char *)"Register_SetBP(unsigned short value) -> bool"},
	 { (char *)"Register_GetESP", _wrap_Register_GetESP, METH_VARARGS, (char *)"Register_GetESP() -> unsigned int"},
	 { (char *)"Register_SetESP", _wrap_Register_SetESP, METH_VARARGS, (char *)"Register_SetESP(unsigned int value) -> bool"},
	 { (char *)"Register_GetSP", _wrap_Register_GetSP, METH_VARARGS, (char *)"Register_GetSP() -> unsigned short"},
	 { (char *)"Register_SetSP", _wrap_Register_SetSP, METH_VARARGS, (char *)"Register_SetSP(unsigned short value) -> bool"},
	 { (char *)"Register_GetEIP", _wrap_Register_GetEIP, METH_VARARGS, (char *)"Register_GetEIP() -> unsigned int"},
	 { (char *)"Register_SetEIP", _wrap_Register_SetEIP, METH_VARARGS, (char *)"Register_SetEIP(unsigned int value) -> bool"},
	 { (char *)"Register_GetRAX", _wrap_Register_GetRAX, METH_VARARGS, (char *)"Register_GetRAX() -> unsigned long long"},
	 { (char *)"Register_SetRAX", _wrap_Register_SetRAX, METH_VARARGS, (char *)"Register_SetRAX(unsigned long long value) -> bool"},
	 { (char *)"Register_GetRBX", _wrap_Register_GetRBX, METH_VARARGS, (char *)"Register_GetRBX() -> unsigned long long"},
	 { (char *)"Register_SetRBX", _wrap_Register_SetRBX, METH_VARARGS, (char *)"Register_SetRBX(unsigned long long value) -> bool"},
	 { (char *)"Register_GetRCX", _wrap_Register_GetRCX, METH_VARARGS, (char *)"Register_GetRCX() -> unsigned long long"},
	 { (char *)"Register_SetRCX", _wrap_Register_SetRCX, METH_VARARGS, (char *)"Register_SetRCX(unsigned long long value) -> bool"},
	 { (char *)"Register_GetRDX", _wrap_Register_GetRDX, METH_VARARGS, (char *)"Register_GetRDX() -> unsigned long long"},
	 { (char *)"Register_SetRDX", _wrap_Register_SetRDX, METH_VARARGS, (char *)"Register_SetRDX(unsigned long long value) -> bool"},
	 { (char *)"Register_GetRSI", _wrap_Register_GetRSI, METH_VARARGS, (char *)"Register_GetRSI() -> unsigned long long"},
	 { (char *)"Register_SetRSI", _wrap_Register_SetRSI, METH_VARARGS, (char *)"Register_SetRSI(unsigned long long value) -> bool"},
	 { (char *)"Register_GetSIL", _wrap_Register_GetSIL, METH_VARARGS, (char *)"Register_GetSIL() -> unsigned char"},
	 { (char *)"Register_SetSIL", _wrap_Register_SetSIL, METH_VARARGS, (char *)"Register_SetSIL(unsigned char value) -> bool"},
	 { (char *)"Register_GetRDI", _wrap_Register_GetRDI, METH_VARARGS, (char *)"Register_GetRDI() -> unsigned long long"},
	 { (char *)"Register_SetRDI", _wrap_Register_SetRDI, METH_VARARGS, (char *)"Register_SetRDI(unsigned long long value) -> bool"},
	 { (char *)"Register_GetDIL", _wrap_Register_GetDIL, METH_VARARGS, (char *)"Register_GetDIL() -> unsigned char"},
	 { (char *)"Register_SetDIL", _wrap_Register_SetDIL, METH_VARARGS, (char *)"Register_SetDIL(unsigned char value) -> bool"},
	 { (char *)"Register_GetRBP", _wrap_Register_GetRBP, METH_VARARGS, (char *)"Register_GetRBP() -> unsigned long long"},
	 { (char *)"Register_SetRBP", _wrap_Register_SetRBP, METH_VARARGS, (char *)"Register_SetRBP(unsigned long long value) -> bool"},
	 { (char *)"Register_GetBPL", _wrap_Register_GetBPL, METH_VARARGS, (char *)"Register_GetBPL() -> unsigned char"},
	 { (char *)"Register_SetBPL", _wrap_Register_SetBPL, METH_VARARGS, (char *)"Register_SetBPL(unsigned char value) -> bool"},
	 { (char *)"Register_GetRSP", _wrap_Register_GetRSP, METH_VARARGS, (char *)"Register_GetRSP() -> unsigned long long"},
	 { (char *)"Register_SetRSP", _wrap_Register_SetRSP, METH_VARARGS, (char *)"Register_SetRSP(unsigned long long value) -> bool"},
	 { (char *)"Register_GetSPL", _wrap_Register_GetSPL, METH_VARARGS, (char *)"Register_GetSPL() -> unsigned char"},
	 { (char *)"Register_SetSPL", _wrap_Register_SetSPL, METH_VARARGS, (char *)"Register_SetSPL(unsigned char value) -> bool"},
	 { (char *)"Register_GetRIP", _wrap_Register_GetRIP, METH_VARARGS, (char *)"Register_GetRIP() -> unsigned long long"},
	 { (char *)"Register_SetRIP", _wrap_Register_SetRIP, METH_VARARGS, (char *)"Register_SetRIP(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR8", _wrap_Register_GetR8, METH_VARARGS, (char *)"Register_GetR8() -> unsigned long long"},
	 { (char *)"Register_SetR8", _wrap_Register_SetR8, METH_VARARGS, (char *)"Register_SetR8(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR8D", _wrap_Register_GetR8D, METH_VARARGS, (char *)"Register_GetR8D() -> unsigned int"},
	 { (char *)"Register_SetR8D", _wrap_Register_SetR8D, METH_VARARGS, (char *)"Register_SetR8D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR8W", _wrap_Register_GetR8W, METH_VARARGS, (char *)"Register_GetR8W() -> unsigned short"},
	 { (char *)"Register_SetR8W", _wrap_Register_SetR8W, METH_VARARGS, (char *)"Register_SetR8W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR8B", _wrap_Register_GetR8B, METH_VARARGS, (char *)"Register_GetR8B() -> unsigned char"},
	 { (char *)"Register_SetR8B", _wrap_Register_SetR8B, METH_VARARGS, (char *)"Register_SetR8B(unsigned char value) -> bool"},
	 { (char *)"Register_GetR9", _wrap_Register_GetR9, METH_VARARGS, (char *)"Register_GetR9() -> unsigned long long"},
	 { (char *)"Register_SetR9", _wrap_Register_SetR9, METH_VARARGS, (char *)"Register_SetR9(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR9D", _wrap_Register_GetR9D, METH_VARARGS, (char *)"Register_GetR9D() -> unsigned int"},
	 { (char *)"Register_SetR9D", _wrap_Register_SetR9D, METH_VARARGS, (char *)"Register_SetR9D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR9W", _wrap_Register_GetR9W, METH_VARARGS, (char *)"Register_GetR9W() -> unsigned short"},
	 { (char *)"Register_SetR9W", _wrap_Register_SetR9W, METH_VARARGS, (char *)"Register_SetR9W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR9B", _wrap_Register_GetR9B, METH_VARARGS, (char *)"Register_GetR9B() -> unsigned char"},
	 { (char *)"Register_SetR9B", _wrap_Register_SetR9B, METH_VARARGS, (char *)"Register_SetR9B(unsigned char value) -> bool"},
	 { (char *)"Register_GetR10", _wrap_Register_GetR10, METH_VARARGS, (char *)"Register_GetR10() -> unsigned long long"},
	 { (char *)"Register_SetR10", _wrap_Register_SetR10, METH_VARARGS, (char *)"Register_SetR10(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR10D", _wrap_Register_GetR10D, METH_VARARGS, (char *)"Register_GetR10D() -> unsigned int"},
	 { (char *)"Register_SetR10D", _wrap_Register_SetR10D, METH_VARARGS, (char *)"Register_SetR10D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR10W", _wrap_Register_GetR10W, METH_VARARGS, (char *)"Register_GetR10W() -> unsigned short"},
	 { (char *)"Register_SetR10W", _wrap_Register_SetR10W, METH_VARARGS, (char *)"Register_SetR10W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR10B", _wrap_Register_GetR10B, METH_VARARGS, (char *)"Register_GetR10B() -> unsigned char"},
	 { (char *)"Register_SetR10B", _wrap_Register_SetR10B, METH_VARARGS, (char *)"Register_SetR10B(unsigned char value) -> bool"},
	 { (char *)"Register_GetR11", _wrap_Register_GetR11, METH_VARARGS, (char *)"Register_GetR11() -> unsigned long long"},
	 { (char *)"Register_SetR11", _wrap_Register_SetR11, METH_VARARGS, (char *)"Register_SetR11(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR11D", _wrap_Register_GetR11D, METH_VARARGS, (char *)"Register_GetR11D() -> unsigned int"},
	 { (char *)"Register_SetR11D", _wrap_Register_SetR11D, METH_VARARGS, (char *)"Register_SetR11D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR11W", _wrap_Register_GetR11W, METH_VARARGS, (char *)"Register_GetR11W() -> unsigned short"},
	 { (char *)"Register_SetR11W", _wrap_Register_SetR11W, METH_VARARGS, (char *)"Register_SetR11W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR11B", _wrap_Register_GetR11B, METH_VARARGS, (char *)"Register_GetR11B() -> unsigned char"},
	 { (char *)"Register_SetR11B", _wrap_Register_SetR11B, METH_VARARGS, (char *)"Register_SetR11B(unsigned char value) -> bool"},
	 { (char *)"Register_GetR12", _wrap_Register_GetR12, METH_VARARGS, (char *)"Register_GetR12() -> unsigned long long"},
	 { (char *)"Register_SetR12", _wrap_Register_SetR12, METH_VARARGS, (char *)"Register_SetR12(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR12D", _wrap_Register_GetR12D, METH_VARARGS, (char *)"Register_GetR12D() -> unsigned int"},
	 { (char *)"Register_SetR12D", _wrap_Register_SetR12D, METH_VARARGS, (char *)"Register_SetR12D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR12W", _wrap_Register_GetR12W, METH_VARARGS, (char *)"Register_GetR12W() -> unsigned short"},
	 { (char *)"Register_SetR12W", _wrap_Register_SetR12W, METH_VARARGS, (char *)"Register_SetR12W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR12B", _wrap_Register_GetR12B, METH_VARARGS, (char *)"Register_GetR12B() -> unsigned char"},
	 { (char *)"Register_SetR12B", _wrap_Register_SetR12B, METH_VARARGS, (char *)"Register_SetR12B(unsigned char value) -> bool"},
	 { (char *)"Register_GetR13", _wrap_Register_GetR13, METH_VARARGS, (char *)"Register_GetR13() -> unsigned long long"},
	 { (char *)"Register_SetR13", _wrap_Register_SetR13, METH_VARARGS, (char *)"Register_SetR13(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR13D", _wrap_Register_GetR13D, METH_VARARGS, (char *)"Register_GetR13D() -> unsigned int"},
	 { (char *)"Register_SetR13D", _wrap_Register_SetR13D, METH_VARARGS, (char *)"Register_SetR13D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR13W", _wrap_Register_GetR13W, METH_VARARGS, (char *)"Register_GetR13W() -> unsigned short"},
	 { (char *)"Register_SetR13W", _wrap_Register_SetR13W, METH_VARARGS, (char *)"Register_SetR13W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR13B", _wrap_Register_GetR13B, METH_VARARGS, (char *)"Register_GetR13B() -> unsigned char"},
	 { (char *)"Register_SetR13B", _wrap_Register_SetR13B, METH_VARARGS, (char *)"Register_SetR13B(unsigned char value) -> bool"},
	 { (char *)"Register_GetR14", _wrap_Register_GetR14, METH_VARARGS, (char *)"Register_GetR14() -> unsigned long long"},
	 { (char *)"Register_SetR14", _wrap_Register_SetR14, METH_VARARGS, (char *)"Register_SetR14(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR14D", _wrap_Register_GetR14D, METH_VARARGS, (char *)"Register_GetR14D() -> unsigned int"},
	 { (char *)"Register_SetR14D", _wrap_Register_SetR14D, METH_VARARGS, (char *)"Register_SetR14D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR14W", _wrap_Register_GetR14W, METH_VARARGS, (char *)"Register_GetR14W() -> unsigned short"},
	 { (char *)"Register_SetR14W", _wrap_Register_SetR14W, METH_VARARGS, (char *)"Register_SetR14W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR14B", _wrap_Register_GetR14B, METH_VARARGS, (char *)"Register_GetR14B() -> unsigned char"},
	 { (char *)"Register_SetR14B", _wrap_Register_SetR14B, METH_VARARGS, (char *)"Register_SetR14B(unsigned char value) -> bool"},
	 { (char *)"Register_GetR15", _wrap_Register_GetR15, METH_VARARGS, (char *)"Register_GetR15() -> unsigned long long"},
	 { (char *)"Register_SetR15", _wrap_Register_SetR15, METH_VARARGS, (char *)"Register_SetR15(unsigned long long value) -> bool"},
	 { (char *)"Register_GetR15D", _wrap_Register_GetR15D, METH_VARARGS, (char *)"Register_GetR15D() -> unsigned int"},
	 { (char *)"Register_SetR15D", _wrap_Register_SetR15D, METH_VARARGS, (char *)"Register_SetR15D(unsigned int value) -> bool"},
	 { (char *)"Register_GetR15W", _wrap_Register_GetR15W, METH_VARARGS, (char *)"Register_GetR15W() -> unsigned short"},
	 { (char *)"Register_SetR15W", _wrap_Register_SetR15W, METH_VARARGS, (char *)"Register_SetR15W(unsigned short value) -> bool"},
	 { (char *)"Register_GetR15B", _wrap_Register_GetR15B, METH_VARARGS, (char *)"Register_GetR15B() -> unsigned char"},
	 { (char *)"Register_SetR15B", _wrap_Register_SetR15B, METH_VARARGS, (char *)"Register_SetR15B(unsigned char value) -> bool"},
	 { (char *)"Register_GetCAX", _wrap_Register_GetCAX, METH_VARARGS, (char *)"Register_GetCAX() -> duint"},
	 { (char *)"Register_SetCAX", _wrap_Register_SetCAX, METH_VARARGS, (char *)"Register_SetCAX(duint value) -> bool"},
	 { (char *)"Register_GetCBX", _wrap_Register_GetCBX, METH_VARARGS, (char *)"Register_GetCBX() -> duint"},
	 { (char *)"Register_SetCBX", _wrap_Register_SetCBX, METH_VARARGS, (char *)"Register_SetCBX(duint value) -> bool"},
	 { (char *)"Register_GetCCX", _wrap_Register_GetCCX, METH_VARARGS, (char *)"Register_GetCCX() -> duint"},
	 { (char *)"Register_SetCCX", _wrap_Register_SetCCX, METH_VARARGS, (char *)"Register_SetCCX(duint value) -> bool"},
	 { (char *)"Register_GetCDX", _wrap_Register_GetCDX, METH_VARARGS, (char *)"Register_GetCDX() -> duint"},
	 { (char *)"Register_SetCDX", _wrap_Register_SetCDX, METH_VARARGS, (char *)"Register_SetCDX(duint value) -> bool"},
	 { (char *)"Register_GetCDI", _wrap_Register_GetCDI, METH_VARARGS, (char *)"Register_GetCDI() -> duint"},
	 { (char *)"Register_SetCDI", _wrap_Register_SetCDI, METH_VARARGS, (char *)"Register_SetCDI(duint value) -> bool"},
	 { (char *)"Register_GetCSI", _wrap_Register_GetCSI, METH_VARARGS, (char *)"Register_GetCSI() -> duint"},
	 { (char *)"Register_SetCSI", _wrap_Register_SetCSI, METH_VARARGS, (char *)"Register_SetCSI(duint value) -> bool"},
	 { (char *)"Register_GetCBP", _wrap_Register_GetCBP, METH_VARARGS, (char *)"Register_GetCBP() -> duint"},
	 { (char *)"Register_SetCBP", _wrap_Register_SetCBP, METH_VARARGS, (char *)"Register_SetCBP(duint value) -> bool"},
	 { (char *)"Register_GetCSP", _wrap_Register_GetCSP, METH_VARARGS, (char *)"Register_GetCSP() -> duint"},
	 { (char *)"Register_SetCSP", _wrap_Register_SetCSP, METH_VARARGS, (char *)"Register_SetCSP(duint value) -> bool"},
	 { (char *)"Register_GetCIP", _wrap_Register_GetCIP, METH_VARARGS, (char *)"Register_GetCIP() -> duint"},
	 { (char *)"Register_SetCIP", _wrap_Register_SetCIP, METH_VARARGS, (char *)"Register_SetCIP(duint value) -> bool"},
	 { (char *)"Register_GetCFLAGS", _wrap_Register_GetCFLAGS, METH_VARARGS, (char *)"Register_GetCFLAGS() -> duint"},
	 { (char *)"Register_SetCFLAGS", _wrap_Register_SetCFLAGS, METH_VARARGS, (char *)"Register_SetCFLAGS(duint value) -> bool"},
	 { (char *)"Stack_Pop", _wrap_Stack_Pop, METH_VARARGS, (char *)"Stack_Pop() -> duint"},
	 { (char *)"Stack_Push", _wrap_Stack_Push, METH_VARARGS, (char *)"Stack_Push(duint value) -> duint"},
	 { (char *)"Stack_Peek", _wrap_Stack_Peek, METH_VARARGS, (char *)"\n"
		"Stack_Peek(int offset=0) -> duint\n"
		"Stack_Peek() -> duint\n"
		""},
	 { (char *)"SymbolInfo_mod_set", _wrap_SymbolInfo_mod_set, METH_VARARGS, (char *)"SymbolInfo_mod_set(SymbolInfo self, char [256] mod)"},
	 { (char *)"SymbolInfo_mod_get", _wrap_SymbolInfo_mod_get, METH_VARARGS, (char *)"SymbolInfo_mod_get(SymbolInfo self) -> char [256]"},
	 { (char *)"SymbolInfo_rva_set", _wrap_SymbolInfo_rva_set, METH_VARARGS, (char *)"SymbolInfo_rva_set(SymbolInfo self, duint rva)"},
	 { (char *)"SymbolInfo_rva_get", _wrap_SymbolInfo_rva_get, METH_VARARGS, (char *)"SymbolInfo_rva_get(SymbolInfo self) -> duint"},
	 { (char *)"SymbolInfo_name_set", _wrap_SymbolInfo_name_set, METH_VARARGS, (char *)"SymbolInfo_name_set(SymbolInfo self, char [256] name)"},
	 { (char *)"SymbolInfo_name_get", _wrap_SymbolInfo_name_get, METH_VARARGS, (char *)"SymbolInfo_name_get(SymbolInfo self) -> char [256]"},
	 { (char *)"SymbolInfo_manual_set", _wrap_SymbolInfo_manual_set, METH_VARARGS, (char *)"SymbolInfo_manual_set(SymbolInfo self, bool manual)"},
	 { (char *)"SymbolInfo_manual_get", _wrap_SymbolInfo_manual_get, METH_VARARGS, (char *)"SymbolInfo_manual_get(SymbolInfo self) -> bool"},
	 { (char *)"SymbolInfo_type_set", _wrap_SymbolInfo_type_set, METH_VARARGS, (char *)"SymbolInfo_type_set(SymbolInfo self, Script::Symbol::SymbolType type)"},
	 { (char *)"SymbolInfo_type_get", _wrap_SymbolInfo_type_get, METH_VARARGS, (char *)"SymbolInfo_type_get(SymbolInfo self) -> Script::Symbol::SymbolType"},
	 { (char *)"new_SymbolInfo", _wrap_new_SymbolInfo, METH_VARARGS, (char *)"new_SymbolInfo() -> SymbolInfo"},
	 { (char *)"delete_SymbolInfo", _wrap_delete_SymbolInfo, METH_VARARGS, (char *)"delete_SymbolInfo(SymbolInfo self)"},
	 { (char *)"SymbolInfo_swigregister", SymbolInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"Symbol_GetList", _wrap_Symbol_GetList, METH_VARARGS, (char *)"Symbol_GetList(ListInfo list) -> bool"},
	 { (char *)"new_ArgumentInfoArray", _wrap_new_ArgumentInfoArray, METH_VARARGS, (char *)"new_ArgumentInfoArray(size_t nelements) -> ArgumentInfoArray"},
	 { (char *)"delete_ArgumentInfoArray", _wrap_delete_ArgumentInfoArray, METH_VARARGS, (char *)"delete_ArgumentInfoArray(ArgumentInfoArray self)"},
	 { (char *)"ArgumentInfoArray___getitem__", _wrap_ArgumentInfoArray___getitem__, METH_VARARGS, (char *)"ArgumentInfoArray___getitem__(ArgumentInfoArray self, size_t index) -> ArgumentInfo"},
	 { (char *)"ArgumentInfoArray___setitem__", _wrap_ArgumentInfoArray___setitem__, METH_VARARGS, (char *)"ArgumentInfoArray___setitem__(ArgumentInfoArray self, size_t index, ArgumentInfo value)"},
	 { (char *)"ArgumentInfoArray_cast", _wrap_ArgumentInfoArray_cast, METH_VARARGS, (char *)"ArgumentInfoArray_cast(ArgumentInfoArray self) -> ArgumentInfo"},
	 { (char *)"ArgumentInfoArray_frompointer", _wrap_ArgumentInfoArray_frompointer, METH_VARARGS, (char *)"ArgumentInfoArray_frompointer(ArgumentInfo t) -> ArgumentInfoArray"},
	 { (char *)"ArgumentInfoArray_swigregister", ArgumentInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BookmarkInfoArray", _wrap_new_BookmarkInfoArray, METH_VARARGS, (char *)"new_BookmarkInfoArray(size_t nelements) -> BookmarkInfoArray"},
	 { (char *)"delete_BookmarkInfoArray", _wrap_delete_BookmarkInfoArray, METH_VARARGS, (char *)"delete_BookmarkInfoArray(BookmarkInfoArray self)"},
	 { (char *)"BookmarkInfoArray___getitem__", _wrap_BookmarkInfoArray___getitem__, METH_VARARGS, (char *)"BookmarkInfoArray___getitem__(BookmarkInfoArray self, size_t index) -> BookmarkInfo"},
	 { (char *)"BookmarkInfoArray___setitem__", _wrap_BookmarkInfoArray___setitem__, METH_VARARGS, (char *)"BookmarkInfoArray___setitem__(BookmarkInfoArray self, size_t index, BookmarkInfo value)"},
	 { (char *)"BookmarkInfoArray_cast", _wrap_BookmarkInfoArray_cast, METH_VARARGS, (char *)"BookmarkInfoArray_cast(BookmarkInfoArray self) -> BookmarkInfo"},
	 { (char *)"BookmarkInfoArray_frompointer", _wrap_BookmarkInfoArray_frompointer, METH_VARARGS, (char *)"BookmarkInfoArray_frompointer(BookmarkInfo t) -> BookmarkInfoArray"},
	 { (char *)"BookmarkInfoArray_swigregister", BookmarkInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_CommentInfoArray", _wrap_new_CommentInfoArray, METH_VARARGS, (char *)"new_CommentInfoArray(size_t nelements) -> CommentInfoArray"},
	 { (char *)"delete_CommentInfoArray", _wrap_delete_CommentInfoArray, METH_VARARGS, (char *)"delete_CommentInfoArray(CommentInfoArray self)"},
	 { (char *)"CommentInfoArray___getitem__", _wrap_CommentInfoArray___getitem__, METH_VARARGS, (char *)"CommentInfoArray___getitem__(CommentInfoArray self, size_t index) -> CommentInfo"},
	 { (char *)"CommentInfoArray___setitem__", _wrap_CommentInfoArray___setitem__, METH_VARARGS, (char *)"CommentInfoArray___setitem__(CommentInfoArray self, size_t index, CommentInfo value)"},
	 { (char *)"CommentInfoArray_cast", _wrap_CommentInfoArray_cast, METH_VARARGS, (char *)"CommentInfoArray_cast(CommentInfoArray self) -> CommentInfo"},
	 { (char *)"CommentInfoArray_frompointer", _wrap_CommentInfoArray_frompointer, METH_VARARGS, (char *)"CommentInfoArray_frompointer(CommentInfo t) -> CommentInfoArray"},
	 { (char *)"CommentInfoArray_swigregister", CommentInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_FunctionInfoArray", _wrap_new_FunctionInfoArray, METH_VARARGS, (char *)"new_FunctionInfoArray(size_t nelements) -> FunctionInfoArray"},
	 { (char *)"delete_FunctionInfoArray", _wrap_delete_FunctionInfoArray, METH_VARARGS, (char *)"delete_FunctionInfoArray(FunctionInfoArray self)"},
	 { (char *)"FunctionInfoArray___getitem__", _wrap_FunctionInfoArray___getitem__, METH_VARARGS, (char *)"FunctionInfoArray___getitem__(FunctionInfoArray self, size_t index) -> FunctionInfo"},
	 { (char *)"FunctionInfoArray___setitem__", _wrap_FunctionInfoArray___setitem__, METH_VARARGS, (char *)"FunctionInfoArray___setitem__(FunctionInfoArray self, size_t index, FunctionInfo value)"},
	 { (char *)"FunctionInfoArray_cast", _wrap_FunctionInfoArray_cast, METH_VARARGS, (char *)"FunctionInfoArray_cast(FunctionInfoArray self) -> FunctionInfo"},
	 { (char *)"FunctionInfoArray_frompointer", _wrap_FunctionInfoArray_frompointer, METH_VARARGS, (char *)"FunctionInfoArray_frompointer(FunctionInfo t) -> FunctionInfoArray"},
	 { (char *)"FunctionInfoArray_swigregister", FunctionInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LabelInfoArray", _wrap_new_LabelInfoArray, METH_VARARGS, (char *)"new_LabelInfoArray(size_t nelements) -> LabelInfoArray"},
	 { (char *)"delete_LabelInfoArray", _wrap_delete_LabelInfoArray, METH_VARARGS, (char *)"delete_LabelInfoArray(LabelInfoArray self)"},
	 { (char *)"LabelInfoArray___getitem__", _wrap_LabelInfoArray___getitem__, METH_VARARGS, (char *)"LabelInfoArray___getitem__(LabelInfoArray self, size_t index) -> LabelInfo"},
	 { (char *)"LabelInfoArray___setitem__", _wrap_LabelInfoArray___setitem__, METH_VARARGS, (char *)"LabelInfoArray___setitem__(LabelInfoArray self, size_t index, LabelInfo value)"},
	 { (char *)"LabelInfoArray_cast", _wrap_LabelInfoArray_cast, METH_VARARGS, (char *)"LabelInfoArray_cast(LabelInfoArray self) -> LabelInfo"},
	 { (char *)"LabelInfoArray_frompointer", _wrap_LabelInfoArray_frompointer, METH_VARARGS, (char *)"LabelInfoArray_frompointer(LabelInfo t) -> LabelInfoArray"},
	 { (char *)"LabelInfoArray_swigregister", LabelInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ModuleInfoArray", _wrap_new_ModuleInfoArray, METH_VARARGS, (char *)"new_ModuleInfoArray(size_t nelements) -> ModuleInfoArray"},
	 { (char *)"delete_ModuleInfoArray", _wrap_delete_ModuleInfoArray, METH_VARARGS, (char *)"delete_ModuleInfoArray(ModuleInfoArray self)"},
	 { (char *)"ModuleInfoArray___getitem__", _wrap_ModuleInfoArray___getitem__, METH_VARARGS, (char *)"ModuleInfoArray___getitem__(ModuleInfoArray self, size_t index) -> ModuleInfo"},
	 { (char *)"ModuleInfoArray___setitem__", _wrap_ModuleInfoArray___setitem__, METH_VARARGS, (char *)"ModuleInfoArray___setitem__(ModuleInfoArray self, size_t index, ModuleInfo value)"},
	 { (char *)"ModuleInfoArray_cast", _wrap_ModuleInfoArray_cast, METH_VARARGS, (char *)"ModuleInfoArray_cast(ModuleInfoArray self) -> ModuleInfo"},
	 { (char *)"ModuleInfoArray_frompointer", _wrap_ModuleInfoArray_frompointer, METH_VARARGS, (char *)"ModuleInfoArray_frompointer(ModuleInfo t) -> ModuleInfoArray"},
	 { (char *)"ModuleInfoArray_swigregister", ModuleInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ModuleSectionInfoArray", _wrap_new_ModuleSectionInfoArray, METH_VARARGS, (char *)"new_ModuleSectionInfoArray(size_t nelements) -> ModuleSectionInfoArray"},
	 { (char *)"delete_ModuleSectionInfoArray", _wrap_delete_ModuleSectionInfoArray, METH_VARARGS, (char *)"delete_ModuleSectionInfoArray(ModuleSectionInfoArray self)"},
	 { (char *)"ModuleSectionInfoArray___getitem__", _wrap_ModuleSectionInfoArray___getitem__, METH_VARARGS, (char *)"ModuleSectionInfoArray___getitem__(ModuleSectionInfoArray self, size_t index) -> ModuleSectionInfo"},
	 { (char *)"ModuleSectionInfoArray___setitem__", _wrap_ModuleSectionInfoArray___setitem__, METH_VARARGS, (char *)"ModuleSectionInfoArray___setitem__(ModuleSectionInfoArray self, size_t index, ModuleSectionInfo value)"},
	 { (char *)"ModuleSectionInfoArray_cast", _wrap_ModuleSectionInfoArray_cast, METH_VARARGS, (char *)"ModuleSectionInfoArray_cast(ModuleSectionInfoArray self) -> ModuleSectionInfo"},
	 { (char *)"ModuleSectionInfoArray_frompointer", _wrap_ModuleSectionInfoArray_frompointer, METH_VARARGS, (char *)"ModuleSectionInfoArray_frompointer(ModuleSectionInfo t) -> ModuleSectionInfoArray"},
	 { (char *)"ModuleSectionInfoArray_swigregister", ModuleSectionInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_SymbolInfoArray", _wrap_new_SymbolInfoArray, METH_VARARGS, (char *)"new_SymbolInfoArray(size_t nelements) -> SymbolInfoArray"},
	 { (char *)"delete_SymbolInfoArray", _wrap_delete_SymbolInfoArray, METH_VARARGS, (char *)"delete_SymbolInfoArray(SymbolInfoArray self)"},
	 { (char *)"SymbolInfoArray___getitem__", _wrap_SymbolInfoArray___getitem__, METH_VARARGS, (char *)"SymbolInfoArray___getitem__(SymbolInfoArray self, size_t index) -> SymbolInfo"},
	 { (char *)"SymbolInfoArray___setitem__", _wrap_SymbolInfoArray___setitem__, METH_VARARGS, (char *)"SymbolInfoArray___setitem__(SymbolInfoArray self, size_t index, SymbolInfo value)"},
	 { (char *)"SymbolInfoArray_cast", _wrap_SymbolInfoArray_cast, METH_VARARGS, (char *)"SymbolInfoArray_cast(SymbolInfoArray self) -> SymbolInfo"},
	 { (char *)"SymbolInfoArray_frompointer", _wrap_SymbolInfoArray_frompointer, METH_VARARGS, (char *)"SymbolInfoArray_frompointer(SymbolInfo t) -> SymbolInfoArray"},
	 { (char *)"SymbolInfoArray_swigregister", SymbolInfoArray_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_intp", _wrap_new_intp, METH_VARARGS, (char *)"new_intp() -> int *"},
	 { (char *)"copy_intp", _wrap_copy_intp, METH_VARARGS, (char *)"copy_intp(int value) -> int *"},
	 { (char *)"delete_intp", _wrap_delete_intp, METH_VARARGS, (char *)"delete_intp(int * obj)"},
	 { (char *)"intp_assign", _wrap_intp_assign, METH_VARARGS, (char *)"intp_assign(int * obj, int value)"},
	 { (char *)"intp_value", _wrap_intp_value, METH_VARARGS, (char *)"intp_value(int * obj) -> int"},
	 { (char *)"new_uintp", _wrap_new_uintp, METH_VARARGS, (char *)"new_uintp() -> unsigned int *"},
	 { (char *)"copy_uintp", _wrap_copy_uintp, METH_VARARGS, (char *)"copy_uintp(unsigned int value) -> unsigned int *"},
	 { (char *)"delete_uintp", _wrap_delete_uintp, METH_VARARGS, (char *)"delete_uintp(unsigned int * obj)"},
	 { (char *)"uintp_assign", _wrap_uintp_assign, METH_VARARGS, (char *)"uintp_assign(unsigned int * obj, unsigned int value)"},
	 { (char *)"uintp_value", _wrap_uintp_value, METH_VARARGS, (char *)"uintp_value(unsigned int * obj) -> unsigned int"},
	 { (char *)"new_duintp", _wrap_new_duintp, METH_VARARGS, (char *)"new_duintp() -> duint *"},
	 { (char *)"copy_duintp", _wrap_copy_duintp, METH_VARARGS, (char *)"copy_duintp(duint value) -> duint *"},
	 { (char *)"delete_duintp", _wrap_delete_duintp, METH_VARARGS, (char *)"delete_duintp(duint * obj)"},
	 { (char *)"duintp_assign", _wrap_duintp_assign, METH_VARARGS, (char *)"duintp_assign(duint * obj, duint value)"},
	 { (char *)"duintp_value", _wrap_duintp_value, METH_VARARGS, (char *)"duintp_value(duint * obj) -> duint"},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_ModuleInfoArrayTo_p_Script__Module__ModuleInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Module::ModuleInfo *)  ((ModuleInfoArray *) x));
}
static void *_p_FunctionInfoArrayTo_p_Script__Function__FunctionInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Function::FunctionInfo *)  ((FunctionInfoArray *) x));
}
static void *_p_ModuleSectionInfoArrayTo_p_Script__Module__ModuleSectionInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Module::ModuleSectionInfo *)  ((ModuleSectionInfoArray *) x));
}
static void *_p_LabelInfoArrayTo_p_Script__Label__LabelInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Label::LabelInfo *)  ((LabelInfoArray *) x));
}
static void *_p_SymbolInfoArrayTo_p_Script__Symbol__SymbolInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Symbol::SymbolInfo *)  ((SymbolInfoArray *) x));
}
static void *_p_BookmarkInfoArrayTo_p_Script__Bookmark__BookmarkInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Bookmark::BookmarkInfo *)  ((BookmarkInfoArray *) x));
}
static void *_p_ArgumentInfoArrayTo_p_Script__Argument__ArgumentInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Argument::ArgumentInfo *)  ((ArgumentInfoArray *) x));
}
static void *_p_CommentInfoArrayTo_p_Script__Comment__CommentInfo(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((Script::Comment::CommentInfo *)  ((CommentInfoArray *) x));
}
static void *_p_MEMPAGEArrayTo_p_MEMPAGE(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((MEMPAGE *)  ((MEMPAGEArray *) x));
}
static swig_type_info _swigt__p_ACTIVEVIEW = {"_p_ACTIVEVIEW", "ACTIVEVIEW *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ADDRINFOFLAGS = {"_p_ADDRINFOFLAGS", "enum ADDRINFOFLAGS *|ADDRINFOFLAGS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ARGTYPE = {"_p_ARGTYPE", "enum ARGTYPE *|ARGTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ArgumentInfoArray = {"_p_ArgumentInfoArray", "ArgumentInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BASIC_INSTRUCTION_INFO = {"_p_BASIC_INSTRUCTION_INFO", "BASIC_INSTRUCTION_INFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BPDLLTYPE = {"_p_BPDLLTYPE", "enum BPDLLTYPE *|BPDLLTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BPEXTYPE = {"_p_BPEXTYPE", "enum BPEXTYPE *|BPEXTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BPHWSIZE = {"_p_BPHWSIZE", "enum BPHWSIZE *|BPHWSIZE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BPHWTYPE = {"_p_BPHWTYPE", "enum BPHWTYPE *|BPHWTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BPMAP = {"_p_BPMAP", "BPMAP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BPMEMTYPE = {"_p_BPMEMTYPE", "enum BPMEMTYPE *|BPMEMTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BPXTYPE = {"_p_BPXTYPE", "enum BPXTYPE *|BPXTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BRIDGEBP = {"_p_BRIDGEBP", "BRIDGEBP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BRIDGE_ADDRINFO = {"_p_BRIDGE_ADDRINFO", "BRIDGE_ADDRINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BookmarkInfoArray = {"_p_BookmarkInfoArray", "BookmarkInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BridgeCFGraphList = {"_p_BridgeCFGraphList", "BridgeCFGraphList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CELLINFO = {"_p_CELLINFO", "CELLINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CONSTANTINFO = {"_p_CONSTANTINFO", "CONSTANTINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommentInfoArray = {"_p_CommentInfoArray", "CommentInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGCALLSTACK = {"_p_DBGCALLSTACK", "DBGCALLSTACK *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGCALLSTACKENTRY = {"_p_DBGCALLSTACKENTRY", "DBGCALLSTACKENTRY *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGFUNCTIONS_ = {"_p_DBGFUNCTIONS_", "DBGFUNCTIONS_ *|DBGFUNCTIONS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGMSG = {"_p_DBGMSG", "enum DBGMSG *|DBGMSG *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGPATCHINFO = {"_p_DBGPATCHINFO", "DBGPATCHINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGPROCESSINFO = {"_p_DBGPROCESSINFO", "DBGPROCESSINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGRELOCATIONINFO = {"_p_DBGRELOCATIONINFO", "DBGRELOCATIONINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGSEHCHAIN = {"_p_DBGSEHCHAIN", "DBGSEHCHAIN *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGSEHRECORD = {"_p_DBGSEHRECORD", "DBGSEHRECORD *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DBGSTATE = {"_p_DBGSTATE", "enum DBGSTATE *|DBGSTATE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DISASM_ARG = {"_p_DISASM_ARG", "DISASM_ARG *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DISASM_ARGTYPE = {"_p_DISASM_ARGTYPE", "enum DISASM_ARGTYPE *|DISASM_ARGTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DISASM_INSTR = {"_p_DISASM_INSTR", "DISASM_INSTR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DISASM_INSTRTYPE = {"_p_DISASM_INSTRTYPE", "enum DISASM_INSTRTYPE *|DISASM_INSTRTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ENCODETYPE = {"_p_ENCODETYPE", "enum ENCODETYPE *|ENCODETYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FILETIME = {"_p_FILETIME", "FILETIME *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FLAGS = {"_p_FLAGS", "FLAGS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FUNCTION = {"_p_FUNCTION", "FUNCTION *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FUNCTION_LOOP_INFO = {"_p_FUNCTION_LOOP_INFO", "FUNCTION_LOOP_INFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FUNCTYPE = {"_p_FUNCTYPE", "enum FUNCTYPE *|FUNCTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FunctionInfoArray = {"_p_FunctionInfoArray", "FunctionInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_GUIMSG = {"_p_GUIMSG", "enum GUIMSG *|GUIMSG *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HANDLEINFO = {"_p_HANDLEINFO", "HANDLEINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HEAPINFO = {"_p_HEAPINFO", "HEAPINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ICONDATA = {"_p_ICONDATA", "ICONDATA *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LASTERROR = {"_p_LASTERROR", "LASTERROR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LASTSTATUS = {"_p_LASTSTATUS", "LASTSTATUS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LOOP = {"_p_LOOP", "LOOP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LOOPTYPE = {"_p_LOOPTYPE", "enum LOOPTYPE *|LOOPTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_LabelInfoArray = {"_p_LabelInfoArray", "LabelInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ListInfo = {"_p_ListInfo", "ListInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MEMMAP = {"_p_MEMMAP", "MEMMAP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MEMORY_INFO = {"_p_MEMORY_INFO", "MEMORY_INFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MEMORY_SIZE = {"_p_MEMORY_SIZE", "enum MEMORY_SIZE *|MEMORY_SIZE *|VALUE_SIZE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MEMPAGE = {"_p_MEMPAGE", "MEMPAGE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MEMPAGEArray = {"_p_MEMPAGEArray", "MEMPAGEArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MSG = {"_p_MSG", "MSG *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MXCSRFIELDS = {"_p_MXCSRFIELDS", "MXCSRFIELDS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ModuleInfoArray = {"_p_ModuleInfoArray", "ModuleInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ModuleSectionInfoArray = {"_p_ModuleSectionInfoArray", "ModuleSectionInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RECT = {"_p_RECT", "RECT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_REGDUMP = {"_p_REGDUMP", "REGDUMP *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_REGISTERCONTEXT = {"_p_REGISTERCONTEXT", "REGISTERCONTEXT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SCRIPTBRANCH = {"_p_SCRIPTBRANCH", "SCRIPTBRANCH *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SCRIPTBRANCHTYPE = {"_p_SCRIPTBRANCHTYPE", "enum SCRIPTBRANCHTYPE *|SCRIPTBRANCHTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SCRIPTLINETYPE = {"_p_SCRIPTLINETYPE", "enum SCRIPTLINETYPE *|SCRIPTLINETYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SCRIPTTYPEINFO = {"_p_SCRIPTTYPEINFO", "SCRIPTTYPEINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SEGMENTREG = {"_p_SEGMENTREG", "enum SEGMENTREG *|SEGMENTREG *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SELECTIONDATA = {"_p_SELECTIONDATA", "SELECTIONDATA *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_STACK_COMMENT = {"_p_STACK_COMMENT", "STACK_COMMENT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_STRING_TYPE = {"_p_STRING_TYPE", "enum STRING_TYPE *|STRING_TYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SYMBOLCBINFO = {"_p_SYMBOLCBINFO", "SYMBOLCBINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SYMBOLINFO_ = {"_p_SYMBOLINFO_", "SYMBOLINFO *|SYMBOLINFO_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SYMBOLMODULEINFO = {"_p_SYMBOLMODULEINFO", "SYMBOLMODULEINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SYMBOLPTR_ = {"_p_SYMBOLPTR_", "SYMBOLPTR *|SYMBOLPTR_ *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SYMBOLTYPE = {"_p_SYMBOLTYPE", "enum SYMBOLTYPE *|SYMBOLTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Argument__ArgumentInfo = {"_p_Script__Argument__ArgumentInfo", "Script::Argument::ArgumentInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Bookmark__BookmarkInfo = {"_p_Script__Bookmark__BookmarkInfo", "Script::Bookmark::BookmarkInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Comment__CommentInfo = {"_p_Script__Comment__CommentInfo", "Script::Comment::CommentInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Function__FunctionInfo = {"_p_Script__Function__FunctionInfo", "Script::Function::FunctionInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Label__LabelInfo = {"_p_Script__Label__LabelInfo", "Script::Label::LabelInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Module__ModuleInfo = {"_p_Script__Module__ModuleInfo", "Script::Module::ModuleInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Module__ModuleSectionInfo = {"_p_Script__Module__ModuleSectionInfo", "Script::Module::ModuleSectionInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Script__Symbol__SymbolInfo = {"_p_Script__Symbol__SymbolInfo", "Script::Symbol::SymbolInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_SymbolInfoArray = {"_p_SymbolInfoArray", "SymbolInfoArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TCPCONNECTIONINFO = {"_p_TCPCONNECTIONINFO", "TCPCONNECTIONINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_THREADALLINFO = {"_p_THREADALLINFO", "THREADALLINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_THREADINFO = {"_p_THREADINFO", "THREADINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_THREADLIST = {"_p_THREADLIST", "THREADLIST *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_THREADPRIORITY = {"_p_THREADPRIORITY", "enum THREADPRIORITY *|THREADPRIORITY *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_THREADWAITREASON = {"_p_THREADWAITREASON", "enum THREADWAITREASON *|THREADWAITREASON *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TRACERECORDBYTETYPE = {"_p_TRACERECORDBYTETYPE", "enum TRACERECORDBYTETYPE *|TRACERECORDBYTETYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TRACERECORDTYPE = {"_p_TRACERECORDTYPE", "enum TRACERECORDTYPE *|TRACERECORDTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VALUE_INFO = {"_p_VALUE_INFO", "VALUE_INFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WATCHDOGMODE = {"_p_WATCHDOGMODE", "enum WATCHDOGMODE *|WATCHDOGMODE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WATCHINFO = {"_p_WATCHINFO", "WATCHINFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WATCHVARTYPE = {"_p_WATCHVARTYPE", "enum WATCHVARTYPE *|WATCHVARTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_WINDOW_INFO = {"_p_WINDOW_INFO", "WINDOW_INFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_X87CONTROLWORDFIELDS = {"_p_X87CONTROLWORDFIELDS", "X87CONTROLWORDFIELDS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_X87FPU = {"_p_X87FPU", "X87FPU *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_X87FPUREGISTER = {"_p_X87FPUREGISTER", "X87FPUREGISTER *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_X87STATUSWORDFIELDS = {"_p_X87STATUSWORDFIELDS", "X87STATUSWORDFIELDS *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XREFTYPE = {"_p_XREFTYPE", "enum XREFTYPE *|XREFTYPE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XREF_INFO = {"_p_XREF_INFO", "XREF_INFO *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_XREF_RECORD = {"_p_XREF_RECORD", "XREF_RECORD *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_YMMREGISTER = {"_p_YMMREGISTER", "YMMREGISTER *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__MEMORY_BASIC_INFORMATION = {"_p__MEMORY_BASIC_INFORMATION", "_MEMORY_BASIC_INFORMATION *|MEMORY_BASIC_INFORMATION *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__TYPEDESCRIPTOR = {"_p__TYPEDESCRIPTOR", "_TYPEDESCRIPTOR *|TYPEDESCRIPTOR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__XMMREGISTER = {"_p__XMMREGISTER", "_XMMREGISTER *|XMMREGISTER *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p___int64 = {"_p___int64", "__int64 *|LONGLONG *|LONG64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "CHAR *|TCHAR *|char *|CCHAR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___bool = {"_p_f___bool", "ISPROCESSELEVATED|bool (*)()|ISDEPENABLED", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___p_char = {"_p_f___p_char", "DBGGETDEBUGGEEINITSCRIPT|char *(*)()", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___unsigned_long_long = {"_p_f___unsigned_long_long", "DBGETHASH|unsigned long long (*)()|GETDBGEVENTS", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f___void = {"_p_f___void", "GUICALLBACK|REFRESHMODULELIST|void (*)()|MEMUPDATEMAP", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool = {"_p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool", "GETBRIDGEBP|bool (*)(enum BPXTYPE,unsigned long long,BRIDGEBP *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_DBGCALLSTACK__void = {"_p_f_p_DBGCALLSTACK__void", "void (*)(DBGCALLSTACK *)|GETCALLSTACK", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_DBGCALLSTACK_bool__void = {"_p_f_p_DBGCALLSTACK_bool__void", "GETCALLSTACKEX|void (*)(DBGCALLSTACK *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int = {"_p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int", "int (*)(DBGPATCHINFO *,int,char const *,char *)|PATCHFILE", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_DBGPATCHINFO_p_size_t__bool = {"_p_f_p_DBGPATCHINFO_p_size_t__bool", "bool (*)(DBGPATCHINFO *,size_t *)|PATCHENUM", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_DBGSEHCHAIN__void = {"_p_f_p_DBGSEHCHAIN__void", "void (*)(DBGSEHCHAIN *)|GETSEHCHAIN", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_ListInfo__bool = {"_p_f_p_ListInfo__bool", "HANDLESENUMHEAPS|bool (*)(ListInfo *)|HANDLESENUMWINDOWS|ENUMTCPCONNECTIONS|ENUMHANDLES", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_ListInfo__void = {"_p_f_p_ListInfo__void", "void (*)(ListInfo *)|ENUMCONSTANTS", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_bool__bool = {"_p_f_p_bool__bool", "bool (*)(bool *)|GETJITAUTO", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_char__bool = {"_p_f_p_char__bool", "bool (*)(char *)|GETDEFJIT", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_char_bool__bool = {"_p_f_p_char_bool__bool", "GETJIT|bool (*)(char *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_char_p_size_t__bool = {"_p_f_p_char_p_size_t__bool", "bool (*)(char *,size_t *)|GETCMDLINE", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_p_DBGPROCESSINFO_p_int__bool = {"_p_f_p_p_DBGPROCESSINFO_p_int__bool", "bool (*)(DBGPROCESSINFO **,int *)|GETPROCESSLIST", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__SYMBOLPTR__p_void__bool = {"_p_f_p_q_const__SYMBOLPTR__p_void__bool", "CBSYMBOLENUM|bool (*)(SYMBOLPTR_ const *,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool = {"_p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool", "bool (*)(_TYPEDESCRIPTOR const *,char *,size_t *)|TYPETOSTRING", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__bool = {"_p_f_p_q_const__char__bool", "GUISCRIPTEXECUTE|bool (*)(char const *)|ANIMATECOMMAND|SETCMDLINE", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__unsigned_long_long = {"_p_f_p_q_const__char__unsigned_long_long", "unsigned long long (*)(char const *)|MODBASEFROMNAME", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char__void = {"_p_f_p_q_const__char__void", "DBGSETDEBUGGEEINITSCRIPT|void (*)(char const *)|SYMBOLDOWNLOADALLSYMBOLS", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long = {"_p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long", "GETADDRFROMLINE|unsigned long long (*)(char const *,int,unsigned long long *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_char_int__int = {"_p_f_p_q_const__char_p_char_int__int", "int (*)(char const *,char *,int)|MODPATHFROMNAME", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_p_char_int__int = {"_p_f_p_q_const__char_p_p_char_int__int", "SYMAUTOCOMPLETE|int (*)(char const *,char **,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_p_char_p_int__void = {"_p_f_p_q_const__char_p_p_char_p_int__void", "void (*)(char const *,char **,int *)|GUISCRIPTCOMPLETER", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_p_unsigned_long_long__bool = {"_p_f_p_q_const__char_p_unsigned_long_long__bool", "bool (*)(char const *,unsigned long long *)|VALFROMSTRING", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_size_t_p_char__bool = {"_p_f_p_q_const__char_size_t_p_char__bool", "bool (*)(char const *,size_t,char *)|STRINGFORMATINLINE", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_size_t_p_char__void = {"_p_f_p_q_const__char_size_t_p_char__void", "void (*)(char const *,size_t,char *)|GETMNEMONICBRIEF", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__char_unsigned_long_long__unsigned_long_long = {"_p_f_p_q_const__char_unsigned_long_long__unsigned_long_long", "unsigned long long (*)(char const *,unsigned long long)|FILEOFFSETTOVA", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool = {"_p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool", "bool (*)(unsigned char const *,unsigned long long,BASIC_INSTRUCTION_INFO *)|DISASMFAST", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int__bool = {"_p_f_unsigned_int__bool", "bool (*)(unsigned int)|WATCHISWATCHDOGTRIGGERED", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long__TRACERECORDBYTETYPE = {"_p_f_unsigned_long_long__TRACERECORDBYTETYPE", "GETTRACERECORDBYTETYPE|enum TRACERECORDBYTETYPE (*)(unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long__TRACERECORDTYPE = {"_p_f_unsigned_long_long__TRACERECORDTYPE", "GETTRACERECORDTYPE|enum TRACERECORDTYPE (*)(unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long__bool = {"_p_f_unsigned_long_long__bool", "PATCHGET|PATCHRESTORE|bool (*)(unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long__int = {"_p_f_unsigned_long_long__int", "MODGETPARTY|int (*)(unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long__unsigned_int = {"_p_f_unsigned_long_long__unsigned_int", "GETTRACERECORDHITCOUNT|unsigned int (*)(unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long__unsigned_long_long = {"_p_f_unsigned_long_long__unsigned_long_long", "MEMBPSIZE|MODBASEFROMADDR|MODSIZEFROMADDR|VATOFILEOFFSET|unsigned long long (*)(unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_bool__bool = {"_p_f_unsigned_long_long_bool__bool", "MEMISCODEPAGE|bool (*)(unsigned long long,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool = {"_p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool", "bool (*)(unsigned long long,enum TRACERECORDTYPE)|SETTRACERECORDTYPE", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_int__void = {"_p_f_unsigned_long_long_int__void", "MODSETPARTY|void (*)(unsigned long long,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_DBGPATCHINFO__bool = {"_p_f_unsigned_long_long_p_DBGPATCHINFO__bool", "bool (*)(unsigned long long,DBGPATCHINFO *)|PATCHGETEX", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool = {"_p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool", "bool (*)(unsigned long long,DBGRELOCATIONINFO *)|MODRELOCATIONATADDR", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_ListInfo__bool = {"_p_f_unsigned_long_long_p_ListInfo__bool", "bool (*)(unsigned long long,ListInfo *)|MODRELOCATIONSFROMADDR", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_char__bool = {"_p_f_unsigned_long_long_p_char__bool", "bool (*)(unsigned long long,char *)|SECTIONFROMADDR|GETPAGERIGHTS|GETUSERCOMMENT", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_char_bool__bool = {"_p_f_unsigned_long_long_p_char_bool__bool", "MODNAMEFROMADDR|bool (*)(unsigned long long,char *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_char_int__int = {"_p_f_unsigned_long_long_p_char_int__int", "MODPATHFROMADDR|int (*)(unsigned long long,char *,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_char_p_int__bool = {"_p_f_unsigned_long_long_p_char_p_int__bool", "bool (*)(unsigned long long,char *,int *)|GETSOURCEFROMADDR", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool = {"_p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool", "GETHANDLENAME|bool (*)(unsigned long long,char *,size_t,char *,size_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_q_const__char__bool = {"_p_f_unsigned_long_long_p_q_const__char__bool", "bool (*)(unsigned long long,char const *)|SETPAGERIGHTS", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long = {"_p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long", "GETADDRFROMLINEEX|unsigned long long (*)(unsigned long long,char const *,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool = {"_p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool", "ASSEMBLEATEX|bool (*)(unsigned long long,char const *,char *,bool)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool = {"_p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool", "MEMPATCH|bool (*)(unsigned long long,unsigned char const *,unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool = {"_p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool", "ASSEMBLE|bool (*)(unsigned long long,unsigned char *,int *,char const *,char *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_unsigned_long_long__bool = {"_p_f_unsigned_long_long_unsigned_long_long__bool", "PATCHINRANGE|bool (*)(unsigned long long,unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_unsigned_long_long__void = {"_p_f_unsigned_long_long_unsigned_long_long__void", "PATCHRESTORERANGE|void (*)(unsigned long long,unsigned long long)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool = {"_p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool", "MODRELOCATIONSINRANGE|bool (*)(unsigned long long,unsigned long long,ListInfo *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_long_p_char__bool = {"_p_f_unsigned_long_p_char__bool", "bool (*)(unsigned long,char *)|THREADGETNAME|PAGERIGHTSTOSTRING", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "FLOAT *|float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "BOOL *|INT32 *|int *|INT *|INT_PTR *|LONG32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "SHANDLE_PTR *|LONG_PTR *|LONG *|HRESULT *|long *|SSIZE_T *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "long long *|dsint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_DBGPROCESSINFO = {"_p_p_DBGPROCESSINFO", "DBGPROCESSINFO **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "PTCH *|PCTSTR *|LPCTSTR *|LPTCH *|PUTSTR *|LPUTSTR *|PCUTSTR *|LPCUTSTR *|char **|PTSTR *|LPTSTR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_unsigned_long = {"_p_p_unsigned_long", "unsigned long **|PLCID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "HALF_PTR *|short *|SHORT *|INT16 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed___int64 = {"_p_signed___int64", "INT64 *|signed __int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|INT8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned___int64 = {"_p_unsigned___int64", "UINT64 *|DWORD64 *|unsigned __int64 *|DWORDLONG *|ULONGLONG *|ULONG64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "FCHAR *|unsigned char *|UCHAR *|BYTE *|TBYTE *|UINT8 *|BOOLEAN *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "UINT32 *|DWORD32 *|UINT *|unsigned int *|UINT_PTR *|ULONG32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "HANDLE_PTR *|DWORD *|ULONG_PTR *|DWORD_PTR *|FLONG *|unsigned long *|ULONG *|SIZE_T *|LCID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "duint *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "WORD *|UHALF_PTR *|unsigned short *|USHORT *|FSHORT *|LANGID *|UINT16 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "PVOID|HANDLE|void *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wchar_t = {"_p_wchar_t", "wchar_t *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ACTIVEVIEW,
  &_swigt__p_ADDRINFOFLAGS,
  &_swigt__p_ARGTYPE,
  &_swigt__p_ArgumentInfoArray,
  &_swigt__p_BASIC_INSTRUCTION_INFO,
  &_swigt__p_BPDLLTYPE,
  &_swigt__p_BPEXTYPE,
  &_swigt__p_BPHWSIZE,
  &_swigt__p_BPHWTYPE,
  &_swigt__p_BPMAP,
  &_swigt__p_BPMEMTYPE,
  &_swigt__p_BPXTYPE,
  &_swigt__p_BRIDGEBP,
  &_swigt__p_BRIDGE_ADDRINFO,
  &_swigt__p_BookmarkInfoArray,
  &_swigt__p_BridgeCFGraphList,
  &_swigt__p_CELLINFO,
  &_swigt__p_CONSTANTINFO,
  &_swigt__p_CommentInfoArray,
  &_swigt__p_DBGCALLSTACK,
  &_swigt__p_DBGCALLSTACKENTRY,
  &_swigt__p_DBGFUNCTIONS_,
  &_swigt__p_DBGMSG,
  &_swigt__p_DBGPATCHINFO,
  &_swigt__p_DBGPROCESSINFO,
  &_swigt__p_DBGRELOCATIONINFO,
  &_swigt__p_DBGSEHCHAIN,
  &_swigt__p_DBGSEHRECORD,
  &_swigt__p_DBGSTATE,
  &_swigt__p_DISASM_ARG,
  &_swigt__p_DISASM_ARGTYPE,
  &_swigt__p_DISASM_INSTR,
  &_swigt__p_DISASM_INSTRTYPE,
  &_swigt__p_ENCODETYPE,
  &_swigt__p_FILETIME,
  &_swigt__p_FLAGS,
  &_swigt__p_FUNCTION,
  &_swigt__p_FUNCTION_LOOP_INFO,
  &_swigt__p_FUNCTYPE,
  &_swigt__p_FunctionInfoArray,
  &_swigt__p_GUIMSG,
  &_swigt__p_HANDLEINFO,
  &_swigt__p_HEAPINFO,
  &_swigt__p_ICONDATA,
  &_swigt__p_LASTERROR,
  &_swigt__p_LASTSTATUS,
  &_swigt__p_LOOP,
  &_swigt__p_LOOPTYPE,
  &_swigt__p_LabelInfoArray,
  &_swigt__p_ListInfo,
  &_swigt__p_MEMMAP,
  &_swigt__p_MEMORY_INFO,
  &_swigt__p_MEMORY_SIZE,
  &_swigt__p_MEMPAGE,
  &_swigt__p_MEMPAGEArray,
  &_swigt__p_MSG,
  &_swigt__p_MXCSRFIELDS,
  &_swigt__p_ModuleInfoArray,
  &_swigt__p_ModuleSectionInfoArray,
  &_swigt__p_RECT,
  &_swigt__p_REGDUMP,
  &_swigt__p_REGISTERCONTEXT,
  &_swigt__p_SCRIPTBRANCH,
  &_swigt__p_SCRIPTBRANCHTYPE,
  &_swigt__p_SCRIPTLINETYPE,
  &_swigt__p_SCRIPTTYPEINFO,
  &_swigt__p_SEGMENTREG,
  &_swigt__p_SELECTIONDATA,
  &_swigt__p_STACK_COMMENT,
  &_swigt__p_STRING_TYPE,
  &_swigt__p_SYMBOLCBINFO,
  &_swigt__p_SYMBOLINFO_,
  &_swigt__p_SYMBOLMODULEINFO,
  &_swigt__p_SYMBOLPTR_,
  &_swigt__p_SYMBOLTYPE,
  &_swigt__p_Script__Argument__ArgumentInfo,
  &_swigt__p_Script__Bookmark__BookmarkInfo,
  &_swigt__p_Script__Comment__CommentInfo,
  &_swigt__p_Script__Function__FunctionInfo,
  &_swigt__p_Script__Label__LabelInfo,
  &_swigt__p_Script__Module__ModuleInfo,
  &_swigt__p_Script__Module__ModuleSectionInfo,
  &_swigt__p_Script__Symbol__SymbolInfo,
  &_swigt__p_SymbolInfoArray,
  &_swigt__p_TCPCONNECTIONINFO,
  &_swigt__p_THREADALLINFO,
  &_swigt__p_THREADINFO,
  &_swigt__p_THREADLIST,
  &_swigt__p_THREADPRIORITY,
  &_swigt__p_THREADWAITREASON,
  &_swigt__p_TRACERECORDBYTETYPE,
  &_swigt__p_TRACERECORDTYPE,
  &_swigt__p_VALUE_INFO,
  &_swigt__p_WATCHDOGMODE,
  &_swigt__p_WATCHINFO,
  &_swigt__p_WATCHVARTYPE,
  &_swigt__p_WINDOW_INFO,
  &_swigt__p_X87CONTROLWORDFIELDS,
  &_swigt__p_X87FPU,
  &_swigt__p_X87FPUREGISTER,
  &_swigt__p_X87STATUSWORDFIELDS,
  &_swigt__p_XREFTYPE,
  &_swigt__p_XREF_INFO,
  &_swigt__p_XREF_RECORD,
  &_swigt__p_YMMREGISTER,
  &_swigt__p__MEMORY_BASIC_INFORMATION,
  &_swigt__p__TYPEDESCRIPTOR,
  &_swigt__p__XMMREGISTER,
  &_swigt__p___int64,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_f___bool,
  &_swigt__p_f___p_char,
  &_swigt__p_f___unsigned_long_long,
  &_swigt__p_f___void,
  &_swigt__p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool,
  &_swigt__p_f_p_DBGCALLSTACK__void,
  &_swigt__p_f_p_DBGCALLSTACK_bool__void,
  &_swigt__p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int,
  &_swigt__p_f_p_DBGPATCHINFO_p_size_t__bool,
  &_swigt__p_f_p_DBGSEHCHAIN__void,
  &_swigt__p_f_p_ListInfo__bool,
  &_swigt__p_f_p_ListInfo__void,
  &_swigt__p_f_p_bool__bool,
  &_swigt__p_f_p_char__bool,
  &_swigt__p_f_p_char_bool__bool,
  &_swigt__p_f_p_char_p_size_t__bool,
  &_swigt__p_f_p_p_DBGPROCESSINFO_p_int__bool,
  &_swigt__p_f_p_q_const__SYMBOLPTR__p_void__bool,
  &_swigt__p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool,
  &_swigt__p_f_p_q_const__char__bool,
  &_swigt__p_f_p_q_const__char__unsigned_long_long,
  &_swigt__p_f_p_q_const__char__void,
  &_swigt__p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long,
  &_swigt__p_f_p_q_const__char_p_char_int__int,
  &_swigt__p_f_p_q_const__char_p_p_char_int__int,
  &_swigt__p_f_p_q_const__char_p_p_char_p_int__void,
  &_swigt__p_f_p_q_const__char_p_unsigned_long_long__bool,
  &_swigt__p_f_p_q_const__char_size_t_p_char__bool,
  &_swigt__p_f_p_q_const__char_size_t_p_char__void,
  &_swigt__p_f_p_q_const__char_unsigned_long_long__unsigned_long_long,
  &_swigt__p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool,
  &_swigt__p_f_unsigned_int__bool,
  &_swigt__p_f_unsigned_long_long__TRACERECORDBYTETYPE,
  &_swigt__p_f_unsigned_long_long__TRACERECORDTYPE,
  &_swigt__p_f_unsigned_long_long__bool,
  &_swigt__p_f_unsigned_long_long__int,
  &_swigt__p_f_unsigned_long_long__unsigned_int,
  &_swigt__p_f_unsigned_long_long__unsigned_long_long,
  &_swigt__p_f_unsigned_long_long_bool__bool,
  &_swigt__p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool,
  &_swigt__p_f_unsigned_long_long_int__void,
  &_swigt__p_f_unsigned_long_long_p_DBGPATCHINFO__bool,
  &_swigt__p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool,
  &_swigt__p_f_unsigned_long_long_p_ListInfo__bool,
  &_swigt__p_f_unsigned_long_long_p_char__bool,
  &_swigt__p_f_unsigned_long_long_p_char_bool__bool,
  &_swigt__p_f_unsigned_long_long_p_char_int__int,
  &_swigt__p_f_unsigned_long_long_p_char_p_int__bool,
  &_swigt__p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool,
  &_swigt__p_f_unsigned_long_long_p_q_const__char__bool,
  &_swigt__p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long,
  &_swigt__p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool,
  &_swigt__p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool,
  &_swigt__p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool,
  &_swigt__p_f_unsigned_long_long_unsigned_long_long__bool,
  &_swigt__p_f_unsigned_long_long_unsigned_long_long__void,
  &_swigt__p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool,
  &_swigt__p_f_unsigned_long_p_char__bool,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_long,
  &_swigt__p_long_long,
  &_swigt__p_p_DBGPROCESSINFO,
  &_swigt__p_p_char,
  &_swigt__p_p_unsigned_long,
  &_swigt__p_short,
  &_swigt__p_signed___int64,
  &_swigt__p_signed_char,
  &_swigt__p_size_t,
  &_swigt__p_unsigned___int64,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_void,
  &_swigt__p_wchar_t,
};

static swig_cast_info _swigc__p_ACTIVEVIEW[] = {  {&_swigt__p_ACTIVEVIEW, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ADDRINFOFLAGS[] = {  {&_swigt__p_ADDRINFOFLAGS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ARGTYPE[] = {  {&_swigt__p_ARGTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ArgumentInfoArray[] = {  {&_swigt__p_ArgumentInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BASIC_INSTRUCTION_INFO[] = {  {&_swigt__p_BASIC_INSTRUCTION_INFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BPDLLTYPE[] = {  {&_swigt__p_BPDLLTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BPEXTYPE[] = {  {&_swigt__p_BPEXTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BPHWSIZE[] = {  {&_swigt__p_BPHWSIZE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BPHWTYPE[] = {  {&_swigt__p_BPHWTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BPMAP[] = {  {&_swigt__p_BPMAP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BPMEMTYPE[] = {  {&_swigt__p_BPMEMTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BPXTYPE[] = {  {&_swigt__p_BPXTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BRIDGEBP[] = {  {&_swigt__p_BRIDGEBP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BRIDGE_ADDRINFO[] = {  {&_swigt__p_BRIDGE_ADDRINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BookmarkInfoArray[] = {  {&_swigt__p_BookmarkInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BridgeCFGraphList[] = {  {&_swigt__p_BridgeCFGraphList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CELLINFO[] = {  {&_swigt__p_CELLINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CONSTANTINFO[] = {  {&_swigt__p_CONSTANTINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommentInfoArray[] = {  {&_swigt__p_CommentInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGCALLSTACK[] = {  {&_swigt__p_DBGCALLSTACK, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGCALLSTACKENTRY[] = {  {&_swigt__p_DBGCALLSTACKENTRY, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGFUNCTIONS_[] = {  {&_swigt__p_DBGFUNCTIONS_, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGMSG[] = {  {&_swigt__p_DBGMSG, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGPATCHINFO[] = {  {&_swigt__p_DBGPATCHINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGPROCESSINFO[] = {  {&_swigt__p_DBGPROCESSINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGRELOCATIONINFO[] = {  {&_swigt__p_DBGRELOCATIONINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGSEHCHAIN[] = {  {&_swigt__p_DBGSEHCHAIN, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGSEHRECORD[] = {  {&_swigt__p_DBGSEHRECORD, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DBGSTATE[] = {  {&_swigt__p_DBGSTATE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DISASM_ARG[] = {  {&_swigt__p_DISASM_ARG, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DISASM_ARGTYPE[] = {  {&_swigt__p_DISASM_ARGTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DISASM_INSTR[] = {  {&_swigt__p_DISASM_INSTR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DISASM_INSTRTYPE[] = {  {&_swigt__p_DISASM_INSTRTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ENCODETYPE[] = {  {&_swigt__p_ENCODETYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FILETIME[] = {  {&_swigt__p_FILETIME, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FLAGS[] = {  {&_swigt__p_FLAGS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FUNCTION[] = {  {&_swigt__p_FUNCTION, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FUNCTION_LOOP_INFO[] = {  {&_swigt__p_FUNCTION_LOOP_INFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FUNCTYPE[] = {  {&_swigt__p_FUNCTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FunctionInfoArray[] = {  {&_swigt__p_FunctionInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_GUIMSG[] = {  {&_swigt__p_GUIMSG, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HANDLEINFO[] = {  {&_swigt__p_HANDLEINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HEAPINFO[] = {  {&_swigt__p_HEAPINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ICONDATA[] = {  {&_swigt__p_ICONDATA, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LASTERROR[] = {  {&_swigt__p_LASTERROR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LASTSTATUS[] = {  {&_swigt__p_LASTSTATUS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LOOP[] = {  {&_swigt__p_LOOP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LOOPTYPE[] = {  {&_swigt__p_LOOPTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_LabelInfoArray[] = {  {&_swigt__p_LabelInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ListInfo[] = {  {&_swigt__p_ListInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MEMMAP[] = {  {&_swigt__p_MEMMAP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MEMORY_INFO[] = {  {&_swigt__p_MEMORY_INFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MEMORY_SIZE[] = {  {&_swigt__p_MEMORY_SIZE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MEMPAGE[] = {  {&_swigt__p_MEMPAGE, 0, 0, 0},  {&_swigt__p_MEMPAGEArray, _p_MEMPAGEArrayTo_p_MEMPAGE, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MEMPAGEArray[] = {  {&_swigt__p_MEMPAGEArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MSG[] = {  {&_swigt__p_MSG, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MXCSRFIELDS[] = {  {&_swigt__p_MXCSRFIELDS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ModuleInfoArray[] = {  {&_swigt__p_ModuleInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ModuleSectionInfoArray[] = {  {&_swigt__p_ModuleSectionInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RECT[] = {  {&_swigt__p_RECT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_REGDUMP[] = {  {&_swigt__p_REGDUMP, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_REGISTERCONTEXT[] = {  {&_swigt__p_REGISTERCONTEXT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SCRIPTBRANCH[] = {  {&_swigt__p_SCRIPTBRANCH, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SCRIPTBRANCHTYPE[] = {  {&_swigt__p_SCRIPTBRANCHTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SCRIPTLINETYPE[] = {  {&_swigt__p_SCRIPTLINETYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SCRIPTTYPEINFO[] = {  {&_swigt__p_SCRIPTTYPEINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SEGMENTREG[] = {  {&_swigt__p_SEGMENTREG, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SELECTIONDATA[] = {  {&_swigt__p_SELECTIONDATA, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_STACK_COMMENT[] = {  {&_swigt__p_STACK_COMMENT, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_STRING_TYPE[] = {  {&_swigt__p_STRING_TYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SYMBOLCBINFO[] = {  {&_swigt__p_SYMBOLCBINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SYMBOLINFO_[] = {  {&_swigt__p_SYMBOLINFO_, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SYMBOLMODULEINFO[] = {  {&_swigt__p_SYMBOLMODULEINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SYMBOLPTR_[] = {  {&_swigt__p_SYMBOLPTR_, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SYMBOLTYPE[] = {  {&_swigt__p_SYMBOLTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Argument__ArgumentInfo[] = {  {&_swigt__p_ArgumentInfoArray, _p_ArgumentInfoArrayTo_p_Script__Argument__ArgumentInfo, 0, 0},  {&_swigt__p_Script__Argument__ArgumentInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Bookmark__BookmarkInfo[] = {  {&_swigt__p_BookmarkInfoArray, _p_BookmarkInfoArrayTo_p_Script__Bookmark__BookmarkInfo, 0, 0},  {&_swigt__p_Script__Bookmark__BookmarkInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Comment__CommentInfo[] = {  {&_swigt__p_CommentInfoArray, _p_CommentInfoArrayTo_p_Script__Comment__CommentInfo, 0, 0},  {&_swigt__p_Script__Comment__CommentInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Function__FunctionInfo[] = {  {&_swigt__p_Script__Function__FunctionInfo, 0, 0, 0},  {&_swigt__p_FunctionInfoArray, _p_FunctionInfoArrayTo_p_Script__Function__FunctionInfo, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Label__LabelInfo[] = {  {&_swigt__p_LabelInfoArray, _p_LabelInfoArrayTo_p_Script__Label__LabelInfo, 0, 0},  {&_swigt__p_Script__Label__LabelInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Module__ModuleInfo[] = {  {&_swigt__p_Script__Module__ModuleInfo, 0, 0, 0},  {&_swigt__p_ModuleInfoArray, _p_ModuleInfoArrayTo_p_Script__Module__ModuleInfo, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Module__ModuleSectionInfo[] = {  {&_swigt__p_Script__Module__ModuleSectionInfo, 0, 0, 0},  {&_swigt__p_ModuleSectionInfoArray, _p_ModuleSectionInfoArrayTo_p_Script__Module__ModuleSectionInfo, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Script__Symbol__SymbolInfo[] = {  {&_swigt__p_Script__Symbol__SymbolInfo, 0, 0, 0},  {&_swigt__p_SymbolInfoArray, _p_SymbolInfoArrayTo_p_Script__Symbol__SymbolInfo, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_SymbolInfoArray[] = {  {&_swigt__p_SymbolInfoArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TCPCONNECTIONINFO[] = {  {&_swigt__p_TCPCONNECTIONINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_THREADALLINFO[] = {  {&_swigt__p_THREADALLINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_THREADINFO[] = {  {&_swigt__p_THREADINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_THREADLIST[] = {  {&_swigt__p_THREADLIST, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_THREADPRIORITY[] = {  {&_swigt__p_THREADPRIORITY, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_THREADWAITREASON[] = {  {&_swigt__p_THREADWAITREASON, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TRACERECORDBYTETYPE[] = {  {&_swigt__p_TRACERECORDBYTETYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TRACERECORDTYPE[] = {  {&_swigt__p_TRACERECORDTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VALUE_INFO[] = {  {&_swigt__p_VALUE_INFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WATCHDOGMODE[] = {  {&_swigt__p_WATCHDOGMODE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WATCHINFO[] = {  {&_swigt__p_WATCHINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WATCHVARTYPE[] = {  {&_swigt__p_WATCHVARTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_WINDOW_INFO[] = {  {&_swigt__p_WINDOW_INFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_X87CONTROLWORDFIELDS[] = {  {&_swigt__p_X87CONTROLWORDFIELDS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_X87FPU[] = {  {&_swigt__p_X87FPU, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_X87FPUREGISTER[] = {  {&_swigt__p_X87FPUREGISTER, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_X87STATUSWORDFIELDS[] = {  {&_swigt__p_X87STATUSWORDFIELDS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XREFTYPE[] = {  {&_swigt__p_XREFTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XREF_INFO[] = {  {&_swigt__p_XREF_INFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_XREF_RECORD[] = {  {&_swigt__p_XREF_RECORD, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_YMMREGISTER[] = {  {&_swigt__p_YMMREGISTER, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__MEMORY_BASIC_INFORMATION[] = {  {&_swigt__p__MEMORY_BASIC_INFORMATION, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__TYPEDESCRIPTOR[] = {  {&_swigt__p__TYPEDESCRIPTOR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__XMMREGISTER[] = {  {&_swigt__p__XMMREGISTER, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p___int64[] = {  {&_swigt__p___int64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___bool[] = {  {&_swigt__p_f___bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___p_char[] = {  {&_swigt__p_f___p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___unsigned_long_long[] = {  {&_swigt__p_f___unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f___void[] = {  {&_swigt__p_f___void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool[] = {  {&_swigt__p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_DBGCALLSTACK__void[] = {  {&_swigt__p_f_p_DBGCALLSTACK__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_DBGCALLSTACK_bool__void[] = {  {&_swigt__p_f_p_DBGCALLSTACK_bool__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int[] = {  {&_swigt__p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_DBGPATCHINFO_p_size_t__bool[] = {  {&_swigt__p_f_p_DBGPATCHINFO_p_size_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_DBGSEHCHAIN__void[] = {  {&_swigt__p_f_p_DBGSEHCHAIN__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_ListInfo__bool[] = {  {&_swigt__p_f_p_ListInfo__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_ListInfo__void[] = {  {&_swigt__p_f_p_ListInfo__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_bool__bool[] = {  {&_swigt__p_f_p_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_char__bool[] = {  {&_swigt__p_f_p_char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_char_bool__bool[] = {  {&_swigt__p_f_p_char_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_char_p_size_t__bool[] = {  {&_swigt__p_f_p_char_p_size_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_p_DBGPROCESSINFO_p_int__bool[] = {  {&_swigt__p_f_p_p_DBGPROCESSINFO_p_int__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__SYMBOLPTR__p_void__bool[] = {  {&_swigt__p_f_p_q_const__SYMBOLPTR__p_void__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool[] = {  {&_swigt__p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__bool[] = {  {&_swigt__p_f_p_q_const__char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__unsigned_long_long[] = {  {&_swigt__p_f_p_q_const__char__unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char__void[] = {  {&_swigt__p_f_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long[] = {  {&_swigt__p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_char_int__int[] = {  {&_swigt__p_f_p_q_const__char_p_char_int__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_p_char_int__int[] = {  {&_swigt__p_f_p_q_const__char_p_p_char_int__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_p_char_p_int__void[] = {  {&_swigt__p_f_p_q_const__char_p_p_char_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_p_unsigned_long_long__bool[] = {  {&_swigt__p_f_p_q_const__char_p_unsigned_long_long__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_size_t_p_char__bool[] = {  {&_swigt__p_f_p_q_const__char_size_t_p_char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_size_t_p_char__void[] = {  {&_swigt__p_f_p_q_const__char_size_t_p_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__char_unsigned_long_long__unsigned_long_long[] = {  {&_swigt__p_f_p_q_const__char_unsigned_long_long__unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool[] = {  {&_swigt__p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int__bool[] = {  {&_swigt__p_f_unsigned_int__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long__TRACERECORDBYTETYPE[] = {  {&_swigt__p_f_unsigned_long_long__TRACERECORDBYTETYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long__TRACERECORDTYPE[] = {  {&_swigt__p_f_unsigned_long_long__TRACERECORDTYPE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long__bool[] = {  {&_swigt__p_f_unsigned_long_long__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long__int[] = {  {&_swigt__p_f_unsigned_long_long__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long__unsigned_int[] = {  {&_swigt__p_f_unsigned_long_long__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long__unsigned_long_long[] = {  {&_swigt__p_f_unsigned_long_long__unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_bool__bool[] = {  {&_swigt__p_f_unsigned_long_long_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool[] = {  {&_swigt__p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_int__void[] = {  {&_swigt__p_f_unsigned_long_long_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_DBGPATCHINFO__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_DBGPATCHINFO__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_ListInfo__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_ListInfo__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_char__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_char_bool__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_char_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_char_int__int[] = {  {&_swigt__p_f_unsigned_long_long_p_char_int__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_char_p_int__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_char_p_int__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_q_const__char__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_q_const__char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long[] = {  {&_swigt__p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool[] = {  {&_swigt__p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_unsigned_long_long__bool[] = {  {&_swigt__p_f_unsigned_long_long_unsigned_long_long__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_unsigned_long_long__void[] = {  {&_swigt__p_f_unsigned_long_long_unsigned_long_long__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool[] = {  {&_swigt__p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_long_p_char__bool[] = {  {&_swigt__p_f_unsigned_long_p_char__bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_DBGPROCESSINFO[] = {  {&_swigt__p_p_DBGPROCESSINFO, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_unsigned_long[] = {  {&_swigt__p_p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed___int64[] = {  {&_swigt__p_signed___int64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned___int64[] = {  {&_swigt__p_unsigned___int64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wchar_t[] = {  {&_swigt__p_wchar_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ACTIVEVIEW,
  _swigc__p_ADDRINFOFLAGS,
  _swigc__p_ARGTYPE,
  _swigc__p_ArgumentInfoArray,
  _swigc__p_BASIC_INSTRUCTION_INFO,
  _swigc__p_BPDLLTYPE,
  _swigc__p_BPEXTYPE,
  _swigc__p_BPHWSIZE,
  _swigc__p_BPHWTYPE,
  _swigc__p_BPMAP,
  _swigc__p_BPMEMTYPE,
  _swigc__p_BPXTYPE,
  _swigc__p_BRIDGEBP,
  _swigc__p_BRIDGE_ADDRINFO,
  _swigc__p_BookmarkInfoArray,
  _swigc__p_BridgeCFGraphList,
  _swigc__p_CELLINFO,
  _swigc__p_CONSTANTINFO,
  _swigc__p_CommentInfoArray,
  _swigc__p_DBGCALLSTACK,
  _swigc__p_DBGCALLSTACKENTRY,
  _swigc__p_DBGFUNCTIONS_,
  _swigc__p_DBGMSG,
  _swigc__p_DBGPATCHINFO,
  _swigc__p_DBGPROCESSINFO,
  _swigc__p_DBGRELOCATIONINFO,
  _swigc__p_DBGSEHCHAIN,
  _swigc__p_DBGSEHRECORD,
  _swigc__p_DBGSTATE,
  _swigc__p_DISASM_ARG,
  _swigc__p_DISASM_ARGTYPE,
  _swigc__p_DISASM_INSTR,
  _swigc__p_DISASM_INSTRTYPE,
  _swigc__p_ENCODETYPE,
  _swigc__p_FILETIME,
  _swigc__p_FLAGS,
  _swigc__p_FUNCTION,
  _swigc__p_FUNCTION_LOOP_INFO,
  _swigc__p_FUNCTYPE,
  _swigc__p_FunctionInfoArray,
  _swigc__p_GUIMSG,
  _swigc__p_HANDLEINFO,
  _swigc__p_HEAPINFO,
  _swigc__p_ICONDATA,
  _swigc__p_LASTERROR,
  _swigc__p_LASTSTATUS,
  _swigc__p_LOOP,
  _swigc__p_LOOPTYPE,
  _swigc__p_LabelInfoArray,
  _swigc__p_ListInfo,
  _swigc__p_MEMMAP,
  _swigc__p_MEMORY_INFO,
  _swigc__p_MEMORY_SIZE,
  _swigc__p_MEMPAGE,
  _swigc__p_MEMPAGEArray,
  _swigc__p_MSG,
  _swigc__p_MXCSRFIELDS,
  _swigc__p_ModuleInfoArray,
  _swigc__p_ModuleSectionInfoArray,
  _swigc__p_RECT,
  _swigc__p_REGDUMP,
  _swigc__p_REGISTERCONTEXT,
  _swigc__p_SCRIPTBRANCH,
  _swigc__p_SCRIPTBRANCHTYPE,
  _swigc__p_SCRIPTLINETYPE,
  _swigc__p_SCRIPTTYPEINFO,
  _swigc__p_SEGMENTREG,
  _swigc__p_SELECTIONDATA,
  _swigc__p_STACK_COMMENT,
  _swigc__p_STRING_TYPE,
  _swigc__p_SYMBOLCBINFO,
  _swigc__p_SYMBOLINFO_,
  _swigc__p_SYMBOLMODULEINFO,
  _swigc__p_SYMBOLPTR_,
  _swigc__p_SYMBOLTYPE,
  _swigc__p_Script__Argument__ArgumentInfo,
  _swigc__p_Script__Bookmark__BookmarkInfo,
  _swigc__p_Script__Comment__CommentInfo,
  _swigc__p_Script__Function__FunctionInfo,
  _swigc__p_Script__Label__LabelInfo,
  _swigc__p_Script__Module__ModuleInfo,
  _swigc__p_Script__Module__ModuleSectionInfo,
  _swigc__p_Script__Symbol__SymbolInfo,
  _swigc__p_SymbolInfoArray,
  _swigc__p_TCPCONNECTIONINFO,
  _swigc__p_THREADALLINFO,
  _swigc__p_THREADINFO,
  _swigc__p_THREADLIST,
  _swigc__p_THREADPRIORITY,
  _swigc__p_THREADWAITREASON,
  _swigc__p_TRACERECORDBYTETYPE,
  _swigc__p_TRACERECORDTYPE,
  _swigc__p_VALUE_INFO,
  _swigc__p_WATCHDOGMODE,
  _swigc__p_WATCHINFO,
  _swigc__p_WATCHVARTYPE,
  _swigc__p_WINDOW_INFO,
  _swigc__p_X87CONTROLWORDFIELDS,
  _swigc__p_X87FPU,
  _swigc__p_X87FPUREGISTER,
  _swigc__p_X87STATUSWORDFIELDS,
  _swigc__p_XREFTYPE,
  _swigc__p_XREF_INFO,
  _swigc__p_XREF_RECORD,
  _swigc__p_YMMREGISTER,
  _swigc__p__MEMORY_BASIC_INFORMATION,
  _swigc__p__TYPEDESCRIPTOR,
  _swigc__p__XMMREGISTER,
  _swigc__p___int64,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_f___bool,
  _swigc__p_f___p_char,
  _swigc__p_f___unsigned_long_long,
  _swigc__p_f___void,
  _swigc__p_f_enum_BPXTYPE_unsigned_long_long_p_BRIDGEBP__bool,
  _swigc__p_f_p_DBGCALLSTACK__void,
  _swigc__p_f_p_DBGCALLSTACK_bool__void,
  _swigc__p_f_p_DBGPATCHINFO_int_p_q_const__char_p_char__int,
  _swigc__p_f_p_DBGPATCHINFO_p_size_t__bool,
  _swigc__p_f_p_DBGSEHCHAIN__void,
  _swigc__p_f_p_ListInfo__bool,
  _swigc__p_f_p_ListInfo__void,
  _swigc__p_f_p_bool__bool,
  _swigc__p_f_p_char__bool,
  _swigc__p_f_p_char_bool__bool,
  _swigc__p_f_p_char_p_size_t__bool,
  _swigc__p_f_p_p_DBGPROCESSINFO_p_int__bool,
  _swigc__p_f_p_q_const__SYMBOLPTR__p_void__bool,
  _swigc__p_f_p_q_const___TYPEDESCRIPTOR_p_char_p_size_t__bool,
  _swigc__p_f_p_q_const__char__bool,
  _swigc__p_f_p_q_const__char__unsigned_long_long,
  _swigc__p_f_p_q_const__char__void,
  _swigc__p_f_p_q_const__char_int_p_unsigned_long_long__unsigned_long_long,
  _swigc__p_f_p_q_const__char_p_char_int__int,
  _swigc__p_f_p_q_const__char_p_p_char_int__int,
  _swigc__p_f_p_q_const__char_p_p_char_p_int__void,
  _swigc__p_f_p_q_const__char_p_unsigned_long_long__bool,
  _swigc__p_f_p_q_const__char_size_t_p_char__bool,
  _swigc__p_f_p_q_const__char_size_t_p_char__void,
  _swigc__p_f_p_q_const__char_unsigned_long_long__unsigned_long_long,
  _swigc__p_f_p_q_const__unsigned_char_unsigned_long_long_p_BASIC_INSTRUCTION_INFO__bool,
  _swigc__p_f_unsigned_int__bool,
  _swigc__p_f_unsigned_long_long__TRACERECORDBYTETYPE,
  _swigc__p_f_unsigned_long_long__TRACERECORDTYPE,
  _swigc__p_f_unsigned_long_long__bool,
  _swigc__p_f_unsigned_long_long__int,
  _swigc__p_f_unsigned_long_long__unsigned_int,
  _swigc__p_f_unsigned_long_long__unsigned_long_long,
  _swigc__p_f_unsigned_long_long_bool__bool,
  _swigc__p_f_unsigned_long_long_enum_TRACERECORDTYPE__bool,
  _swigc__p_f_unsigned_long_long_int__void,
  _swigc__p_f_unsigned_long_long_p_DBGPATCHINFO__bool,
  _swigc__p_f_unsigned_long_long_p_DBGRELOCATIONINFO__bool,
  _swigc__p_f_unsigned_long_long_p_ListInfo__bool,
  _swigc__p_f_unsigned_long_long_p_char__bool,
  _swigc__p_f_unsigned_long_long_p_char_bool__bool,
  _swigc__p_f_unsigned_long_long_p_char_int__int,
  _swigc__p_f_unsigned_long_long_p_char_p_int__bool,
  _swigc__p_f_unsigned_long_long_p_char_size_t_p_char_size_t__bool,
  _swigc__p_f_unsigned_long_long_p_q_const__char__bool,
  _swigc__p_f_unsigned_long_long_p_q_const__char_int__unsigned_long_long,
  _swigc__p_f_unsigned_long_long_p_q_const__char_p_char_bool__bool,
  _swigc__p_f_unsigned_long_long_p_q_const__unsigned_char_unsigned_long_long__bool,
  _swigc__p_f_unsigned_long_long_p_unsigned_char_p_int_p_q_const__char_p_char__bool,
  _swigc__p_f_unsigned_long_long_unsigned_long_long__bool,
  _swigc__p_f_unsigned_long_long_unsigned_long_long__void,
  _swigc__p_f_unsigned_long_long_unsigned_long_long_p_ListInfo__bool,
  _swigc__p_f_unsigned_long_p_char__bool,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_long,
  _swigc__p_long_long,
  _swigc__p_p_DBGPROCESSINFO,
  _swigc__p_p_char,
  _swigc__p_p_unsigned_long,
  _swigc__p_short,
  _swigc__p_signed___int64,
  _swigc__p_signed_char,
  _swigc__p_size_t,
  _swigc__p_unsigned___int64,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_void,
  _swigc__p_wchar_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "MAX_SETTING_SIZE",SWIG_From_int(static_cast< int >(65536)));
  SWIG_Python_SetConstant(d, "DBG_VERSION",SWIG_From_int(static_cast< int >(25)));
  SWIG_Python_SetConstant(d, "MAX_LABEL_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_COMMENT_SIZE",SWIG_From_int(static_cast< int >(512)));
  SWIG_Python_SetConstant(d, "MAX_MODULE_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_IMPORT_SIZE",SWIG_From_int(static_cast< int >(65536)));
  SWIG_Python_SetConstant(d, "MAX_BREAKPOINT_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_CONDITIONAL_EXPR_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_CONDITIONAL_TEXT_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_SCRIPT_LINE_SIZE",SWIG_From_int(static_cast< int >(2048)));
  SWIG_Python_SetConstant(d, "MAX_THREAD_NAME_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_WATCH_NAME_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_STRING_SIZE",SWIG_From_int(static_cast< int >(512)));
  SWIG_Python_SetConstant(d, "MAX_ERROR_SIZE",SWIG_From_int(static_cast< int >(512)));
  SWIG_Python_SetConstant(d, "MAX_SECTION_SIZE",SWIG_From_int(static_cast< int >(10)));
  SWIG_Python_SetConstant(d, "MAX_COMMAND_LINE_SIZE",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "MAX_MNEMONIC_SIZE",SWIG_From_int(static_cast< int >(64)));
  SWIG_Python_SetConstant(d, "PAGE_SIZE",SWIG_From_int(static_cast< int >(0x1000)));
  SWIG_Python_SetConstant(d, "initialized",SWIG_From_int(static_cast< int >(initialized)));
  SWIG_Python_SetConstant(d, "paused",SWIG_From_int(static_cast< int >(paused)));
  SWIG_Python_SetConstant(d, "running",SWIG_From_int(static_cast< int >(running)));
  SWIG_Python_SetConstant(d, "stopped",SWIG_From_int(static_cast< int >(stopped)));
  SWIG_Python_SetConstant(d, "SEG_DEFAULT",SWIG_From_int(static_cast< int >(SEG_DEFAULT)));
  SWIG_Python_SetConstant(d, "SEG_ES",SWIG_From_int(static_cast< int >(SEG_ES)));
  SWIG_Python_SetConstant(d, "SEG_DS",SWIG_From_int(static_cast< int >(SEG_DS)));
  SWIG_Python_SetConstant(d, "SEG_FS",SWIG_From_int(static_cast< int >(SEG_FS)));
  SWIG_Python_SetConstant(d, "SEG_GS",SWIG_From_int(static_cast< int >(SEG_GS)));
  SWIG_Python_SetConstant(d, "SEG_CS",SWIG_From_int(static_cast< int >(SEG_CS)));
  SWIG_Python_SetConstant(d, "SEG_SS",SWIG_From_int(static_cast< int >(SEG_SS)));
  SWIG_Python_SetConstant(d, "flagmodule",SWIG_From_int(static_cast< int >(flagmodule)));
  SWIG_Python_SetConstant(d, "flaglabel",SWIG_From_int(static_cast< int >(flaglabel)));
  SWIG_Python_SetConstant(d, "flagcomment",SWIG_From_int(static_cast< int >(flagcomment)));
  SWIG_Python_SetConstant(d, "flagbookmark",SWIG_From_int(static_cast< int >(flagbookmark)));
  SWIG_Python_SetConstant(d, "flagfunction",SWIG_From_int(static_cast< int >(flagfunction)));
  SWIG_Python_SetConstant(d, "flagloop",SWIG_From_int(static_cast< int >(flagloop)));
  SWIG_Python_SetConstant(d, "flagargs",SWIG_From_int(static_cast< int >(flagargs)));
  SWIG_Python_SetConstant(d, "flagNoFuncOffset",SWIG_From_int(static_cast< int >(flagNoFuncOffset)));
  SWIG_Python_SetConstant(d, "bp_none",SWIG_From_int(static_cast< int >(bp_none)));
  SWIG_Python_SetConstant(d, "bp_normal",SWIG_From_int(static_cast< int >(bp_normal)));
  SWIG_Python_SetConstant(d, "bp_hardware",SWIG_From_int(static_cast< int >(bp_hardware)));
  SWIG_Python_SetConstant(d, "bp_memory",SWIG_From_int(static_cast< int >(bp_memory)));
  SWIG_Python_SetConstant(d, "bp_dll",SWIG_From_int(static_cast< int >(bp_dll)));
  SWIG_Python_SetConstant(d, "bp_exception",SWIG_From_int(static_cast< int >(bp_exception)));
  SWIG_Python_SetConstant(d, "FUNC_NONE",SWIG_From_int(static_cast< int >(FUNC_NONE)));
  SWIG_Python_SetConstant(d, "FUNC_BEGIN",SWIG_From_int(static_cast< int >(FUNC_BEGIN)));
  SWIG_Python_SetConstant(d, "FUNC_MIDDLE",SWIG_From_int(static_cast< int >(FUNC_MIDDLE)));
  SWIG_Python_SetConstant(d, "FUNC_END",SWIG_From_int(static_cast< int >(FUNC_END)));
  SWIG_Python_SetConstant(d, "FUNC_SINGLE",SWIG_From_int(static_cast< int >(FUNC_SINGLE)));
  SWIG_Python_SetConstant(d, "LOOP_NONE",SWIG_From_int(static_cast< int >(LOOP_NONE)));
  SWIG_Python_SetConstant(d, "LOOP_BEGIN",SWIG_From_int(static_cast< int >(LOOP_BEGIN)));
  SWIG_Python_SetConstant(d, "LOOP_MIDDLE",SWIG_From_int(static_cast< int >(LOOP_MIDDLE)));
  SWIG_Python_SetConstant(d, "LOOP_ENTRY",SWIG_From_int(static_cast< int >(LOOP_ENTRY)));
  SWIG_Python_SetConstant(d, "LOOP_END",SWIG_From_int(static_cast< int >(LOOP_END)));
  SWIG_Python_SetConstant(d, "LOOP_SINGLE",SWIG_From_int(static_cast< int >(LOOP_SINGLE)));
  SWIG_Python_SetConstant(d, "XREF_NONE",SWIG_From_int(static_cast< int >(XREF_NONE)));
  SWIG_Python_SetConstant(d, "XREF_DATA",SWIG_From_int(static_cast< int >(XREF_DATA)));
  SWIG_Python_SetConstant(d, "XREF_JMP",SWIG_From_int(static_cast< int >(XREF_JMP)));
  SWIG_Python_SetConstant(d, "XREF_CALL",SWIG_From_int(static_cast< int >(XREF_CALL)));
  SWIG_Python_SetConstant(d, "ARG_NONE",SWIG_From_int(static_cast< int >(ARG_NONE)));
  SWIG_Python_SetConstant(d, "ARG_BEGIN",SWIG_From_int(static_cast< int >(ARG_BEGIN)));
  SWIG_Python_SetConstant(d, "ARG_MIDDLE",SWIG_From_int(static_cast< int >(ARG_MIDDLE)));
  SWIG_Python_SetConstant(d, "ARG_END",SWIG_From_int(static_cast< int >(ARG_END)));
  SWIG_Python_SetConstant(d, "ARG_SINGLE",SWIG_From_int(static_cast< int >(ARG_SINGLE)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_LOAD",SWIG_From_int(static_cast< int >(DBG_SCRIPT_LOAD)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_UNLOAD",SWIG_From_int(static_cast< int >(DBG_SCRIPT_UNLOAD)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_RUN",SWIG_From_int(static_cast< int >(DBG_SCRIPT_RUN)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_STEP",SWIG_From_int(static_cast< int >(DBG_SCRIPT_STEP)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_BPTOGGLE",SWIG_From_int(static_cast< int >(DBG_SCRIPT_BPTOGGLE)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_BPGET",SWIG_From_int(static_cast< int >(DBG_SCRIPT_BPGET)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_CMDEXEC",SWIG_From_int(static_cast< int >(DBG_SCRIPT_CMDEXEC)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_ABORT",SWIG_From_int(static_cast< int >(DBG_SCRIPT_ABORT)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_GETLINETYPE",SWIG_From_int(static_cast< int >(DBG_SCRIPT_GETLINETYPE)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_SETIP",SWIG_From_int(static_cast< int >(DBG_SCRIPT_SETIP)));
  SWIG_Python_SetConstant(d, "DBG_SCRIPT_GETBRANCHINFO",SWIG_From_int(static_cast< int >(DBG_SCRIPT_GETBRANCHINFO)));
  SWIG_Python_SetConstant(d, "DBG_SYMBOL_ENUM",SWIG_From_int(static_cast< int >(DBG_SYMBOL_ENUM)));
  SWIG_Python_SetConstant(d, "DBG_ASSEMBLE_AT",SWIG_From_int(static_cast< int >(DBG_ASSEMBLE_AT)));
  SWIG_Python_SetConstant(d, "DBG_MODBASE_FROM_NAME",SWIG_From_int(static_cast< int >(DBG_MODBASE_FROM_NAME)));
  SWIG_Python_SetConstant(d, "DBG_DISASM_AT",SWIG_From_int(static_cast< int >(DBG_DISASM_AT)));
  SWIG_Python_SetConstant(d, "DBG_STACK_COMMENT_GET",SWIG_From_int(static_cast< int >(DBG_STACK_COMMENT_GET)));
  SWIG_Python_SetConstant(d, "DBG_GET_THREAD_LIST",SWIG_From_int(static_cast< int >(DBG_GET_THREAD_LIST)));
  SWIG_Python_SetConstant(d, "DBG_SETTINGS_UPDATED",SWIG_From_int(static_cast< int >(DBG_SETTINGS_UPDATED)));
  SWIG_Python_SetConstant(d, "DBG_DISASM_FAST_AT",SWIG_From_int(static_cast< int >(DBG_DISASM_FAST_AT)));
  SWIG_Python_SetConstant(d, "DBG_MENU_ENTRY_CLICKED",SWIG_From_int(static_cast< int >(DBG_MENU_ENTRY_CLICKED)));
  SWIG_Python_SetConstant(d, "DBG_FUNCTION_GET",SWIG_From_int(static_cast< int >(DBG_FUNCTION_GET)));
  SWIG_Python_SetConstant(d, "DBG_FUNCTION_OVERLAPS",SWIG_From_int(static_cast< int >(DBG_FUNCTION_OVERLAPS)));
  SWIG_Python_SetConstant(d, "DBG_FUNCTION_ADD",SWIG_From_int(static_cast< int >(DBG_FUNCTION_ADD)));
  SWIG_Python_SetConstant(d, "DBG_FUNCTION_DEL",SWIG_From_int(static_cast< int >(DBG_FUNCTION_DEL)));
  SWIG_Python_SetConstant(d, "DBG_LOOP_GET",SWIG_From_int(static_cast< int >(DBG_LOOP_GET)));
  SWIG_Python_SetConstant(d, "DBG_LOOP_OVERLAPS",SWIG_From_int(static_cast< int >(DBG_LOOP_OVERLAPS)));
  SWIG_Python_SetConstant(d, "DBG_LOOP_ADD",SWIG_From_int(static_cast< int >(DBG_LOOP_ADD)));
  SWIG_Python_SetConstant(d, "DBG_LOOP_DEL",SWIG_From_int(static_cast< int >(DBG_LOOP_DEL)));
  SWIG_Python_SetConstant(d, "DBG_IS_RUN_LOCKED",SWIG_From_int(static_cast< int >(DBG_IS_RUN_LOCKED)));
  SWIG_Python_SetConstant(d, "DBG_IS_BP_DISABLED",SWIG_From_int(static_cast< int >(DBG_IS_BP_DISABLED)));
  SWIG_Python_SetConstant(d, "DBG_SET_AUTO_COMMENT_AT",SWIG_From_int(static_cast< int >(DBG_SET_AUTO_COMMENT_AT)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_AUTO_COMMENT_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_AUTO_COMMENT_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_SET_AUTO_LABEL_AT",SWIG_From_int(static_cast< int >(DBG_SET_AUTO_LABEL_AT)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_AUTO_LABEL_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_AUTO_LABEL_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_SET_AUTO_BOOKMARK_AT",SWIG_From_int(static_cast< int >(DBG_SET_AUTO_BOOKMARK_AT)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_AUTO_BOOKMARK_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_AUTO_BOOKMARK_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_SET_AUTO_FUNCTION_AT",SWIG_From_int(static_cast< int >(DBG_SET_AUTO_FUNCTION_AT)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_AUTO_FUNCTION_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_AUTO_FUNCTION_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_GET_STRING_AT",SWIG_From_int(static_cast< int >(DBG_GET_STRING_AT)));
  SWIG_Python_SetConstant(d, "DBG_GET_FUNCTIONS",SWIG_From_int(static_cast< int >(DBG_GET_FUNCTIONS)));
  SWIG_Python_SetConstant(d, "DBG_WIN_EVENT",SWIG_From_int(static_cast< int >(DBG_WIN_EVENT)));
  SWIG_Python_SetConstant(d, "DBG_WIN_EVENT_GLOBAL",SWIG_From_int(static_cast< int >(DBG_WIN_EVENT_GLOBAL)));
  SWIG_Python_SetConstant(d, "DBG_INITIALIZE_LOCKS",SWIG_From_int(static_cast< int >(DBG_INITIALIZE_LOCKS)));
  SWIG_Python_SetConstant(d, "DBG_DEINITIALIZE_LOCKS",SWIG_From_int(static_cast< int >(DBG_DEINITIALIZE_LOCKS)));
  SWIG_Python_SetConstant(d, "DBG_GET_TIME_WASTED_COUNTER",SWIG_From_int(static_cast< int >(DBG_GET_TIME_WASTED_COUNTER)));
  SWIG_Python_SetConstant(d, "DBG_SYMBOL_ENUM_FROMCACHE",SWIG_From_int(static_cast< int >(DBG_SYMBOL_ENUM_FROMCACHE)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_COMMENT_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_COMMENT_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_LABEL_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_LABEL_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_BOOKMARK_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_BOOKMARK_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_GET_XREF_COUNT_AT",SWIG_From_int(static_cast< int >(DBG_GET_XREF_COUNT_AT)));
  SWIG_Python_SetConstant(d, "DBG_GET_XREF_TYPE_AT",SWIG_From_int(static_cast< int >(DBG_GET_XREF_TYPE_AT)));
  SWIG_Python_SetConstant(d, "DBG_XREF_ADD",SWIG_From_int(static_cast< int >(DBG_XREF_ADD)));
  SWIG_Python_SetConstant(d, "DBG_XREF_DEL_ALL",SWIG_From_int(static_cast< int >(DBG_XREF_DEL_ALL)));
  SWIG_Python_SetConstant(d, "DBG_XREF_GET",SWIG_From_int(static_cast< int >(DBG_XREF_GET)));
  SWIG_Python_SetConstant(d, "DBG_GET_ENCODE_TYPE_BUFFER",SWIG_From_int(static_cast< int >(DBG_GET_ENCODE_TYPE_BUFFER)));
  SWIG_Python_SetConstant(d, "DBG_ENCODE_TYPE_GET",SWIG_From_int(static_cast< int >(DBG_ENCODE_TYPE_GET)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_ENCODE_TYPE_RANGE",SWIG_From_int(static_cast< int >(DBG_DELETE_ENCODE_TYPE_RANGE)));
  SWIG_Python_SetConstant(d, "DBG_ENCODE_SIZE_GET",SWIG_From_int(static_cast< int >(DBG_ENCODE_SIZE_GET)));
  SWIG_Python_SetConstant(d, "DBG_DELETE_ENCODE_TYPE_SEG",SWIG_From_int(static_cast< int >(DBG_DELETE_ENCODE_TYPE_SEG)));
  SWIG_Python_SetConstant(d, "DBG_RELEASE_ENCODE_TYPE_BUFFER",SWIG_From_int(static_cast< int >(DBG_RELEASE_ENCODE_TYPE_BUFFER)));
  SWIG_Python_SetConstant(d, "DBG_ARGUMENT_GET",SWIG_From_int(static_cast< int >(DBG_ARGUMENT_GET)));
  SWIG_Python_SetConstant(d, "DBG_ARGUMENT_OVERLAPS",SWIG_From_int(static_cast< int >(DBG_ARGUMENT_OVERLAPS)));
  SWIG_Python_SetConstant(d, "DBG_ARGUMENT_ADD",SWIG_From_int(static_cast< int >(DBG_ARGUMENT_ADD)));
  SWIG_Python_SetConstant(d, "DBG_ARGUMENT_DEL",SWIG_From_int(static_cast< int >(DBG_ARGUMENT_DEL)));
  SWIG_Python_SetConstant(d, "DBG_GET_WATCH_LIST",SWIG_From_int(static_cast< int >(DBG_GET_WATCH_LIST)));
  SWIG_Python_SetConstant(d, "DBG_SELCHANGED",SWIG_From_int(static_cast< int >(DBG_SELCHANGED)));
  SWIG_Python_SetConstant(d, "DBG_GET_PROCESS_HANDLE",SWIG_From_int(static_cast< int >(DBG_GET_PROCESS_HANDLE)));
  SWIG_Python_SetConstant(d, "DBG_GET_THREAD_HANDLE",SWIG_From_int(static_cast< int >(DBG_GET_THREAD_HANDLE)));
  SWIG_Python_SetConstant(d, "DBG_GET_PROCESS_ID",SWIG_From_int(static_cast< int >(DBG_GET_PROCESS_ID)));
  SWIG_Python_SetConstant(d, "DBG_GET_THREAD_ID",SWIG_From_int(static_cast< int >(DBG_GET_THREAD_ID)));
  SWIG_Python_SetConstant(d, "DBG_GET_PEB_ADDRESS",SWIG_From_int(static_cast< int >(DBG_GET_PEB_ADDRESS)));
  SWIG_Python_SetConstant(d, "DBG_GET_TEB_ADDRESS",SWIG_From_int(static_cast< int >(DBG_GET_TEB_ADDRESS)));
  SWIG_Python_SetConstant(d, "DBG_ANALYZE_FUNCTION",SWIG_From_int(static_cast< int >(DBG_ANALYZE_FUNCTION)));
  SWIG_Python_SetConstant(d, "DBG_MENU_PREPARE",SWIG_From_int(static_cast< int >(DBG_MENU_PREPARE)));
  SWIG_Python_SetConstant(d, "DBG_GET_SYMBOL_INFO",SWIG_From_int(static_cast< int >(DBG_GET_SYMBOL_INFO)));
  SWIG_Python_SetConstant(d, "linecommand",SWIG_From_int(static_cast< int >(linecommand)));
  SWIG_Python_SetConstant(d, "linebranch",SWIG_From_int(static_cast< int >(linebranch)));
  SWIG_Python_SetConstant(d, "linelabel",SWIG_From_int(static_cast< int >(linelabel)));
  SWIG_Python_SetConstant(d, "linecomment",SWIG_From_int(static_cast< int >(linecomment)));
  SWIG_Python_SetConstant(d, "lineempty",SWIG_From_int(static_cast< int >(lineempty)));
  SWIG_Python_SetConstant(d, "scriptnobranch",SWIG_From_int(static_cast< int >(scriptnobranch)));
  SWIG_Python_SetConstant(d, "scriptjmp",SWIG_From_int(static_cast< int >(scriptjmp)));
  SWIG_Python_SetConstant(d, "scriptjnejnz",SWIG_From_int(static_cast< int >(scriptjnejnz)));
  SWIG_Python_SetConstant(d, "scriptjejz",SWIG_From_int(static_cast< int >(scriptjejz)));
  SWIG_Python_SetConstant(d, "scriptjbjl",SWIG_From_int(static_cast< int >(scriptjbjl)));
  SWIG_Python_SetConstant(d, "scriptjajg",SWIG_From_int(static_cast< int >(scriptjajg)));
  SWIG_Python_SetConstant(d, "scriptjbejle",SWIG_From_int(static_cast< int >(scriptjbejle)));
  SWIG_Python_SetConstant(d, "scriptjaejge",SWIG_From_int(static_cast< int >(scriptjaejge)));
  SWIG_Python_SetConstant(d, "scriptcall",SWIG_From_int(static_cast< int >(scriptcall)));
  SWIG_Python_SetConstant(d, "instr_normal",SWIG_From_int(static_cast< int >(instr_normal)));
  SWIG_Python_SetConstant(d, "instr_branch",SWIG_From_int(static_cast< int >(instr_branch)));
  SWIG_Python_SetConstant(d, "instr_stack",SWIG_From_int(static_cast< int >(instr_stack)));
  SWIG_Python_SetConstant(d, "arg_normal",SWIG_From_int(static_cast< int >(arg_normal)));
  SWIG_Python_SetConstant(d, "arg_memory",SWIG_From_int(static_cast< int >(arg_memory)));
  SWIG_Python_SetConstant(d, "str_none",SWIG_From_int(static_cast< int >(str_none)));
  SWIG_Python_SetConstant(d, "str_ascii",SWIG_From_int(static_cast< int >(str_ascii)));
  SWIG_Python_SetConstant(d, "str_unicode",SWIG_From_int(static_cast< int >(str_unicode)));
  SWIG_Python_SetConstant(d, "_PriorityIdle",SWIG_From_int(static_cast< int >(_PriorityIdle)));
  SWIG_Python_SetConstant(d, "_PriorityAboveNormal",SWIG_From_int(static_cast< int >(_PriorityAboveNormal)));
  SWIG_Python_SetConstant(d, "_PriorityBelowNormal",SWIG_From_int(static_cast< int >(_PriorityBelowNormal)));
  SWIG_Python_SetConstant(d, "_PriorityHighest",SWIG_From_int(static_cast< int >(_PriorityHighest)));
  SWIG_Python_SetConstant(d, "_PriorityLowest",SWIG_From_int(static_cast< int >(_PriorityLowest)));
  SWIG_Python_SetConstant(d, "_PriorityNormal",SWIG_From_int(static_cast< int >(_PriorityNormal)));
  SWIG_Python_SetConstant(d, "_PriorityTimeCritical",SWIG_From_int(static_cast< int >(_PriorityTimeCritical)));
  SWIG_Python_SetConstant(d, "_PriorityUnknown",SWIG_From_int(static_cast< int >(_PriorityUnknown)));
  SWIG_Python_SetConstant(d, "_Executive",SWIG_From_int(static_cast< int >(_Executive)));
  SWIG_Python_SetConstant(d, "_FreePage",SWIG_From_int(static_cast< int >(_FreePage)));
  SWIG_Python_SetConstant(d, "_PageIn",SWIG_From_int(static_cast< int >(_PageIn)));
  SWIG_Python_SetConstant(d, "_PoolAllocation",SWIG_From_int(static_cast< int >(_PoolAllocation)));
  SWIG_Python_SetConstant(d, "_DelayExecution",SWIG_From_int(static_cast< int >(_DelayExecution)));
  SWIG_Python_SetConstant(d, "_Suspended",SWIG_From_int(static_cast< int >(_Suspended)));
  SWIG_Python_SetConstant(d, "_UserRequest",SWIG_From_int(static_cast< int >(_UserRequest)));
  SWIG_Python_SetConstant(d, "_WrExecutive",SWIG_From_int(static_cast< int >(_WrExecutive)));
  SWIG_Python_SetConstant(d, "_WrFreePage",SWIG_From_int(static_cast< int >(_WrFreePage)));
  SWIG_Python_SetConstant(d, "_WrPageIn",SWIG_From_int(static_cast< int >(_WrPageIn)));
  SWIG_Python_SetConstant(d, "_WrPoolAllocation",SWIG_From_int(static_cast< int >(_WrPoolAllocation)));
  SWIG_Python_SetConstant(d, "_WrDelayExecution",SWIG_From_int(static_cast< int >(_WrDelayExecution)));
  SWIG_Python_SetConstant(d, "_WrSuspended",SWIG_From_int(static_cast< int >(_WrSuspended)));
  SWIG_Python_SetConstant(d, "_WrUserRequest",SWIG_From_int(static_cast< int >(_WrUserRequest)));
  SWIG_Python_SetConstant(d, "_WrEventPair",SWIG_From_int(static_cast< int >(_WrEventPair)));
  SWIG_Python_SetConstant(d, "_WrQueue",SWIG_From_int(static_cast< int >(_WrQueue)));
  SWIG_Python_SetConstant(d, "_WrLpcReceive",SWIG_From_int(static_cast< int >(_WrLpcReceive)));
  SWIG_Python_SetConstant(d, "_WrLpcReply",SWIG_From_int(static_cast< int >(_WrLpcReply)));
  SWIG_Python_SetConstant(d, "_WrVirtualMemory",SWIG_From_int(static_cast< int >(_WrVirtualMemory)));
  SWIG_Python_SetConstant(d, "_WrPageOut",SWIG_From_int(static_cast< int >(_WrPageOut)));
  SWIG_Python_SetConstant(d, "_WrRendezvous",SWIG_From_int(static_cast< int >(_WrRendezvous)));
  SWIG_Python_SetConstant(d, "_Spare2",SWIG_From_int(static_cast< int >(_Spare2)));
  SWIG_Python_SetConstant(d, "_Spare3",SWIG_From_int(static_cast< int >(_Spare3)));
  SWIG_Python_SetConstant(d, "_Spare4",SWIG_From_int(static_cast< int >(_Spare4)));
  SWIG_Python_SetConstant(d, "_Spare5",SWIG_From_int(static_cast< int >(_Spare5)));
  SWIG_Python_SetConstant(d, "_WrCalloutStack",SWIG_From_int(static_cast< int >(_WrCalloutStack)));
  SWIG_Python_SetConstant(d, "_WrKernel",SWIG_From_int(static_cast< int >(_WrKernel)));
  SWIG_Python_SetConstant(d, "_WrResource",SWIG_From_int(static_cast< int >(_WrResource)));
  SWIG_Python_SetConstant(d, "_WrPushLock",SWIG_From_int(static_cast< int >(_WrPushLock)));
  SWIG_Python_SetConstant(d, "_WrMutex",SWIG_From_int(static_cast< int >(_WrMutex)));
  SWIG_Python_SetConstant(d, "_WrQuantumEnd",SWIG_From_int(static_cast< int >(_WrQuantumEnd)));
  SWIG_Python_SetConstant(d, "_WrDispatchInt",SWIG_From_int(static_cast< int >(_WrDispatchInt)));
  SWIG_Python_SetConstant(d, "_WrPreempted",SWIG_From_int(static_cast< int >(_WrPreempted)));
  SWIG_Python_SetConstant(d, "_WrYieldExecution",SWIG_From_int(static_cast< int >(_WrYieldExecution)));
  SWIG_Python_SetConstant(d, "_WrFastMutex",SWIG_From_int(static_cast< int >(_WrFastMutex)));
  SWIG_Python_SetConstant(d, "_WrGuardedMutex",SWIG_From_int(static_cast< int >(_WrGuardedMutex)));
  SWIG_Python_SetConstant(d, "_WrRundown",SWIG_From_int(static_cast< int >(_WrRundown)));
  SWIG_Python_SetConstant(d, "size_byte",SWIG_From_int(static_cast< int >(size_byte)));
  SWIG_Python_SetConstant(d, "size_word",SWIG_From_int(static_cast< int >(size_word)));
  SWIG_Python_SetConstant(d, "size_dword",SWIG_From_int(static_cast< int >(size_dword)));
  SWIG_Python_SetConstant(d, "size_qword",SWIG_From_int(static_cast< int >(size_qword)));
  SWIG_Python_SetConstant(d, "enc_unknown",SWIG_From_int(static_cast< int >(enc_unknown)));
  SWIG_Python_SetConstant(d, "enc_byte",SWIG_From_int(static_cast< int >(enc_byte)));
  SWIG_Python_SetConstant(d, "enc_word",SWIG_From_int(static_cast< int >(enc_word)));
  SWIG_Python_SetConstant(d, "enc_dword",SWIG_From_int(static_cast< int >(enc_dword)));
  SWIG_Python_SetConstant(d, "enc_fword",SWIG_From_int(static_cast< int >(enc_fword)));
  SWIG_Python_SetConstant(d, "enc_qword",SWIG_From_int(static_cast< int >(enc_qword)));
  SWIG_Python_SetConstant(d, "enc_tbyte",SWIG_From_int(static_cast< int >(enc_tbyte)));
  SWIG_Python_SetConstant(d, "enc_oword",SWIG_From_int(static_cast< int >(enc_oword)));
  SWIG_Python_SetConstant(d, "enc_mmword",SWIG_From_int(static_cast< int >(enc_mmword)));
  SWIG_Python_SetConstant(d, "enc_xmmword",SWIG_From_int(static_cast< int >(enc_xmmword)));
  SWIG_Python_SetConstant(d, "enc_ymmword",SWIG_From_int(static_cast< int >(enc_ymmword)));
  SWIG_Python_SetConstant(d, "enc_zmmword",SWIG_From_int(static_cast< int >(enc_zmmword)));
  SWIG_Python_SetConstant(d, "enc_real4",SWIG_From_int(static_cast< int >(enc_real4)));
  SWIG_Python_SetConstant(d, "enc_real8",SWIG_From_int(static_cast< int >(enc_real8)));
  SWIG_Python_SetConstant(d, "enc_real10",SWIG_From_int(static_cast< int >(enc_real10)));
  SWIG_Python_SetConstant(d, "enc_ascii",SWIG_From_int(static_cast< int >(enc_ascii)));
  SWIG_Python_SetConstant(d, "enc_unicode",SWIG_From_int(static_cast< int >(enc_unicode)));
  SWIG_Python_SetConstant(d, "enc_code",SWIG_From_int(static_cast< int >(enc_code)));
  SWIG_Python_SetConstant(d, "enc_junk",SWIG_From_int(static_cast< int >(enc_junk)));
  SWIG_Python_SetConstant(d, "enc_middle",SWIG_From_int(static_cast< int >(enc_middle)));
  SWIG_Python_SetConstant(d, "TYPE_UINT",SWIG_From_int(static_cast< int >(TYPE_UINT)));
  SWIG_Python_SetConstant(d, "TYPE_INT",SWIG_From_int(static_cast< int >(TYPE_INT)));
  SWIG_Python_SetConstant(d, "TYPE_FLOAT",SWIG_From_int(static_cast< int >(TYPE_FLOAT)));
  SWIG_Python_SetConstant(d, "TYPE_ASCII",SWIG_From_int(static_cast< int >(TYPE_ASCII)));
  SWIG_Python_SetConstant(d, "TYPE_UNICODE",SWIG_From_int(static_cast< int >(TYPE_UNICODE)));
  SWIG_Python_SetConstant(d, "TYPE_INVALID",SWIG_From_int(static_cast< int >(TYPE_INVALID)));
  SWIG_Python_SetConstant(d, "MODE_DISABLED",SWIG_From_int(static_cast< int >(MODE_DISABLED)));
  SWIG_Python_SetConstant(d, "MODE_ISTRUE",SWIG_From_int(static_cast< int >(MODE_ISTRUE)));
  SWIG_Python_SetConstant(d, "MODE_ISFALSE",SWIG_From_int(static_cast< int >(MODE_ISFALSE)));
  SWIG_Python_SetConstant(d, "MODE_CHANGED",SWIG_From_int(static_cast< int >(MODE_CHANGED)));
  SWIG_Python_SetConstant(d, "MODE_UNCHANGED",SWIG_From_int(static_cast< int >(MODE_UNCHANGED)));
  SWIG_Python_SetConstant(d, "hw_access",SWIG_From_int(static_cast< int >(hw_access)));
  SWIG_Python_SetConstant(d, "hw_write",SWIG_From_int(static_cast< int >(hw_write)));
  SWIG_Python_SetConstant(d, "hw_execute",SWIG_From_int(static_cast< int >(hw_execute)));
  SWIG_Python_SetConstant(d, "mem_access",SWIG_From_int(static_cast< int >(mem_access)));
  SWIG_Python_SetConstant(d, "mem_read",SWIG_From_int(static_cast< int >(mem_read)));
  SWIG_Python_SetConstant(d, "mem_write",SWIG_From_int(static_cast< int >(mem_write)));
  SWIG_Python_SetConstant(d, "mem_execute",SWIG_From_int(static_cast< int >(mem_execute)));
  SWIG_Python_SetConstant(d, "dll_load",SWIG_From_int(static_cast< int >(dll_load)));
  SWIG_Python_SetConstant(d, "dll_unload",SWIG_From_int(static_cast< int >(dll_unload)));
  SWIG_Python_SetConstant(d, "dll_all",SWIG_From_int(static_cast< int >(dll_all)));
  SWIG_Python_SetConstant(d, "ex_firstchance",SWIG_From_int(static_cast< int >(ex_firstchance)));
  SWIG_Python_SetConstant(d, "ex_secondchance",SWIG_From_int(static_cast< int >(ex_secondchance)));
  SWIG_Python_SetConstant(d, "ex_all",SWIG_From_int(static_cast< int >(ex_all)));
  SWIG_Python_SetConstant(d, "hw_byte",SWIG_From_int(static_cast< int >(hw_byte)));
  SWIG_Python_SetConstant(d, "hw_word",SWIG_From_int(static_cast< int >(hw_word)));
  SWIG_Python_SetConstant(d, "hw_dword",SWIG_From_int(static_cast< int >(hw_dword)));
  SWIG_Python_SetConstant(d, "hw_qword",SWIG_From_int(static_cast< int >(hw_qword)));
  SWIG_Python_SetConstant(d, "sym_import",SWIG_From_int(static_cast< int >(sym_import)));
  SWIG_Python_SetConstant(d, "sym_export",SWIG_From_int(static_cast< int >(sym_export)));
  SWIG_Python_SetConstant(d, "sym_symbol",SWIG_From_int(static_cast< int >(sym_symbol)));
  SWIG_Python_SetConstant(d, "TYPE_VALUE",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "TYPE_MEMORY",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "TYPE_ADDR",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "GUI_PLUGIN_MENU",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "GUI_DISASM_MENU",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "GUI_DUMP_MENU",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "GUI_STACK_MENU",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "GUI_DISASSEMBLY",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "GUI_DUMP",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "GUI_STACK",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "GUI_GRAPH",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "GUI_MEMMAP",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "GUI_SYMMOD",SWIG_From_int(static_cast< int >(5)));
  SWIG_Python_SetConstant(d, "GUI_MAX_LINE_SIZE",SWIG_From_int(static_cast< int >(65536)));
  SWIG_Python_SetConstant(d, "GUI_MAX_DISASSEMBLY_SIZE",SWIG_From_int(static_cast< int >(2048)));
  SWIG_Python_SetConstant(d, "GUI_DISASSEMBLE_AT",SWIG_From_int(static_cast< int >(GUI_DISASSEMBLE_AT)));
  SWIG_Python_SetConstant(d, "GUI_SET_DEBUG_STATE",SWIG_From_int(static_cast< int >(GUI_SET_DEBUG_STATE)));
  SWIG_Python_SetConstant(d, "GUI_ADD_MSG_TO_LOG",SWIG_From_int(static_cast< int >(GUI_ADD_MSG_TO_LOG)));
  SWIG_Python_SetConstant(d, "GUI_CLEAR_LOG",SWIG_From_int(static_cast< int >(GUI_CLEAR_LOG)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_REGISTER_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_REGISTER_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_DISASSEMBLY_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_DISASSEMBLY_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_BREAKPOINTS_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_BREAKPOINTS_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_WINDOW_TITLE",SWIG_From_int(static_cast< int >(GUI_UPDATE_WINDOW_TITLE)));
  SWIG_Python_SetConstant(d, "GUI_GET_WINDOW_HANDLE",SWIG_From_int(static_cast< int >(GUI_GET_WINDOW_HANDLE)));
  SWIG_Python_SetConstant(d, "GUI_DUMP_AT",SWIG_From_int(static_cast< int >(GUI_DUMP_AT)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_ADD",SWIG_From_int(static_cast< int >(GUI_SCRIPT_ADD)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_CLEAR",SWIG_From_int(static_cast< int >(GUI_SCRIPT_CLEAR)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_SETIP",SWIG_From_int(static_cast< int >(GUI_SCRIPT_SETIP)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_ERROR",SWIG_From_int(static_cast< int >(GUI_SCRIPT_ERROR)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_SETTITLE",SWIG_From_int(static_cast< int >(GUI_SCRIPT_SETTITLE)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_SETINFOLINE",SWIG_From_int(static_cast< int >(GUI_SCRIPT_SETINFOLINE)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_MESSAGE",SWIG_From_int(static_cast< int >(GUI_SCRIPT_MESSAGE)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_MSGYN",SWIG_From_int(static_cast< int >(GUI_SCRIPT_MSGYN)));
  SWIG_Python_SetConstant(d, "GUI_SYMBOL_LOG_ADD",SWIG_From_int(static_cast< int >(GUI_SYMBOL_LOG_ADD)));
  SWIG_Python_SetConstant(d, "GUI_SYMBOL_LOG_CLEAR",SWIG_From_int(static_cast< int >(GUI_SYMBOL_LOG_CLEAR)));
  SWIG_Python_SetConstant(d, "GUI_SYMBOL_SET_PROGRESS",SWIG_From_int(static_cast< int >(GUI_SYMBOL_SET_PROGRESS)));
  SWIG_Python_SetConstant(d, "GUI_SYMBOL_UPDATE_MODULE_LIST",SWIG_From_int(static_cast< int >(GUI_SYMBOL_UPDATE_MODULE_LIST)));
  SWIG_Python_SetConstant(d, "GUI_REF_ADDCOLUMN",SWIG_From_int(static_cast< int >(GUI_REF_ADDCOLUMN)));
  SWIG_Python_SetConstant(d, "GUI_REF_SETROWCOUNT",SWIG_From_int(static_cast< int >(GUI_REF_SETROWCOUNT)));
  SWIG_Python_SetConstant(d, "GUI_REF_GETROWCOUNT",SWIG_From_int(static_cast< int >(GUI_REF_GETROWCOUNT)));
  SWIG_Python_SetConstant(d, "GUI_REF_DELETEALLCOLUMNS",SWIG_From_int(static_cast< int >(GUI_REF_DELETEALLCOLUMNS)));
  SWIG_Python_SetConstant(d, "GUI_REF_SETCELLCONTENT",SWIG_From_int(static_cast< int >(GUI_REF_SETCELLCONTENT)));
  SWIG_Python_SetConstant(d, "GUI_REF_GETCELLCONTENT",SWIG_From_int(static_cast< int >(GUI_REF_GETCELLCONTENT)));
  SWIG_Python_SetConstant(d, "GUI_REF_RELOADDATA",SWIG_From_int(static_cast< int >(GUI_REF_RELOADDATA)));
  SWIG_Python_SetConstant(d, "GUI_REF_SETSINGLESELECTION",SWIG_From_int(static_cast< int >(GUI_REF_SETSINGLESELECTION)));
  SWIG_Python_SetConstant(d, "GUI_REF_SETPROGRESS",SWIG_From_int(static_cast< int >(GUI_REF_SETPROGRESS)));
  SWIG_Python_SetConstant(d, "GUI_REF_SETCURRENTTASKPROGRESS",SWIG_From_int(static_cast< int >(GUI_REF_SETCURRENTTASKPROGRESS)));
  SWIG_Python_SetConstant(d, "GUI_REF_SETSEARCHSTARTCOL",SWIG_From_int(static_cast< int >(GUI_REF_SETSEARCHSTARTCOL)));
  SWIG_Python_SetConstant(d, "GUI_STACK_DUMP_AT",SWIG_From_int(static_cast< int >(GUI_STACK_DUMP_AT)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_DUMP_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_DUMP_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_THREAD_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_THREAD_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_ADD_RECENT_FILE",SWIG_From_int(static_cast< int >(GUI_ADD_RECENT_FILE)));
  SWIG_Python_SetConstant(d, "GUI_SET_LAST_EXCEPTION",SWIG_From_int(static_cast< int >(GUI_SET_LAST_EXCEPTION)));
  SWIG_Python_SetConstant(d, "GUI_GET_DISASSEMBLY",SWIG_From_int(static_cast< int >(GUI_GET_DISASSEMBLY)));
  SWIG_Python_SetConstant(d, "GUI_MENU_ADD",SWIG_From_int(static_cast< int >(GUI_MENU_ADD)));
  SWIG_Python_SetConstant(d, "GUI_MENU_ADD_ENTRY",SWIG_From_int(static_cast< int >(GUI_MENU_ADD_ENTRY)));
  SWIG_Python_SetConstant(d, "GUI_MENU_ADD_SEPARATOR",SWIG_From_int(static_cast< int >(GUI_MENU_ADD_SEPARATOR)));
  SWIG_Python_SetConstant(d, "GUI_MENU_CLEAR",SWIG_From_int(static_cast< int >(GUI_MENU_CLEAR)));
  SWIG_Python_SetConstant(d, "GUI_SELECTION_GET",SWIG_From_int(static_cast< int >(GUI_SELECTION_GET)));
  SWIG_Python_SetConstant(d, "GUI_SELECTION_SET",SWIG_From_int(static_cast< int >(GUI_SELECTION_SET)));
  SWIG_Python_SetConstant(d, "GUI_GETLINE_WINDOW",SWIG_From_int(static_cast< int >(GUI_GETLINE_WINDOW)));
  SWIG_Python_SetConstant(d, "GUI_AUTOCOMPLETE_ADDCMD",SWIG_From_int(static_cast< int >(GUI_AUTOCOMPLETE_ADDCMD)));
  SWIG_Python_SetConstant(d, "GUI_AUTOCOMPLETE_DELCMD",SWIG_From_int(static_cast< int >(GUI_AUTOCOMPLETE_DELCMD)));
  SWIG_Python_SetConstant(d, "GUI_AUTOCOMPLETE_CLEARALL",SWIG_From_int(static_cast< int >(GUI_AUTOCOMPLETE_CLEARALL)));
  SWIG_Python_SetConstant(d, "GUI_SCRIPT_ENABLEHIGHLIGHTING",SWIG_From_int(static_cast< int >(GUI_SCRIPT_ENABLEHIGHLIGHTING)));
  SWIG_Python_SetConstant(d, "GUI_ADD_MSG_TO_STATUSBAR",SWIG_From_int(static_cast< int >(GUI_ADD_MSG_TO_STATUSBAR)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_SIDEBAR",SWIG_From_int(static_cast< int >(GUI_UPDATE_SIDEBAR)));
  SWIG_Python_SetConstant(d, "GUI_REPAINT_TABLE_VIEW",SWIG_From_int(static_cast< int >(GUI_REPAINT_TABLE_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_PATCHES",SWIG_From_int(static_cast< int >(GUI_UPDATE_PATCHES)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_CALLSTACK",SWIG_From_int(static_cast< int >(GUI_UPDATE_CALLSTACK)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_SEHCHAIN",SWIG_From_int(static_cast< int >(GUI_UPDATE_SEHCHAIN)));
  SWIG_Python_SetConstant(d, "GUI_SYMBOL_REFRESH_CURRENT",SWIG_From_int(static_cast< int >(GUI_SYMBOL_REFRESH_CURRENT)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_MEMORY_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_MEMORY_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_REF_INITIALIZE",SWIG_From_int(static_cast< int >(GUI_REF_INITIALIZE)));
  SWIG_Python_SetConstant(d, "GUI_LOAD_SOURCE_FILE",SWIG_From_int(static_cast< int >(GUI_LOAD_SOURCE_FILE)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_ICON",SWIG_From_int(static_cast< int >(GUI_MENU_SET_ICON)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_ENTRY_ICON",SWIG_From_int(static_cast< int >(GUI_MENU_SET_ENTRY_ICON)));
  SWIG_Python_SetConstant(d, "GUI_SHOW_CPU",SWIG_From_int(static_cast< int >(GUI_SHOW_CPU)));
  SWIG_Python_SetConstant(d, "GUI_ADD_QWIDGET_TAB",SWIG_From_int(static_cast< int >(GUI_ADD_QWIDGET_TAB)));
  SWIG_Python_SetConstant(d, "GUI_SHOW_QWIDGET_TAB",SWIG_From_int(static_cast< int >(GUI_SHOW_QWIDGET_TAB)));
  SWIG_Python_SetConstant(d, "GUI_CLOSE_QWIDGET_TAB",SWIG_From_int(static_cast< int >(GUI_CLOSE_QWIDGET_TAB)));
  SWIG_Python_SetConstant(d, "GUI_EXECUTE_ON_GUI_THREAD",SWIG_From_int(static_cast< int >(GUI_EXECUTE_ON_GUI_THREAD)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_TIME_WASTED_COUNTER",SWIG_From_int(static_cast< int >(GUI_UPDATE_TIME_WASTED_COUNTER)));
  SWIG_Python_SetConstant(d, "GUI_SET_GLOBAL_NOTES",SWIG_From_int(static_cast< int >(GUI_SET_GLOBAL_NOTES)));
  SWIG_Python_SetConstant(d, "GUI_GET_GLOBAL_NOTES",SWIG_From_int(static_cast< int >(GUI_GET_GLOBAL_NOTES)));
  SWIG_Python_SetConstant(d, "GUI_SET_DEBUGGEE_NOTES",SWIG_From_int(static_cast< int >(GUI_SET_DEBUGGEE_NOTES)));
  SWIG_Python_SetConstant(d, "GUI_GET_DEBUGGEE_NOTES",SWIG_From_int(static_cast< int >(GUI_GET_DEBUGGEE_NOTES)));
  SWIG_Python_SetConstant(d, "GUI_DUMP_AT_N",SWIG_From_int(static_cast< int >(GUI_DUMP_AT_N)));
  SWIG_Python_SetConstant(d, "GUI_DISPLAY_WARNING",SWIG_From_int(static_cast< int >(GUI_DISPLAY_WARNING)));
  SWIG_Python_SetConstant(d, "GUI_REGISTER_SCRIPT_LANG",SWIG_From_int(static_cast< int >(GUI_REGISTER_SCRIPT_LANG)));
  SWIG_Python_SetConstant(d, "GUI_UNREGISTER_SCRIPT_LANG",SWIG_From_int(static_cast< int >(GUI_UNREGISTER_SCRIPT_LANG)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_ARGUMENT_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_ARGUMENT_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_FOCUS_VIEW",SWIG_From_int(static_cast< int >(GUI_FOCUS_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_WATCH_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_WATCH_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_LOAD_GRAPH",SWIG_From_int(static_cast< int >(GUI_LOAD_GRAPH)));
  SWIG_Python_SetConstant(d, "GUI_GRAPH_AT",SWIG_From_int(static_cast< int >(GUI_GRAPH_AT)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_GRAPH_VIEW",SWIG_From_int(static_cast< int >(GUI_UPDATE_GRAPH_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_SET_LOG_ENABLED",SWIG_From_int(static_cast< int >(GUI_SET_LOG_ENABLED)));
  SWIG_Python_SetConstant(d, "GUI_ADD_FAVOURITE_TOOL",SWIG_From_int(static_cast< int >(GUI_ADD_FAVOURITE_TOOL)));
  SWIG_Python_SetConstant(d, "GUI_ADD_FAVOURITE_COMMAND",SWIG_From_int(static_cast< int >(GUI_ADD_FAVOURITE_COMMAND)));
  SWIG_Python_SetConstant(d, "GUI_SET_FAVOURITE_TOOL_SHORTCUT",SWIG_From_int(static_cast< int >(GUI_SET_FAVOURITE_TOOL_SHORTCUT)));
  SWIG_Python_SetConstant(d, "GUI_FOLD_DISASSEMBLY",SWIG_From_int(static_cast< int >(GUI_FOLD_DISASSEMBLY)));
  SWIG_Python_SetConstant(d, "GUI_SELECT_IN_MEMORY_MAP",SWIG_From_int(static_cast< int >(GUI_SELECT_IN_MEMORY_MAP)));
  SWIG_Python_SetConstant(d, "GUI_GET_ACTIVE_VIEW",SWIG_From_int(static_cast< int >(GUI_GET_ACTIVE_VIEW)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_ENTRY_CHECKED",SWIG_From_int(static_cast< int >(GUI_MENU_SET_ENTRY_CHECKED)));
  SWIG_Python_SetConstant(d, "GUI_ADD_INFO_LINE",SWIG_From_int(static_cast< int >(GUI_ADD_INFO_LINE)));
  SWIG_Python_SetConstant(d, "GUI_PROCESS_EVENTS",SWIG_From_int(static_cast< int >(GUI_PROCESS_EVENTS)));
  SWIG_Python_SetConstant(d, "GUI_TYPE_ADDNODE",SWIG_From_int(static_cast< int >(GUI_TYPE_ADDNODE)));
  SWIG_Python_SetConstant(d, "GUI_TYPE_CLEAR",SWIG_From_int(static_cast< int >(GUI_TYPE_CLEAR)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_TYPE_WIDGET",SWIG_From_int(static_cast< int >(GUI_UPDATE_TYPE_WIDGET)));
  SWIG_Python_SetConstant(d, "GUI_CLOSE_APPLICATION",SWIG_From_int(static_cast< int >(GUI_CLOSE_APPLICATION)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_VISIBLE",SWIG_From_int(static_cast< int >(GUI_MENU_SET_VISIBLE)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_ENTRY_VISIBLE",SWIG_From_int(static_cast< int >(GUI_MENU_SET_ENTRY_VISIBLE)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_NAME",SWIG_From_int(static_cast< int >(GUI_MENU_SET_NAME)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_ENTRY_NAME",SWIG_From_int(static_cast< int >(GUI_MENU_SET_ENTRY_NAME)));
  SWIG_Python_SetConstant(d, "GUI_FLUSH_LOG",SWIG_From_int(static_cast< int >(GUI_FLUSH_LOG)));
  SWIG_Python_SetConstant(d, "GUI_MENU_SET_ENTRY_HOTKEY",SWIG_From_int(static_cast< int >(GUI_MENU_SET_ENTRY_HOTKEY)));
  SWIG_Python_SetConstant(d, "GUI_REF_SEARCH_GETROWCOUNT",SWIG_From_int(static_cast< int >(GUI_REF_SEARCH_GETROWCOUNT)));
  SWIG_Python_SetConstant(d, "GUI_REF_SEARCH_GETCELLCONTENT",SWIG_From_int(static_cast< int >(GUI_REF_SEARCH_GETCELLCONTENT)));
  SWIG_Python_SetConstant(d, "GUI_MENU_REMOVE",SWIG_From_int(static_cast< int >(GUI_MENU_REMOVE)));
  SWIG_Python_SetConstant(d, "GUI_REF_ADDCOMMAND",SWIG_From_int(static_cast< int >(GUI_REF_ADDCOMMAND)));
  SWIG_Python_SetConstant(d, "GUI_OPEN_TRACE_FILE",SWIG_From_int(static_cast< int >(GUI_OPEN_TRACE_FILE)));
  SWIG_Python_SetConstant(d, "GUI_UPDATE_TRACE_BROWSER",SWIG_From_int(static_cast< int >(GUI_UPDATE_TRACE_BROWSER)));
  SWIG_Python_SetConstant(d, "GUI_INVALIDATE_SYMBOL_SOURCE",SWIG_From_int(static_cast< int >(GUI_INVALIDATE_SYMBOL_SOURCE)));
  SWIG_Python_SetConstant(d, "InstructionBody",SWIG_From_int(static_cast< int >(InstructionBody)));
  SWIG_Python_SetConstant(d, "InstructionHeading",SWIG_From_int(static_cast< int >(InstructionHeading)));
  SWIG_Python_SetConstant(d, "InstructionTailing",SWIG_From_int(static_cast< int >(InstructionTailing)));
  SWIG_Python_SetConstant(d, "InstructionOverlapped",SWIG_From_int(static_cast< int >(InstructionOverlapped)));
  SWIG_Python_SetConstant(d, "DataByte",SWIG_From_int(static_cast< int >(DataByte)));
  SWIG_Python_SetConstant(d, "DataWord",SWIG_From_int(static_cast< int >(DataWord)));
  SWIG_Python_SetConstant(d, "DataDWord",SWIG_From_int(static_cast< int >(DataDWord)));
  SWIG_Python_SetConstant(d, "DataQWord",SWIG_From_int(static_cast< int >(DataQWord)));
  SWIG_Python_SetConstant(d, "DataFloat",SWIG_From_int(static_cast< int >(DataFloat)));
  SWIG_Python_SetConstant(d, "DataDouble",SWIG_From_int(static_cast< int >(DataDouble)));
  SWIG_Python_SetConstant(d, "DataLongDouble",SWIG_From_int(static_cast< int >(DataLongDouble)));
  SWIG_Python_SetConstant(d, "DataXMM",SWIG_From_int(static_cast< int >(DataXMM)));
  SWIG_Python_SetConstant(d, "DataYMM",SWIG_From_int(static_cast< int >(DataYMM)));
  SWIG_Python_SetConstant(d, "DataMMX",SWIG_From_int(static_cast< int >(DataMMX)));
  SWIG_Python_SetConstant(d, "DataMixed",SWIG_From_int(static_cast< int >(DataMixed)));
  SWIG_Python_SetConstant(d, "InstructionDataMixed",SWIG_From_int(static_cast< int >(InstructionDataMixed)));
  SWIG_Python_SetConstant(d, "TraceRecordNone",SWIG_From_int(static_cast< int >(TraceRecordNone)));
  SWIG_Python_SetConstant(d, "TraceRecordBitExec",SWIG_From_int(static_cast< int >(TraceRecordBitExec)));
  SWIG_Python_SetConstant(d, "TraceRecordByteWithExecTypeAndCounter",SWIG_From_int(static_cast< int >(TraceRecordByteWithExecTypeAndCounter)));
  SWIG_Python_SetConstant(d, "TraceRecordWordWithExecTypeAndCounter",SWIG_From_int(static_cast< int >(TraceRecordWordWithExecTypeAndCounter)));
  SWIG_Python_SetConstant(d, "TCP_ADDR_SIZE",SWIG_From_int(static_cast< int >(50)));
  SWIG_Python_SetConstant(d, "HardwareAccess",SWIG_From_int(static_cast< int >(Script::Debug::HardwareAccess)));
  SWIG_Python_SetConstant(d, "HardwareWrite",SWIG_From_int(static_cast< int >(Script::Debug::HardwareWrite)));
  SWIG_Python_SetConstant(d, "HardwareExecute",SWIG_From_int(static_cast< int >(Script::Debug::HardwareExecute)));
  SWIG_Python_SetConstant(d, "ZF",SWIG_From_int(static_cast< int >(Script::Flag::ZF)));
  SWIG_Python_SetConstant(d, "OF",SWIG_From_int(static_cast< int >(Script::Flag::OF)));
  SWIG_Python_SetConstant(d, "CF",SWIG_From_int(static_cast< int >(Script::Flag::CF)));
  SWIG_Python_SetConstant(d, "PF",SWIG_From_int(static_cast< int >(Script::Flag::PF)));
  SWIG_Python_SetConstant(d, "SF",SWIG_From_int(static_cast< int >(Script::Flag::SF)));
  SWIG_Python_SetConstant(d, "TF",SWIG_From_int(static_cast< int >(Script::Flag::TF)));
  SWIG_Python_SetConstant(d, "AF",SWIG_From_int(static_cast< int >(Script::Flag::AF)));
  SWIG_Python_SetConstant(d, "DF",SWIG_From_int(static_cast< int >(Script::Flag::DF)));
  SWIG_Python_SetConstant(d, "IF",SWIG_From_int(static_cast< int >(Script::Flag::IF)));
  SWIG_Python_SetConstant(d, "DisassemblyWindow",SWIG_From_int(static_cast< int >(Script::Gui::DisassemblyWindow)));
  SWIG_Python_SetConstant(d, "DumpWindow",SWIG_From_int(static_cast< int >(Script::Gui::DumpWindow)));
  SWIG_Python_SetConstant(d, "StackWindow",SWIG_From_int(static_cast< int >(Script::Gui::StackWindow)));
  SWIG_Python_SetConstant(d, "GraphWindow",SWIG_From_int(static_cast< int >(Script::Gui::GraphWindow)));
  SWIG_Python_SetConstant(d, "MemMapWindow",SWIG_From_int(static_cast< int >(Script::Gui::MemMapWindow)));
  SWIG_Python_SetConstant(d, "SymModWindow",SWIG_From_int(static_cast< int >(Script::Gui::SymModWindow)));
  SWIG_Python_SetConstant(d, "DR0",SWIG_From_int(static_cast< int >(Script::Register::DR0)));
  SWIG_Python_SetConstant(d, "DR1",SWIG_From_int(static_cast< int >(Script::Register::DR1)));
  SWIG_Python_SetConstant(d, "DR2",SWIG_From_int(static_cast< int >(Script::Register::DR2)));
  SWIG_Python_SetConstant(d, "DR3",SWIG_From_int(static_cast< int >(Script::Register::DR3)));
  SWIG_Python_SetConstant(d, "DR6",SWIG_From_int(static_cast< int >(Script::Register::DR6)));
  SWIG_Python_SetConstant(d, "DR7",SWIG_From_int(static_cast< int >(Script::Register::DR7)));
  SWIG_Python_SetConstant(d, "EAX",SWIG_From_int(static_cast< int >(Script::Register::EAX)));
  SWIG_Python_SetConstant(d, "AX",SWIG_From_int(static_cast< int >(Script::Register::AX)));
  SWIG_Python_SetConstant(d, "AH",SWIG_From_int(static_cast< int >(Script::Register::AH)));
  SWIG_Python_SetConstant(d, "AL",SWIG_From_int(static_cast< int >(Script::Register::AL)));
  SWIG_Python_SetConstant(d, "EBX",SWIG_From_int(static_cast< int >(Script::Register::EBX)));
  SWIG_Python_SetConstant(d, "BX",SWIG_From_int(static_cast< int >(Script::Register::BX)));
  SWIG_Python_SetConstant(d, "BH",SWIG_From_int(static_cast< int >(Script::Register::BH)));
  SWIG_Python_SetConstant(d, "BL",SWIG_From_int(static_cast< int >(Script::Register::BL)));
  SWIG_Python_SetConstant(d, "ECX",SWIG_From_int(static_cast< int >(Script::Register::ECX)));
  SWIG_Python_SetConstant(d, "CX",SWIG_From_int(static_cast< int >(Script::Register::CX)));
  SWIG_Python_SetConstant(d, "CH",SWIG_From_int(static_cast< int >(Script::Register::CH)));
  SWIG_Python_SetConstant(d, "CL",SWIG_From_int(static_cast< int >(Script::Register::CL)));
  SWIG_Python_SetConstant(d, "EDX",SWIG_From_int(static_cast< int >(Script::Register::EDX)));
  SWIG_Python_SetConstant(d, "DX",SWIG_From_int(static_cast< int >(Script::Register::DX)));
  SWIG_Python_SetConstant(d, "DH",SWIG_From_int(static_cast< int >(Script::Register::DH)));
  SWIG_Python_SetConstant(d, "DL",SWIG_From_int(static_cast< int >(Script::Register::DL)));
  SWIG_Python_SetConstant(d, "EDI",SWIG_From_int(static_cast< int >(Script::Register::EDI)));
  SWIG_Python_SetConstant(d, "DI",SWIG_From_int(static_cast< int >(Script::Register::DI)));
  SWIG_Python_SetConstant(d, "ESI",SWIG_From_int(static_cast< int >(Script::Register::ESI)));
  SWIG_Python_SetConstant(d, "SI",SWIG_From_int(static_cast< int >(Script::Register::SI)));
  SWIG_Python_SetConstant(d, "EBP",SWIG_From_int(static_cast< int >(Script::Register::EBP)));
  SWIG_Python_SetConstant(d, "BP",SWIG_From_int(static_cast< int >(Script::Register::BP)));
  SWIG_Python_SetConstant(d, "ESP",SWIG_From_int(static_cast< int >(Script::Register::ESP)));
  SWIG_Python_SetConstant(d, "SP",SWIG_From_int(static_cast< int >(Script::Register::SP)));
  SWIG_Python_SetConstant(d, "EIP",SWIG_From_int(static_cast< int >(Script::Register::EIP)));
  SWIG_Python_SetConstant(d, "RAX",SWIG_From_int(static_cast< int >(Script::Register::RAX)));
  SWIG_Python_SetConstant(d, "RBX",SWIG_From_int(static_cast< int >(Script::Register::RBX)));
  SWIG_Python_SetConstant(d, "RCX",SWIG_From_int(static_cast< int >(Script::Register::RCX)));
  SWIG_Python_SetConstant(d, "RDX",SWIG_From_int(static_cast< int >(Script::Register::RDX)));
  SWIG_Python_SetConstant(d, "RSI",SWIG_From_int(static_cast< int >(Script::Register::RSI)));
  SWIG_Python_SetConstant(d, "SIL",SWIG_From_int(static_cast< int >(Script::Register::SIL)));
  SWIG_Python_SetConstant(d, "RDI",SWIG_From_int(static_cast< int >(Script::Register::RDI)));
  SWIG_Python_SetConstant(d, "DIL",SWIG_From_int(static_cast< int >(Script::Register::DIL)));
  SWIG_Python_SetConstant(d, "RBP",SWIG_From_int(static_cast< int >(Script::Register::RBP)));
  SWIG_Python_SetConstant(d, "BPL",SWIG_From_int(static_cast< int >(Script::Register::BPL)));
  SWIG_Python_SetConstant(d, "RSP",SWIG_From_int(static_cast< int >(Script::Register::RSP)));
  SWIG_Python_SetConstant(d, "SPL",SWIG_From_int(static_cast< int >(Script::Register::SPL)));
  SWIG_Python_SetConstant(d, "RIP",SWIG_From_int(static_cast< int >(Script::Register::RIP)));
  SWIG_Python_SetConstant(d, "R8",SWIG_From_int(static_cast< int >(Script::Register::R8)));
  SWIG_Python_SetConstant(d, "R8D",SWIG_From_int(static_cast< int >(Script::Register::R8D)));
  SWIG_Python_SetConstant(d, "R8W",SWIG_From_int(static_cast< int >(Script::Register::R8W)));
  SWIG_Python_SetConstant(d, "R8B",SWIG_From_int(static_cast< int >(Script::Register::R8B)));
  SWIG_Python_SetConstant(d, "R9",SWIG_From_int(static_cast< int >(Script::Register::R9)));
  SWIG_Python_SetConstant(d, "R9D",SWIG_From_int(static_cast< int >(Script::Register::R9D)));
  SWIG_Python_SetConstant(d, "R9W",SWIG_From_int(static_cast< int >(Script::Register::R9W)));
  SWIG_Python_SetConstant(d, "R9B",SWIG_From_int(static_cast< int >(Script::Register::R9B)));
  SWIG_Python_SetConstant(d, "R10",SWIG_From_int(static_cast< int >(Script::Register::R10)));
  SWIG_Python_SetConstant(d, "R10D",SWIG_From_int(static_cast< int >(Script::Register::R10D)));
  SWIG_Python_SetConstant(d, "R10W",SWIG_From_int(static_cast< int >(Script::Register::R10W)));
  SWIG_Python_SetConstant(d, "R10B",SWIG_From_int(static_cast< int >(Script::Register::R10B)));
  SWIG_Python_SetConstant(d, "R11",SWIG_From_int(static_cast< int >(Script::Register::R11)));
  SWIG_Python_SetConstant(d, "R11D",SWIG_From_int(static_cast< int >(Script::Register::R11D)));
  SWIG_Python_SetConstant(d, "R11W",SWIG_From_int(static_cast< int >(Script::Register::R11W)));
  SWIG_Python_SetConstant(d, "R11B",SWIG_From_int(static_cast< int >(Script::Register::R11B)));
  SWIG_Python_SetConstant(d, "R12",SWIG_From_int(static_cast< int >(Script::Register::R12)));
  SWIG_Python_SetConstant(d, "R12D",SWIG_From_int(static_cast< int >(Script::Register::R12D)));
  SWIG_Python_SetConstant(d, "R12W",SWIG_From_int(static_cast< int >(Script::Register::R12W)));
  SWIG_Python_SetConstant(d, "R12B",SWIG_From_int(static_cast< int >(Script::Register::R12B)));
  SWIG_Python_SetConstant(d, "R13",SWIG_From_int(static_cast< int >(Script::Register::R13)));
  SWIG_Python_SetConstant(d, "R13D",SWIG_From_int(static_cast< int >(Script::Register::R13D)));
  SWIG_Python_SetConstant(d, "R13W",SWIG_From_int(static_cast< int >(Script::Register::R13W)));
  SWIG_Python_SetConstant(d, "R13B",SWIG_From_int(static_cast< int >(Script::Register::R13B)));
  SWIG_Python_SetConstant(d, "R14",SWIG_From_int(static_cast< int >(Script::Register::R14)));
  SWIG_Python_SetConstant(d, "R14D",SWIG_From_int(static_cast< int >(Script::Register::R14D)));
  SWIG_Python_SetConstant(d, "R14W",SWIG_From_int(static_cast< int >(Script::Register::R14W)));
  SWIG_Python_SetConstant(d, "R14B",SWIG_From_int(static_cast< int >(Script::Register::R14B)));
  SWIG_Python_SetConstant(d, "R15",SWIG_From_int(static_cast< int >(Script::Register::R15)));
  SWIG_Python_SetConstant(d, "R15D",SWIG_From_int(static_cast< int >(Script::Register::R15D)));
  SWIG_Python_SetConstant(d, "R15W",SWIG_From_int(static_cast< int >(Script::Register::R15W)));
  SWIG_Python_SetConstant(d, "R15B",SWIG_From_int(static_cast< int >(Script::Register::R15B)));
  SWIG_Python_SetConstant(d, "CIP",SWIG_From_int(static_cast< int >(Script::Register::CIP)));
  SWIG_Python_SetConstant(d, "CSP",SWIG_From_int(static_cast< int >(Script::Register::CSP)));
  SWIG_Python_SetConstant(d, "CAX",SWIG_From_int(static_cast< int >(Script::Register::CAX)));
  SWIG_Python_SetConstant(d, "CBX",SWIG_From_int(static_cast< int >(Script::Register::CBX)));
  SWIG_Python_SetConstant(d, "CCX",SWIG_From_int(static_cast< int >(Script::Register::CCX)));
  SWIG_Python_SetConstant(d, "CDX",SWIG_From_int(static_cast< int >(Script::Register::CDX)));
  SWIG_Python_SetConstant(d, "CDI",SWIG_From_int(static_cast< int >(Script::Register::CDI)));
  SWIG_Python_SetConstant(d, "CSI",SWIG_From_int(static_cast< int >(Script::Register::CSI)));
  SWIG_Python_SetConstant(d, "CBP",SWIG_From_int(static_cast< int >(Script::Register::CBP)));
  SWIG_Python_SetConstant(d, "CFLAGS",SWIG_From_int(static_cast< int >(Script::Register::CFLAGS)));
  SWIG_Python_SetConstant(d, "Function",SWIG_From_int(static_cast< int >(Script::Symbol::Function)));
  SWIG_Python_SetConstant(d, "Import",SWIG_From_int(static_cast< int >(Script::Symbol::Import)));
  SWIG_Python_SetConstant(d, "Export",SWIG_From_int(static_cast< int >(Script::Symbol::Export)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

